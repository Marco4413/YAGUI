--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.37.1",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",nfp="1.0.0",nft="1.0.0"}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSEMOVE="mouse_move",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",TERMRESIZE="term_resize",COROUTINE="coroutine",DELETED="DELETED",NONE="NONE",ALL="ALL",SEND="SEND",RECEIVE="RECEIVE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,ONSEND=17,ONRECEIVE=18,ONDRAG=19,ONRESIZE=20,ONPASTE=21,ONHOVER=22,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2,ALIGN_RIGHT=3}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={TOP=string.char(131),BOTTOM=string.char(143),LEFT=string.char(149),RIGHT=string.char(149),MIDDLE=string.char(140),TOPLEFT=string.char(151),TOPRIGHT=string.char(148),BOTTOMLEFT=string.char(138),BOTTOMRIGHT=string.char(133),MIDDLELEFT=string.char(132),MIDDLERIGHT=string.char(136)}local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)n:set_callback(o,p)end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=r or"unknown"r=tostring(r)local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=x:gsub(t,", ")v=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",r,(w+1)/2,E,z)u=true;break end end;if u then error(v,3)return false end;return true end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=table.concat,split=function(F,G)if not string.find(F,G)then return{F}end;local H={}local I=table.concat({"(.-)",G,"()"})local J;for K,L in string.gfind(F,I)do table.insert(H,K)J=L end;table.insert(H,string.sub(F,J))return H end,split_by_char=function(F,M)local N={}local O=1;for w=1,#F do if F:sub(w,w)==M then table.insert(N,w==O and""or F:sub(O,w-1))O=w+1 end end;table.insert(N,F:sub(O,#F))return N end,compare_versions=function(P,Q)local R=g.split(P,".")local S=g.split(Q,".")local T=#R;local U=#S;for w=1,math.min(T,U)do if tonumber(R[w])>tonumber(S[w])then return 1 elseif tonumber(R[w])<tonumber(S[w])then return-1 end end;if T>U then return 1 elseif T<U then return-1 end;return 0 end,escape_magic_characters=function(F)for d,V in next,g.magic_characters do F=F:gsub(table.concat({"[%",V,"]"}),table.concat({"%%%",V}))end;return F end,get_extension=function(W)local X,Y=W:gsub(".*%.","")if Y>0 then return X end;return""end,format_number=function(Z,_)Z=tostring(Z)_=_ or 0;local a0=Z:gsub("(.*)%..*","%1")if _<=0 then return a0 end;local a1=#a0+1;local a2=Z:sub(a1+1,a1+_)a2=a2:reverse():gsub("0*(.*)","%1"):reverse()if#a2>0 then return table.concat({a0,".",a2})end;return a0 end,trim=function(F)return F:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a3,a4)local a5={x=a3 or 0,y=a4 or 0}setmetatable(a5,h.Vector2)return a5 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return self.x*self.x+self.y*self.y end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y)end,unit=function(self)return self/self:length()end,dot=function(self,a6)return self.x*a6.x+self.y*a6.y end,cross=function(self,a6)return self.x*a6.y-self.y*a6.x end,rotate=function(self,a7)local a8=math.cos(a7)local a9=math.sin(a7)return h.Vector2.new(a8*self.x-a9*self.y,a9*self.x+a8*self.y)end,string=function(self,_)if _ then return string.format(table.concat({"(%.",_,"f; %.",_,"f)"}),self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a6)return h.Vector2.new(self.x+a6.x,self.y+a6.y)end,__sub=function(self,a6)return h.Vector2.new(self.x-a6.x,self.y-a6.y)end,__mul=function(self,Z)if type(self)=="number"then return h.Vector2.new(Z.x*self,Z.y*self)else return h.Vector2.new(self.x*Z,self.y*Z)end end,__div=function(self,Z)return h.Vector2.new(self.x/Z,self.y/Z)end,__eq=function(self,a6)return self.x==a6.x and self.y==a6.y end,__lt=function(self,a6)return self:length_sq()<a6:length_sq()end,__le=function(self,a6)return self:length_sq()<=a6:length_sq()end},Vector3={new=function(a3,a4,aa)local ab={x=a3 or 0,y=a4 or 0,z=aa or 0}setmetatable(ab,h.Vector3)return ab end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return self.x*self.x+self.y*self.y+self.z*self.z end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y+self.z*self.z)end,unit=function(self)return self/self:length()end,dot=function(self,a6)return self.x*a6.x+self.y*a6.y+self.z*a6.z end,cross=function(self,a6)return h.Vector3.new(self.y*a6.z-self.z*a6.y,self.z*a6.x-self.x*a6.z,self.x*a6.y-self.y*a6.x)end,rotate=function(self,ac,a7)local a8=math.cos(a7)return a8*self+math.sin(a7)*ac:cross(self)+(1-a8)*ac:dot(self)*ac end,string=function(self,_)if _ then return string.format(table.concat({"(%.",_,"f; %.",_,"f; %.",_,"f)"}),self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a6)return h.Vector3.new(self.x+a6.x,self.y+a6.y,self.z+a6.z)end,__sub=function(self,a6)return h.Vector3.new(self.x-a6.x,self.y-a6.y,self.z-a6.z)end,__mul=function(self,Z)if type(self)=="number"then return h.Vector3.new(Z.x*self,Z.y*self,Z.z*self)else return h.Vector3.new(self.x*Z,self.y*Z,self.z*Z)end end,__div=function(self,Z)return h.Vector3.new(self.x/Z,self.y/Z,self.z/Z)end,__eq=function(self,a6)return self.x==a6.x and self.y==a6.y and self.z==a6.z end,__lt=function(self,a6)return self:length_sq()<a6:length_sq()end,__le=function(self,a6)return self:length_sq()<=a6:length_sq()end},map=function(ad,ae,af,ag,ah,ai)local aj=(ad-ae)/(af-ae)*(ah-ag)+ag;if ai then return h.constrain(aj,ag,ah)end;return aj end,constrain=function(ad,ak,al)return math.min(al,math.max(ak,ad))end,round=function(Z)return math.floor(Z+0.5)end,round_numbers=function(...)local am={...}local an={}for d,Z in next,am do table.insert(an,h.round(Z))end;return table.unpack(an)end,floor_numbers=function(...)local am={...}local ao={}for d,Z in next,am do table.insert(ao,math.floor(Z))end;return table.unpack(ao)end,ceil_numbers=function(...)local am={...}local ap={}for d,Z in next,am do table.insert(ap,math.ceil(Z))end;return table.unpack(ap)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(aq,ad)for ar,as in next,aq do if as==ad then return true,ar end end;return false,nil end,has_key=function(aq,d)if aq[d]~=nil then return true,aq[d]end;return false,nil end,serialise=function(aq,at,au,av,aw,ax,ay,az,aA)local at=at or 0;local ay=ay or"  "local aB=0;local az=az or"\n"local aA=aA or" "if not au then ay,az,aA="","",""end;local aC="root"local aD={[aq]=aC}local function aE(aq,W)local aF=ay:rep(aB+1)local aG=table.concat({"{",az})local function aH(aq)local aI=#aq;local aJ=0;for d,ad in next,aq do local aK=type(d)local aL;if aK=="number"or aK=="boolean"or aK=="nil"then aL=tostring(d)else aL=string.format("%q",tostring(d))end;if not ax and d=="__index"then ad={}end;local aM=type(ad)if aK=="number"and d<=aI and d==aJ+1 then aJ=d;aG=table.concat({aG,aF})else aG=table.concat({aG,string.format("%s[%s]%s=%s",aF,aL,aA,aA)})end;if aM=="table"then if not next(ad)then aG=table.concat({aG,"{}"})elseif at<=-1 or aB<at then if aD[ad]and not av then aG=table.concat({aG,string.format("%q",aD[ad])})else local aN=table.concat({W,"[",aL,"]"})aD[ad]=aN;aB=aB+1;aG=table.concat({aG,aE(ad,aN)})aB=aB-1 end else aG=table.concat({aG,"{}"})end elseif aM=="number"or aM=="boolean"or aM=="nil"then aG=table.concat({aG,string.format("%s",tostring(ad))})else aG=table.concat({aG,string.format("%q",tostring(ad))})end;if next(aq,d)then aG=table.concat({aG,",",az})else aG=table.concat({aG,az})end end end;local aO=getmetatable(aq)if aw and aO then aH(aO)if next(aq)then aG=table.concat({aG:sub(1,#aG-#az),",",aG:sub(#aG-#az+1)})end end;aH(aq)aG=table.concat({aG,ay:rep(aB),"}"})return aG end;return aE(aq,aC)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize,better_unpack=function(aq,w,aP)w=w or 1;aP=aP or#aq;if w<=aP then return aq[w],i.better_unpack(aq,w+1,aP)end end,get=function(aq,...)local W={...}local aQ=aq;for w=1,#W do aQ=aQ[W[w]]end;return aQ end,set=function(ad,aq,...)local W={...}local aR=table.remove(W)local aS=i.get(aq,table.unpack(W))local aT=aS[aR]aS[aR]=ad;return aT end,better_remove=function(aq,...)local aU={...}local aV=#aU;for w=1,#aU do aq[aU[w]]=nil end;local aW,aX=1,{}for w=1,#aq+aV do if aq[w]==nil then aX[#aX+1]=w elseif#aX>0 then aq[aX[aW]],aX[#aX+1],aq[w]=aq[w],w;aW=aW+1 end end end}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aY)return j.colors[aY]end,paint_to_color=function(aZ)return j.paint[aZ]end}for d,ad in next,j.colors do j.paint[ad]=d end;k={in_area=function(a_,b0,a3,a4,b1,b2)if a_>=a3 and a_<a3+b1 then if b0>=a4 and b0<a4+b2 then return true end end;return false end,format_event_table=function(b3)local o={}o.name=b3[1]if o.name=="timer"then o.name=b.TIMER;o.id=o[2]elseif o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=b3[2]o.x=b3[3]o.y=b3[4]elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=b3[2]o.button=1;o.x=b3[3]o.y=b3[4]elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=b3[2]o.x=b3[3]o.y=b3[4]elseif o.name=="mouse_move"then o.name=b.MOUSEMOVE;o.button=b3[2]o.x=b3[3]o.y=b3[4]elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=b3[2]o.x=b3[3]o.y=b3[4]elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=b3[2]o.x=b3[3]o.y=b3[4]elseif o.name=="char"then o.name=b.CHAR;o.char=b3[2]elseif o.name=="key"then o.name=b.KEY;o.key=b3[2]elseif o.name=="key_up"then o.name=b.KEYUP;o.key=b3[2]elseif o.name=="paste"then o.name=b.PASTE;o.paste=b3[2]elseif o.name=="rednet_message"then o.name=b.REDNET;o.from=b3[2]o.message=b3[3]local b4=b3[4]if type(b4)=="number"then o.distance=b4 else o.protocol=tostring(b4)end elseif o.name=="modem_message"then local b5=b3[5]o.name=b.MODEM;o.side=b3[2]o.from=b3[4]o.protocol=b5.sProtocol or""o.message=b5.message elseif o.name=="terminate"then o.name=b.TERMINATE elseif o.name=="term_resize"then o.name=b.TERMRESIZE elseif o.name=="coroutine"then o.name=b.COROUTINE;o.thread=b3[2]o.status=b3[3]o.ok=b3[4]local w=5;if not o.ok then o.error=b3[5]w=w+1 end;o.returned={}for w=w,#b3 do o.returned[#o.returned+1]=b3[w]end else o.parameters={}for d=2,#b3 do table.insert(o.parameters,b3[d])end end;o.raw=b3;return o end}l={_path="/.settings",set=function(b6,ad)settings.set(b6,ad)settings.save(l._path)end,unset=function(b6)settings.unset(b6)settings.save(l._path)end,get=function(b6)return settings.get(b6)end}m={get_monitors=function(b7)local b8={}for d,b9 in next,b7 do if b9=="terminal"then b8[b9]=term else if peripheral.getType(b9)=="monitor"then b8[b9]=peripheral.wrap(b9)end end end;return b8 end,better_print=function(ba,bb,bc,...)local bd=table.concat({...})local be=ba.getTextColor()local bf=ba.getBackgroundColor()if bb then ba.setTextColor(bb)end;if bc then ba.setBackgroundColor(bc)end;print(bd)ba.setTextColor(be)ba.setBackgroundColor(bf)end,better_clear=function(ba)ba.clear()ba.setCursorPos(1,1)end}local bg={lineLow=function(bh,bi,bj,bk,bl,aY)local bm=1;if bi>bk then bm=-1 end;local bn=bk-bi;local bo=bl-bj;local bp=1;if bo<0 then bp=-1;bo=-bo end;local bq=2*bo-bn;local a4=bj;for a3=bi,bk,bm do bh.buffer:set_pixel(a3,a4," ",aY,aY)if bq>0 then a4=a4+bp;bq=bq-2*bn end;bq=bq+2*bo end end,lineHigh=function(bh,bi,bj,bk,bl,aY)local bm=1;if bj>bl then bm=-1 end;local bn=bk-bi;local bo=bl-bj;local br=1;if bn<0 then br=-1;bn=-bn end;local bq=2*bn-bo;local a3=bi;for a4=bj,bl,bm do bh.buffer:set_pixel(a3,a4," ",aY,aY)if bq>0 then a3=a3+br;bq=bq-2*bo end;bq=bq+2*bn end end,get_rect_char=function(a3,a4,bs,bt)if bt==1 then if bs==1 then return e.MIDDLE,true else if a3==1 then return e.MIDDLERIGHT,true elseif a3==bs then return e.MIDDLELEFT,true else return e.MIDDLE,true end end elseif a4==1 then if a3==1 then return e.TOPLEFT,false elseif a3==bs then return e.TOPRIGHT,true else return e.TOP,false end elseif a4==bt then if a3==1 then return e.BOTTOMLEFT,true elseif a3==bs then return e.BOTTOMRIGHT,true else return e.BOTTOM,true end elseif a3==1 then return e.LEFT,false elseif a3==bs then return e.RIGHT,true else return" ",false end end}local bu={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a3,a4)if self.pixels[a3]then if self.pixels[a3][a4]then return true end end;return false end,get_pixel=function(self,a3,a4)if self:is_pixel_custom(a3,a4)then return self.pixels[a3][a4]end;return{char=" ",foreground=self.background,background=self.background,inverted=false}end,set_pixel=function(self,a3,a4,M,bb,bc,bv)a3,a4=math.floor(a3),math.floor(a4)local bw=self:get_pixel(a3,a4)if M then bw.char=M:sub(1,1)end;if bv then bw.foreground,bw.background=bc or bw.foreground,bb or bw.background else if bw.inverted then bw.foreground,bw.background=bb or bw.background,bc or bw.foreground else bw.foreground,bw.background=bb or bw.foreground,bc or bw.background end end;bw.inverted=bv;if not self.pixels[a3]then self.pixels[a3]={}end;self.pixels[a3][a4]=bw end,clear=function(self)self.pixels={}end},set_screens=function(self,bx)self.screens=m.get_monitors(bx)end,set_monitors=function(self,b7)self:set_screens(b7)end,clear=function(self)self.buffer:clear()end,draw=function(self)local by=self.screens;local bz=self.buffer;for bA,bB in next,by do local bC,bD=bB.getCursorPos()local b1,b2=bB.getSize()for a4=1,b2 do local bE,bF,bG={},{},{}for a3=1,b1 do local bw=bz:get_pixel(a3,a4)bE[#bE+1]=bw.char;bF[#bF+1]=j.colors[bw.foreground]bG[#bG+1]=j.colors[bw.background]end;bB.setCursorPos(1,a4)bB.blit(table.concat(bE),table.concat(bF),table.concat(bG))end;bB.setCursorPos(bC,bD)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a3,a4,aY)self.buffer:set_pixel(a3,a4," ",aY,aY)end,write=function(self,a3,a4,bH,bb,bc)for bI=0,#bH-1 do local M=bH:sub(bI+1,bI+1)self.buffer:set_pixel(a3+bI,a4,M,bb,bc)end end,blit=function(self,a3,a4,bH,bb,bc)local bJ=""local bK=""bb=bb or""bc=bc or""for bI=0,#bH-1 do local M=bH:sub(bI+1,bI+1)local bL=bb:sub(bI+1,bI+1)bL=#bL>0 and bL or bJ;local bM=bc:sub(bI+1,bI+1)bM=#bM>0 and bM or bK;self.buffer:set_pixel(a3+bI,a4,M,j.paint[bL],j.paint[bM])bJ=bL;bK=bM end end,rectangle=function(self,a3,a4,b1,b2,aY,bN,bO,bP)if bP then for bQ=1,b1 do if bN then local M,bv=bg.get_rect_char(bQ,1,b1,b2)self.buffer:set_pixel(a3+bQ-1,a4,M,bO,aY,bv)M,bv=bg.get_rect_char(bQ,b2,b1,b2)self.buffer:set_pixel(a3+bQ-1,a4+b2-1,M,bO,aY,bv)else self.buffer:set_pixel(a3+bQ-1,a4," ",aY,aY)self.buffer:set_pixel(a3+bQ-1,a4+b2-1," ",aY,aY)end end;for bR=2,b2-1 do if bN then local M,bv=bg.get_rect_char(1,bR,b1,b2)self.buffer:set_pixel(a3,a4+bR-1,M,bO,aY,bv)M,bv=bg.get_rect_char(b1,bR,b1,b2)self.buffer:set_pixel(a3+b1-1,a4+bR-1,M,bO,aY,bv)else self.buffer:set_pixel(a3,a4+bR-1," ",aY,aY)self.buffer:set_pixel(a3+b1-1,a4+bR-1," ",aY,aY)end end else for bQ=1,b1 do for bR=1,b2 do if bN then local M,bv=bg.get_rect_char(bQ,bR,b1,b2)self.buffer:set_pixel(a3+bQ-1,a4+bR-1,M,bO,aY,bv)else self.buffer:set_pixel(a3+bQ-1,a4+bR-1," ",aY,aY)end end end end end,nfp_image=function(self,a3,a4,bS,bT,bU,bV,bW)bT,bU=bT or 1,bU or 1;local bI,bX=1,1;for w=1,#bS do if bW and bX>=bW+bU then break end;local M=bS:sub(w,w)if M=="\n"then bI,bX=1,bX+1 else if bX>=bU and bI>=bT and(not bV or bI<bV+bT)then local aY=j.paint[M]if aY then self.buffer:set_pixel(a3+bI-bT,a4+bX-bU," ",aY,aY)end end;bI=bI+1 end end end,nft_image=function(self,a3,a4,bS,bT,bU,bV,bW)bT,bU=bT or 1,bU or 1;local bI,bX,bY,bZ,b_,c0=1,1;for w=1,#bS do if bW and bX>=bW+bU then break end;local M=bS:sub(w,w)if bY then b_=j.paint[M]bY=false elseif bZ then c0=j.paint[M]bZ=false elseif M=="\30"then bY=true elseif M=="\31"then bZ=true elseif M=="\n"then bI,bX,bY,bZ,b_,c0=1,bX+1 else if bX>=bU and bI>=bT and(not bV or bI<bV+bT)then self.buffer:set_pixel(a3+bI-bT,a4+bX-bU,M,c0,b_)end;bI=bI+1 end end end,frame_to_nfp=function(self,a3,a4,b1,b2,c1)local c2={}for bX=1,b2 do local c3={}local c4=0;for bI=1,b1 do local bw=self.frame.pixels[a3+bI-1]and self.frame.pixels[a3+bI-1][a4+bX-1]or{background=c1 and" "or self.frame.background}local aY=j.colors[bw.inverted and bw.foreground or bw.background]or" "c3[#c3+1]=aY;if aY~=" "then c4=bI end end;c2[#c2+1]=table.concat(c3):sub(0,c4)end;return table.concat(c2,"\n")end,frame_to_nft=function(self,a3,a4,b1,b2)local c2={}for bX=1,b2 do local c3={}local bK,bJ;for bI=1,b1 do local bw=self.frame.pixels[a3+bI-1]and self.frame.pixels[a3+bI-1][a4+bX-1]or{char=" ",foreground=self.frame.background,background=self.frame.background}if bw.background~=bK then c3[#c3+1]="\30"c3[#c3+1]=j.colors[bw.background]bK=bw.background end;if bw.foreground~=bJ then c3[#c3+1]="\31"c3[#c3+1]=j.colors[bw.foreground]bJ=bw.foreground end;c3[#c3+1]=bw.char=="\30"and"\24"or bw.char=="\31"and"\25"or bw.char end;c2[#c2+1]=table.concat(c3)end;return table.concat(c2,"\n")end,line=function(self,bi,bj,bk,bl,aY)if math.abs(bl-bj)<math.abs(bk-bi)then if bi>bk then bg.lineLow(self,bk,bl,bi,bj,aY)else bg.lineLow(self,bi,bj,bk,bl,aY)end else if bj>bl then bg.lineHigh(self,bk,bl,bi,bj,aY)else bg.lineHigh(self,bi,bj,bk,bl,aY)end end end,circle=function(self,c5,c6,c7,aY,bP)local c8=c7*c7;if bP then self.buffer:set_pixel(c5,c6+c7," ",aY,aY)self.buffer:set_pixel(c5,c6-c7," ",aY,aY)self.buffer:set_pixel(c5+c7,c6," ",aY,aY)self.buffer:set_pixel(c5-c7,c6," ",aY,aY)else self:line(c5,c6+c7,c5,c6-c7,aY)self:line(c5+c7,c6,c5-c7,c6,aY)end;local a3=1;local a4=math.floor(math.sqrt(c8-1)+0.5)while a3<a4 do if bP then self.buffer:set_pixel(c5+a3,c6+a4," ",aY,aY)self.buffer:set_pixel(c5+a3,c6-a4," ",aY,aY)self.buffer:set_pixel(c5-a3,c6+a4," ",aY,aY)self.buffer:set_pixel(c5-a3,c6-a4," ",aY,aY)self.buffer:set_pixel(c5+a4,c6+a3," ",aY,aY)self.buffer:set_pixel(c5+a4,c6-a3," ",aY,aY)self.buffer:set_pixel(c5-a4,c6+a3," ",aY,aY)self.buffer:set_pixel(c5-a4,c6-a3," ",aY,aY)else self:line(c5+a3,c6+a4,c5+a3,c6-a4,aY)self:line(c5-a3,c6+a4,c5-a3,c6-a4,aY)self:line(c5+a4,c6+a3,c5+a4,c6-a3,aY)self:line(c5-a4,c6+a3,c5-a4,c6-a3,aY)end;a3=a3+1;a4=math.floor(math.sqrt(c8-a3*a3)+0.5)end;if a3==a4 then if bP then self.buffer:set_pixel(c5+a3,c6+a4," ",aY,aY)self.buffer:set_pixel(c5+a3,c6-a4," ",aY,aY)self.buffer:set_pixel(c5-a3,c6+a4," ",aY,aY)self.buffer:set_pixel(c5-a3,c6-a4," ",aY,aY)else self:line(c5+a3,c6+a4,c5+a3,c6-a4,aY)self:line(c5-a3,c6+a4,c5-a3,c6-a4,aY)end end end}bu.buffer.__index=bu.buffer;local c9={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,ca,d)if self.pressed_keys[d]then if ca then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,cb,...)local keys={...}if not(#keys>0)then return false end;for cc,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if cb then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for cc,d in next,keys do self:remove_key(d)end end,manage_event=function(self,formatted_event)if formatted_event.name==b.KEY then self:add_key(formatted_event.key)elseif formatted_event.name==b.KEYUP then self:remove_key(formatted_event.key)end end}local cd={}cd={Clock={new=function(ce)local cf={enabled=true,oneshot=false,clock=os.clock(),interval=ce,callbacks={onClock=function()end}}setmetatable(cf,cd.Clock)return cf end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;local cg=os.clock()if cg>=self.clock+self.interval then local delta_time=cg-self.clock;self:reset_timer()self.callbacks.onClock(self,formatted_event,delta_time)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a3,a4,bH,bb,bc)local ch={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_LEFT,text=bH,pos=h.Vector2.new(a3,a4),colors={foreground=bb,background=bc},callbacks={onDraw=function()end}}setmetatable(ch,cd.Label)return ch end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;local N=g.split_by_char(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,ci in next,N do bu:write(self.pos.x,self.pos.y+d-1,ci,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then for d,ci in next,N do bu:write(self.pos.x-#ci/2+1,self.pos.y+d-1,ci,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_RIGHT then for d,ci in next,N do bu:write(self.pos.x-#ci+1,self.pos.y+d-1,ci,self.colors.foreground,self.colors.background)end end end},Button={new=function(a3,a4,b1,b2,bH,bb,cj,ck,cl)local cm={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,hoverable=cl and true or false,active=false,hovered=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bH,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(b1,b2),border=false,timed={enabled=false,clock=cd.Clock.new(0.5)},colors={foreground=bb,hover_background=cl,active_background=cj,unactive_background=ck,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end,onHover=function()end}}cm.timed.clock.binded_button=cm;cm.timed.clock.oneshot=true;cm.timed.clock:stop()cm.timed.clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)self.binded_button.callbacks.onTimeout(self.binded_button,formatted_event)end)setmetatable(cm,cd.Button)return cm end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;if self.active then bu:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background,self.border,self.colors.border_color)elseif self.hovered then bu:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.hover_background,self.border,self.colors.border_color)else bu:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background,self.border,self.colors.border_color)end;local N=g.split_by_char(self.text,"\n")local cn=(self.size.y-#N)/2+self.pos.y;for bX=0,#N-1 do local ci=N[bX+1]local co;if self.text_alignment==b.ALIGN_LEFT then co=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then co=(self.size.x-#ci)/2+self.pos.x elseif self.text_alignment==b.ALIGN_RIGHT then co=self.pos.x+self.size.x-#ci end;bu:write(co,cn+bX,ci,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(formatted_event)return true else self.callbacks.onFailedPress(self,formatted_event)end elseif c9:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(formatted_event)elseif self.hoverable then if formatted_event.name==b.MOUSEMOVE or formatted_event.name==b.MOUSEDRAG then if not formatted_event.x or not formatted_event.y then if self.hovered then self.hovered=false;self.callbacks.onHover(self,formatted_event)end elseif k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then if not self.hovered then self.hovered=true;self.callbacks.onHover(self,formatted_event)end;return true elseif self.hovered then self.hovered=false;self.callbacks.onHover(self,formatted_event)end elseif self.hovered and formatted_event.name==b.DELETED then self.hovered=false;self.callbacks.onHover(self,formatted_event)end end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self,formatted_event)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self.active=not self.active;self.callbacks.onPress(self,formatted_event)end end},Progressbar={new=function(a3,a4,b1,b2,aQ,ak,al,bb,cp,cq)local cr={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(b1,b2),value={max=al,min=ak,current=aQ,draw_percentage=true,percentage_precision=2},colors={foreground=bb,filled_background=cp,unfilled_background=cq},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(cr,cd.Progressbar)return cr end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;local cs=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local ct=self.size.x*cs;bu:rectangle(self.pos.x,self.pos.y,ct,self.size.y,self.colors.filled_background)bu:rectangle(self.pos.x+ct,self.pos.y,self.size.x-ct,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local cu=table.concat({g.format_number(cs*100,self.value.percentage_precision),"%"})local cv=(self.size.x-#cu)/2+self.pos.x;local cn=(self.size.y-1)/2+self.pos.y;bu:write(cv,cn,cu,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,ad)local cw=h.constrain(ad,self.value.min,self.value.max)self.value.current=cw end},Memo={new=function(a3,a4,b1,b2,bb,bc)local cx={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(b1,b2),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=cd.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},border=false,colors={foreground=bb,background=bc,cursor=colors.white,cursor_text=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end,onPaste=function()end}}cx.cursor.blink.binded_cursor=cx.cursor;cx.cursor.blink:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(cx,cd.Memo)return cx end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;bu:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)local cy=self.pos.x;local cz=self.pos.y;local cA=self.size.x;local cB=self.size.y;if self.border then cy=cy+1;cz=cz+1;cA=cA-2;cB=cB-2 end;local cC=self.cursor.pos.x-self.first_visible_char;local cD=self.cursor.pos.y-self.first_visible_line;for a4=1,cB do local cE=a4+self.first_visible_line-1;local cF=self.rich_text[cE]or{}local ci=self.lines[cE]or""local cG=self.first_visible_char;local cH=self.first_visible_char+cA-1;local cI=ci:sub(cG,cH)local cJ=cz+a4-1;if cF.background then if type(cF.background)=="string"then local b_=cF.background:sub(cG,cH)b_=#b_>0 and b_ or cF.background:sub(#cF.background)bu:blit(cy,cJ,string.rep(" ",cA),nil,b_)else bu:rectangle(cy,cJ,cA,1,cF.background)end end;if cF.foreground then if type(cF.foreground)=="string"then local c0=cF.foreground:sub(cG,cH)c0=#c0>0 and c0 or cF.foreground:sub(#cF.foreground)bu:blit(cy,cJ,cI,c0)else bu:write(cy,cJ,cI,cF.foreground)end else bu:write(cy,cJ,cI,self.colors.foreground)end end;if self.cursor.visible and cC>=0 and cC<cA and cD>=0 and cD<cB then bu:write(cC+cy,cD+cz,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if self.hidden then return false end;if not self.editable then return false end;if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)self:focus(true,formatted_event)local a3=formatted_event.x-self.pos.x;local a4=formatted_event.y-self.pos.y;if self.border then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x+1,self.pos.y+1,self.size.x-2,self.size.y-2)then self:set_cursor(a3+self.first_visible_char-1,a4+self.first_visible_line-1)end else self:set_cursor(a3+self.first_visible_char,a4+self.first_visible_line)end;return true else self.callbacks.onFailedPress(self,formatted_event)self:focus(false,formatted_event)return false end elseif formatted_event.name==b.DELETED then self:focus(false,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.PASTE then if self.callbacks.onPaste(self,formatted_event)then return true end;self:write(formatted_event.paste)return true elseif formatted_event.name==b.CHAR then if self.callbacks.onChar(self,formatted_event)then return true end;self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if self.callbacks.onKey(self,formatted_event)then return true end;if c9:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cK=self.lines[self.cursor.pos.y-1]local cL=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bC=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(table.concat({cL,"\n",cK}))self:set_cursor(bC,self.cursor.pos.y-1)end;return true elseif c9:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cL=self.lines[self.cursor.pos.y]local cM=self.lines[self.cursor.pos.y+1]if not cM then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bC=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(table.concat({cM,"\n",cL}))self:set_cursor(bC,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif formatted_event.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif formatted_event.key==b.KEY_RIGHT then local ci=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#ci+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local cN=self.lines[self.cursor.pos.y-1]self:set_cursor(#cN+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_BACKSPACE then local ci=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local cO=#self.lines[self.cursor.pos.y-1]+1;local cP=self.cursor.pos.y-1;self:set_cursor(cO,cP)self:write(ci)self:set_cursor(cO,cP)end else local az=table.concat({ci:sub(1,self.cursor.pos.x-2),ci:sub(self.cursor.pos.x)})self.lines[self.cursor.pos.y]=az;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,az,{az})end;return true elseif formatted_event.key==b.KEY_DELETE then local ci=self.lines[self.cursor.pos.y]local cQ=ci:sub(self.cursor.pos.x)if#cQ>0 then local az=table.concat({ci:sub(1,self.cursor.pos.x-1),ci:sub(self.cursor.pos.x+1)})self.lines[self.cursor.pos.y]=az;self.callbacks.onWrite(self,az,{az})else local cM=self.lines[self.cursor.pos.y+1]if cM then local cO=self.cursor.pos.x;local cP=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(cM)self:set_cursor(cO,cP)end end;return true elseif formatted_event.key==b.KEY_ENTER then local cR=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cS=cR:gsub("(%s*).*","%1")self:write(table.concat({"\n",cS}))return true elseif formatted_event.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_HOME then local cR=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cS=cR:gsub("(%s*).*","%1")self:set_cursor(#cS+1,self.cursor.pos.y)return true elseif c9:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local cT=self.lines[self.cursor.pos.y]local cS=cT:gsub("^(%s*).*$","%1")local cU=math.min(#self.tab_spaces,#cS)local az=cT:sub(cU+1)self.lines[self.cursor.pos.y]=az;self:set_cursor(self.cursor.pos.x-cU,self.cursor.pos.y)self.callbacks.onWrite(self,az,{az})return true elseif formatted_event.key==b.KEY_TAB then local bC=self.cursor.pos.x;local cV=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cW=#self.lines[self.cursor.pos.y]-cV;self:set_cursor(bC+cW,self.cursor.pos.y)return true end elseif formatted_event.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,formatted_event)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+formatted_event.direction,1,#self.lines)return true end end end,focus=function(self,cX,formatted_event)if cX then self.focussed=true;self.callbacks.onFocus(self,formatted_event)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)end end,set_cursor=function(self,cO,cP,cY)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then cP=h.constrain(cP,1,self.limits.y)end;if cY then for a4=#self.lines+1,cP do if not self.lines[a4]then self.lines[a4]=""end end else cP=h.constrain(cP,1,#self.lines)end;cO=h.constrain(cO,1,#self.lines[cP]+1)local cC=cO-self.first_visible_char;local cD=cP-self.first_visible_line;local cA=self.size.x;local cB=self.size.y;if self.border then cA=cA-2;cB=cB-2 end;if cC>=cA then self.first_visible_char=self.first_visible_char+cC-cA+1 elseif cC<0 then self.first_visible_char=self.first_visible_char+cC end;if cD>=cB then self.first_visible_line=self.first_visible_line+cD-cB+1 elseif cD<0 then self.first_visible_line=self.first_visible_line+cD end;self.callbacks.onCursorChange(self,cO,cP)self.cursor.pos=h.Vector2.new(cO,cP)end,write=function(self,...)local bH=table.concat({...})local N=g.split_by_char(bH,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local I=table.concat({"[^",g.escape_magic_characters(table.concat(self.whitelist)),"]"})for d,ci in next,N do N[d]=ci:gsub(I,"")end elseif#self.blacklist>0 then local I=table.concat({"[",g.escape_magic_characters(table.concat(self.blacklist)),"]"})for d,ci in next,N do N[d]=ci:gsub(I,"")end end;if self.limits.y>0 then for a4=1,#self.lines+#N-1-self.limits.y do table.remove(N)end;if#N==0 then return end end;if#N>1 then for cZ,ci in next,N do if cZ==1 then local c_=self.lines[self.cursor.pos.y]local d0=c_:sub(1,self.cursor.pos.x-1)local cQ=c_:sub(self.cursor.pos.x)local d1=N[#N]if self.limits.x>0 then ci=ci:sub(1,self.limits.x-#d0)d1=d1:sub(1,self.limits.x-#cQ)end;self.lines[self.cursor.pos.y]=table.concat({d0,ci})table.insert(self.lines,self.cursor.pos.y+1,table.concat({d1,cQ}))self:set_cursor(#d1+1,self.cursor.pos.y+1)elseif cZ==#N then break else if self.limits.x>0 then ci=ci:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,ci)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local c_=self.lines[self.cursor.pos.y]local d0=c_:sub(1,self.cursor.pos.x-1)local cQ=c_:sub(self.cursor.pos.x)if self.limits.x>0 then N[1]=N[1]:sub(1,self.limits.x-(#d0+#cQ))end;self.lines[self.cursor.pos.y]=table.concat({d0,N[1],cQ})self:set_cursor(self.cursor.pos.x+#N[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bH,N)end,print=function(self,...)local bH=table.concat({...})local az=#self.lines>0 and"\n"or""self:write(table.concat({az,bH}))end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=h.Vector2.new(1,1)end},Window={new=function(a3,a4,b1,b2,bc,d2)local d3={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(b1,b2),can_drag=false,border=false,dragging={enabled=true,from=h.Vector2.new(1,1)},resizing={enabled=true,corner=h.Vector2.new(-1,1),enabled_directions={[-1]={[1]=true,[0]=true,[-1]=true},[0]={[1]=true,[0]=false,[-1]=true},[1]={[1]=true,[0]=true,[-1]=true}},pinned={x=false,y=false},min_size=h.Vector2.new(b1,b2),max_size=h.Vector2.new(b1,b2)*2},shadow={enabled=d2,offset=h.Vector2.new(1,1)},elements={},colors={background=bc,shadow=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onEvent=function()end,onFocus=function()end,onDrag=function()end,onResize=function()end}}setmetatable(d3,cd.Window)return d3 end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;if self.shadow.enabled then bu:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;bu:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)self:draw_elements(delta_time)end,event=function(self,formatted_event)if self.hidden then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local d4=self:event_elements(formatted_event)if not d4 then if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.can_drag=false;if self.resizing.enabled then local d5=true;local d6=formatted_event.y==self.pos.y+self.size.y-1;local d7=formatted_event.y==self.pos.y;if formatted_event.x==self.pos.x+self.size.x-1 then if self.resizing.enabled_directions[1][1]and d6 then self.resizing.corner=self.pos.ONE:duplicate()self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][-1]and d7 then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][0]and not(d6 or d7)then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=true else d5=false end elseif formatted_event.x==self.pos.x then if self.resizing.enabled_directions[-1][1]and d6 then self.resizing.corner=self.pos.DOWN+self.pos.LEFT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][-1]and d7 then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][0]and not(d6 or d7)then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=true else d5=false end elseif self.resizing.enabled_directions[0][1]and d6 then self.resizing.corner=self.pos.DOWN+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[0][-1]and d7 then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false else d5=false end;if not d5 then self.resizing.corner=self.pos.ZERO:duplicate()self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end else self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end;self.focussed=true;self.callbacks.onPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.callbacks.onFailedPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG and self.focussed then if self.can_drag then self:drag(formatted_event.x,formatted_event.y)else self:resize(formatted_event.x,formatted_event.y,self.resizing.pinned.x,self.resizing.pinned.y)end;return true elseif formatted_event.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,formatted_event)end else self.focussed=false;self.callbacks.onFocus(self,formatted_event)end;return d4 end,drag=function(self,a3,a4)if self.dragging.enabled then local d8=self.pos:duplicate()self.pos=self.pos+h.Vector2.new(a3-self.dragging.from.x,a4-self.dragging.from.y)self.dragging.from=h.Vector2.new(a3,a4)self.callbacks.onDrag(self,d8.x,d8.y)end end,resize=function(self,a3,a4,d9,da)if self.resizing.enabled and self.resizing.corner~=self.pos.ZERO then local function db()self.size.x=h.constrain(self.size.x,self.resizing.min_size.x,self.resizing.max_size.x)self.size.y=h.constrain(self.size.y,self.resizing.min_size.y,self.resizing.max_size.y)end;local dc=h.Vector2.new(a3,a4)local d8=self.pos:duplicate()local dd=self.size:duplicate()if self.resizing.corner==self.pos.ONE then self.size.x=dc.x-self.pos.x+1;self.size.y=dc.y-self.pos.y+1;db()elseif self.resizing.corner==self.pos.ONE*-1 then self.size.x=self.size.x+self.pos.x-dc.x;self.size.y=self.size.y+self.pos.y-dc.y;db()local de=dd-self.size;self.pos=self.pos+de elseif self.resizing.corner==self.pos.UP+self.pos.RIGHT then self.size.x=dc.x-self.pos.x+1;self.size.y=self.size.y+self.pos.y-dc.y;db()local df=dd.y-self.size.y;self.pos.y=self.pos.y+df elseif self.resizing.corner==self.pos.DOWN+self.pos.LEFT then self.size.x=self.size.x+self.pos.x-dc.x;self.size.y=dc.y-self.pos.y+1;db()local cW=dd.x-self.size.x;self.pos.x=self.pos.x+cW end;if d9 then self.size.x=dd.x;self.pos.x=d8.x end;if da then self.size.y=dd.y;self.pos.y=d8.y end;self.callbacks.onResize(self,d8.x,d8.y,dd.x,dd.y)end end,set_elements=function(self,dg)self.elements={}for d,dh in next,dg do table.insert(self.elements,dh)end end,draw_elements=function(self,delta_time)for d=#self.elements,1,-1 do local dh=self.elements[d]if dh.draw then dh.pos=dh.pos+self.pos-self.pos.ONE;dh:draw(delta_time)dh.pos=dh.pos-self.pos+self.pos.ONE end end end,event_elements=function(self,formatted_event)local di=formatted_event;if di.x and di.y then di=k.format_event_table(di.raw)di.x,di.y=di.x-self.pos.x+1,di.y-self.pos.y+1 end;local d4=false;for d,dh in next,self.elements do if dh.event then local dj=dh:event(di)d4=d4 or dj;if dj then di={name=b.DELETED,deleted=formatted_event}end end end;return d4 end},Canvas={new=function(a3,a4,b1,b2)local dk={draw_priority=b.LOW_PRIORITY,hidden=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(b1,b2),transparent=false,buffer={background=colors.black,pixels={}},callbacks={onDraw=function()end}}setmetatable(dk.buffer,bu.buffer)setmetatable(dk,cd.Canvas)return dk end,draw=function(self)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;self:cast(bu)end,cast=function(self,a6)if self.transparent then for a3=1,self.size.x do if self.buffer.pixels[a3]then for a4=1,self.size.y do local bw=self.buffer.pixels[a3][a4]if bw then if bw.inverted then a6.buffer:set_pixel(self.pos.x+a3-1,self.pos.y+a4-1,bw.char,bw.background,bw.foreground,true)else a6.buffer:set_pixel(self.pos.x+a3-1,self.pos.y+a4-1,bw.char,bw.foreground,bw.background)end end end end end else for a4=1,self.size.y do for a3=1,self.size.x do local bw=self.buffer:get_pixel(a3,a4)if bw.inverted then a6.buffer:set_pixel(self.pos.x+a3-1,self.pos.y+a4-1,bw.char,bw.background,bw.foreground,true)else a6.buffer:set_pixel(self.pos.x+a3-1,self.pos.y+a4-1,bw.char,bw.foreground,bw.background)end end end end end,to_nfp=function(self,...)return bu.frame_to_nfp({frame=self.buffer},...)end,to_nft=function(self,...)return bu.frame_to_nft({frame=self.buffer},...)end}}cd.Clock.__index=cd.Clock;cd.Label.__index=cd.Label;cd.Button.__index=cd.Button;cd.Progressbar.__index=cd.Progressbar;cd.Memo.__index=cd.Memo;cd.Window.__index=cd.Window;for d,dl in next,bu do if type(dl)=="function"and not cd.Canvas[d]and not d:find("set_")and not d:find("frame")then cd.Canvas[d]=dl end end;cd.Canvas.__index=cd.Canvas;local dm={}dm={new=function(dn)local dp={draw_priority=b.LOW_PRIORITY,enabled=true,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=cd.Clock.new(dn or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}dp.broadcast_clock.WSS=dp;dp.broadcast_clock:set_callback(b.ONCLOCK,function(self,formatted_event)rednet.broadcast(bu.frame,self.WSS.protocol)end)setmetatable(dp,dm)return dp end,draw=function(self,delta_time)if not self.enabled then return false end;if self.callbacks.onDraw(self,delta_time)then return end;if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then bu.buffer.background=self.buffer.background;bu.buffer.pixels=self.buffer.pixels end end end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local dq=false;if formatted_event.name==b.REDNET then if formatted_event.protocol==self.protocol then local b5=formatted_event.message;if self.mode==b.HOST then if b5==b.CONNECTION_REQUEST then rednet.send(formatted_event.from,b.OK,self.protocol)self.users[formatted_event.from]=true;dq=true;self.callbacks.onConnect(self,formatted_event)elseif b5==b.DISCONNECTED then self.users[formatted_event.from]=nil;dq=true;self.callbacks.onDisconnect(self,formatted_event)elseif self.events_whitelist[b5.name or"nil"]and self.users[formatted_event.from]and type(b5)=="table"then if b5.raw then os.queueEvent(table.unpack(b5.raw))end;dq=true end elseif self.mode==b.USER then if formatted_event.from==self.host_id then if b5==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;dq=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(b5)=="table"then self.buffer=b5;dq=true end end end end end;if self.mode==b.USER then if formatted_event.name==b.TOUCH then dq=true end;if self.events_whitelist[tostring(formatted_event.name)]then rednet.send(self.host_id,formatted_event,self.protocol)dq=true end elseif self.mode==b.HOST then self.broadcast_clock:event(formatted_event)end;return dq end,use_side=function(self,dr)self.side=dr end,connect=function(self,ds,dt,du)dt=dt or 2;du=du or 10;rednet.open(self.side)self.host_id=ds;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local dv=0;while true do dv=dv+1;local dw={rednet.receive(self.protocol,dt)}if dw[1]==ds and dw[2]==b.OK and dw[3]==self.protocol then return b.OK elseif dv>=du then local dx=string.format("Connection timed out on attempt %d after %d ms",dv,dt*1000)if#dw>0 then dx=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",dv,dt*1000)end;dm:close()error(dx,2)end end;self.callbacks.onConnect(self,ds)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}dm.__index=dm;local dy={}dy={new=function(dz)local dA={enabled=true,computer_whitelist={},side=b.NONE,mode=b.ALL,password=dz or b.NONE,protocol="YAGUI-"..a.ver.."_FT",save_dir="/FT",callbacks={onEvent=function()end,onConnect=function()end,onSend=function()end,onReceive=function()end}}setmetatable(dA,dy)return dA end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;if formatted_event.name==b.REDNET and formatted_event.protocol==self.protocol then if self.mode==b.ALL or self.mode==b.RECEIVE then local ds=formatted_event.from;if self.computer_whitelist[ds]or self.callbacks.onConnect(self,formatted_event)then local b5=formatted_event.message;if type(b5)=="table"and b5.name and b5.content then if b5.psw==self.password then local b6=fs.getName(tostring(b5.name))local W=fs.combine(self.save_dir,b6)if fs.exists(W)then rednet.send(ds,b.NO,self.protocol)else local dB=tostring(b5.content)if self.callbacks.onReceive(self,formatted_event,ds,b6,W,dB)then return true end;local dC=fs.open(W,"w")if dC then dC.write(dB)dC.close()rednet.send(ds,b.OK,self.protocol)else rednet.send(ds,b.ERROR,self.protocol)end end else rednet.send(ds,b.NO,self.protocol)end else rednet.send(ds,b.ERROR,self.protocol)end else rednet.send(ds,b.NO,self.protocol)end end end end,send=function(self,dD,dE,dF,dG)if self.mode==b.ALL or self.mode==b.SEND then dG=dG or fs.getName(dF)dE=dE or b.NONE;local dC=fs.open(dF,"r")local dB=dC.readAll()dC.close()local b5={psw=dE,name=dG,content=dB}if self.callbacks.onSend(self,formatted_event,b5)then return true end;rednet.send(dD,b5,self.protocol)end end,open=function(self,dr)self.side=dr;rednet.open(dr)end,close=function(self)if rednet.isOpen()then rednet.close(self.side)end end}dy.__index=dy;local dH={}dH={new=function(dI,dJ)local dK={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=dI,EPS_target=dJ},monitors={terminal=term},threads={},elements={high_priority={},low_priority={},loop={clock=cd.Clock.new(1/dI),stats_clock=cd.Clock.new(1),FPS_label=cd.Label.new(1,1,"1 FPS",colors.white),EPS_label=cd.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),show=function(self,dL)self.FPS_label.hidden=not dL;self.EPS_label.hidden=not dL end,update_pos=function(self)self.FPS_label.pos=self.pos;self.EPS_label.pos=self.pos+h.Vector2.DOWN end,Events=0,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onEvent=function()end}}dK.elements.loop.stats_clock.stats=dK.stats;dK.stats.FPS_label=dK.elements.loop.FPS_label;dK.stats.EPS_label=dK.elements.loop.EPS_label;dK.elements.loop.stats_clock:set_callback(b.ONCLOCK,function(self,formatted_event,delta_time)self.stats:update_pos()self.stats.FPS_label.text=table.concat({math.floor(self.stats.FPS+0.5)," FPS"})self.stats.EPS_label.text=table.concat({math.floor(self.stats.EPS+0.5)," EPS"})end)dK.stats:show(false)dK.elements.loop.clock.Loop=dK;dK.elements.loop.clock:set_callback(b.ONCLOCK,function(self,formatted_event,delta_time)self.Loop.stats.FPS=1/delta_time;self.Loop.stats.EPS=self.Loop.stats.Events/delta_time;self.Loop.stats.Events=0;if#self.Loop.threads>0 then local dM={}for w=1,#self.Loop.threads do local dN=self.Loop.threads[w]if coroutine.status(dN)=="dead"then dM[#dM+1]=w else local dO={coroutine.resume(dN,self.Loop,delta_time)}os.queueEvent("coroutine",dN,coroutine.status(dN),table.unpack(dO))end end;if#dM>0 then i.better_remove(self.Loop.threads,table.unpack(dM))end end;self.Loop:draw_elements(delta_time)self.interval=1/self.Loop.options.FPS_target end)setmetatable(dK,dH)return dK end,set_monitors=function(self,b7)self.monitors=m.get_monitors(b7)end,set_elements=function(self,dg)self.elements.high_priority={}self.elements.low_priority={}for d,ad in next,dg do if ad.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,ad)else table.insert(self.elements.low_priority,ad)end end end,draw_elements=function(self,delta_time)local function dP(aq)for d=#aq,1,-1 do local dh=aq[d]if dh.draw then dh:draw(delta_time)end end end;if self.callbacks.onDraw(self,delta_time)then return end;local dQ=bu.screens;bu.screens=self.monitors;dP(self.elements.low_priority)dP(self.elements.high_priority)for d,dh in next,self.elements.loop do if dh.draw then dh:draw(delta_time)end end;bu:draw()bu.screens=dQ end,event_elements=function(self,formatted_event)local function b3(aq)for d,dh in next,aq do if dh.event then if dh:event(formatted_event)then formatted_event={name=b.DELETED,deleted=formatted_event}end end end end;if self.callbacks.onEvent(self,formatted_event)then formatted_event={name=b.DELETED,deleted=formatted_event}end;if self.options.stop_on_terminate and formatted_event.name==b.TERMINATE then self:stop()return end;if formatted_event.name==b.TOUCH then local dR=false;for dS,ba in next,self.monitors do if formatted_event.from==dS then dR=true;break end end;if not dR then formatted_event={name=b.DELETED,deleted=formatted_event}end end;b3(self.elements.loop)local dT={}for d,dh in next,self.elements.high_priority do if dh.event then local dU=dh:event(formatted_event)if dU then formatted_event={name=b.DELETED,deleted=formatted_event}if self.elements.high_priority~=dh then table.insert(dT,{element=dh,key=d})end end end end;if#dT>0 then for d,ad in next,dT do table.insert(self.elements.high_priority,1,ad.element)table.remove(self.elements.high_priority,ad.key+#dT)end end;b3(self.elements.low_priority)end,start=function(self)self.enabled=true;c9:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local dV=os.startTimer(1/self.options.EPS_target)local dW;if self.options.raw_mode then dW={os.pullEventRaw()}else dW={os.pullEvent()}end;local formatted_event=k.format_event_table(dW)c9:manage_event(formatted_event)self:event_elements(formatted_event)self.stats.Events=self.stats.Events+1;os.cancelTimer(dV)end;c9:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}dH.__index=dH;local dX={__call=function(self,...)return self.new(...)end}dX.__index=dX;local dY={__call=function(self,...)return self.new(...)end,set_callback=function(self,o,p)if o==b.ONSTART then self.callbacks.onStart=p elseif o==b.ONSTOP then self.callbacks.onStop=p elseif o==b.ONDRAW then self.callbacks.onDraw=p elseif o==b.ONPRESS then self.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then self.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then self.callbacks.onTimeout=p elseif o==b.ONCLOCK then self.callbacks.onClock=p elseif o==b.ONEVENT then self.callbacks.onEvent=p elseif o==b.ONFOCUS then self.callbacks.onFocus=p elseif o==b.ONKEY then self.callbacks.onKey=p elseif o==b.ONCHAR then self.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then self.callbacks.onMouseScroll=p elseif o==b.ONCURSORCHANGE then self.callbacks.onCursorChange=p elseif o==b.ONWRITE then self.callbacks.onWrite=p elseif o==b.ONCONNECT then self.callbacks.onConnect=p elseif o==b.ONDISCONNECT then self.callbacks.onDisconnect=p elseif o==b.ONSEND then self.callbacks.onSend=p elseif o==b.ONRECEIVE then self.callbacks.onReceive=p elseif o==b.ONDRAG then self.callbacks.onDrag=p elseif o==b.ONRESIZE then self.callbacks.onResize=p elseif o==b.ONPASTE then self.callbacks.onPaste=p elseif o==b.ONHOVER then self.callbacks.onHover=p end end}dY.__index=dY;setmetatable(h.Vector2,dX)setmetatable(h.Vector3,dX)setmetatable(dm,dY)setmetatable(dy,dY)for d,dh in next,cd do setmetatable(dh,dY)end;setmetatable(dH,dY)local dZ={...}if dZ[1]=="help"then local N={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,ci in next,N do m.better_print(term,ci.foreground,ci.background,ci.text)end elseif dZ[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif dZ[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif dZ[1]=="copyright"then local d_={colors.red,colors.yellow,colors.green}local e0=g.split(a.copyright,"\n\n")for d,e1 in next,e0 do m.better_print(term,d_[d],nil,e1)if d<#e0 then read("")end end elseif dZ[1]=="setup"then if shell then local e2="YAGUI_PATH"local W="/"..shell.getRunningProgram()l.set(e2,W)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(e2),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif dZ[1]=="create"then if dZ[2]then local W=shell.resolve(dZ[2])if g.get_extension(W)~="lua"then W=W..".lua"end;if fs.exists(W)then m.better_print(term,colors.red,nil,"PATH: \"/",W,"\" already exists, please use another path or delete it.")else local dC=fs.open(W,"w")dC.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")dC.close()m.better_print(term,colors.green,nil,"New project was created at \"/",W,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif dZ[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",dZ[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local e3={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=bu,input=c9,WSS=dm,wireless_screen_share=dm,FT=dy,file_transfer=dy,gui_elements=cd,Loop=dH}for d,ad in next,b do e3[d]=ad end;return e3