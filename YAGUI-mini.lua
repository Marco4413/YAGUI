--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.21",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",DELETED="DELETED",DISCONNECTED="DISCONNECTED",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={__call=function(self,...)return self.new(...)end}e.__index=e;local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)if o==b.ONSTART then n.callbacks.onStart=p elseif o==b.ONSTOP then n.callbacks.onStop=p elseif o==b.ONDRAW then n.callbacks.onDraw=p elseif o==b.ONPRESS then n.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then n.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then n.callbacks.onTimeout=p elseif o==b.ONCLOCK then n.callbacks.onClock=p elseif o==b.ONEVENT then n.callbacks.onEvent=p elseif o==b.ONFOCUS then n.callbacks.onFocus=p elseif o==b.ONKEY then n.callbacks.onKey=p elseif o==b.ONCHAR then n.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then n.callbacks.onMouseScroll=p end end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=r or"unknown"r=tostring(r)local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=x:gsub(t,", ")v=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",r,(w+1)/2,E,z)u=true;break end end;if u then error(v,3)return false end;return true end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(F,G)if not G then G=""end;local H=""for d=1,#F do local I=F[d]H=H..tostring(I)if d<#F then H=H..G end end;return H end,split=function(H,G)if not string.find(H,G)then return{H}end;local J={}local K="(.-)"..G.."()"local L;for M,N in string.gfind(H,K)do table.insert(J,M)L=N end;table.insert(J,string.sub(H,L))return J end,compare_versions=function(O,P)local Q=g.split(O,".")local R=g.split(P,".")local S=#Q;local T=#R;for w=1,math.min(S,T)do if tonumber(Q[w])>tonumber(R[w])then return 1 elseif tonumber(Q[w])<tonumber(R[w])then return-1 end end;if S>T then return 1 elseif S<T then return-1 end;return 0 end,escape_magic_characters=function(H)for d,U in next,g.magic_characters do H=H:gsub("[%"..U.."]",'%%%'..U)end;return H end,get_extension=function(V)local W,X=V:gsub(".*%.","")if X>0 then return W end;return""end,format_number=function(Y,Z)Y=tostring(Y)Z=Z or 0;local _=Y:gsub("(.*)%..*","%1")if Z<=0 then return _ end;local a0=#_+1;local a1=Y:sub(a0+1,a0+Z)a1=a1:reverse():gsub("0*(.*)","%1"):reverse()if#a1>0 then return _.."."..a1 end;return _ end,trim=function(H)return H:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a2,a3)local a4={x=a2 or 0,y=a3 or 0}setmetatable(a4,h.Vector2)return a4 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a5)return self.x*a5.x+self.y*a5.y end,cross=function(self,a5)return self.x*a5.y-self.y*a5.x end,rotate=function(self,a6)local a7=math.cos(a6)local a8=math.sin(a6)return h.Vector2.new(a7*self.x-a8*self.y,a8*self.x+a7*self.y)end,string=function(self,Z)if Z then return string.format("(%."..tostring(Z).."f; %."..tostring(Z).."f)",self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a5)return h.Vector2.new(self.x+a5.x,self.y+a5.y)end,__sub=function(self,a5)return h.Vector2.new(self.x-a5.x,self.y-a5.y)end,__mul=function(self,Y)if type(self)=="number"then return h.Vector2.new(Y.x*self,Y.y*self)else return h.Vector2.new(self.x*Y,self.y*Y)end end,__div=function(self,Y)return h.Vector2.new(self.x/Y,self.y/Y)end,__eq=function(self,a5)return self.x==a5.x and self.y==a5.y end,__lt=function(self,a5)return self:length_sq()<a5:length_sq()end,__le=function(self,a5)return self:length_sq()<=a5:length_sq()end},Vector3={new=function(a2,a3,a9)local aa={x=a2 or 0,y=a3 or 0,z=a9 or 0}setmetatable(aa,h.Vector3)return aa end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)+math.pow(self.z,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a5)return self.x*a5.x+self.y*a5.y+self.z*a5.z end,cross=function(self,a5)return h.Vector3.new(self.y*a5.z-self.z*a5.y,self.z*a5.x-self.x*a5.z,self.x*a5.y-self.y*a5.x)end,rotate=function(self,ab,a6)local a7=math.cos(a6)return a7*self+math.sin(a6)*ab:cross(self)+(1-a7)*ab:dot(self)*ab end,string=function(self,Z)if Z then return string.format("(%."..tostring(Z).."f; %."..tostring(Z).."f; %."..tostring(Z).."f)",self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a5)return h.Vector3.new(self.x+a5.x,self.y+a5.y,self.z+a5.z)end,__sub=function(self,a5)return h.Vector3.new(self.x-a5.x,self.y-a5.y,self.z-a5.z)end,__mul=function(self,Y)if type(self)=="number"then return h.Vector3.new(Y.x*self,Y.y*self,Y.z*self)else return h.Vector3.new(self.x*Y,self.y*Y,self.z*Y)end end,__div=function(self,Y)return h.Vector3.new(self.x/Y,self.y/Y,self.z/Y)end,__eq=function(self,a5)return self.x==a5.x and self.y==a5.y and self.z==a5.z end,__lt=function(self,a5)return self:length_sq()<a5:length_sq()end,__le=function(self,a5)return self:length_sq()<=a5:length_sq()end},map=function(I,ac,ad,ae,af,ag)local ah=(I-ac)/(ad-ac)*(af-ae)+ae;if ag then return h.constrain(ah,ae,af)end;return ah end,constrain=function(I,ai,aj)return math.min(aj,math.max(ai,I))end,round=function(Y)return math.floor(Y+0.5)end,round_numbers=function(...)local ak={...}local al={}for d,Y in next,ak do table.insert(al,h.round(Y))end;return table.unpack(al)end,floor_numbers=function(...)local ak={...}local am={}for d,Y in next,ak do table.insert(am,math.floor(Y))end;return table.unpack(am)end,ceil_numbers=function(...)local ak={...}local an={}for d,Y in next,ak do table.insert(an,math.ceil(Y))end;return table.unpack(an)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(F,I)for ao,ap in next,F do if ap==I then return true,ao end end;return false,nil end,has_key=function(F,d)if F[d]~=nil then return true,F[d]end;return false,nil end,serialise=function(F,aq,ar,as,at,au,av,aw,ax)local aq=aq or 0;local av=av or"  "local ay=0;local aw=aw or"\n"local ax=ax or" "if not ar then av,aw,ax="","",""end;local az={}local aA="root"local function aB(F,V)local aC=av:rep(ay+1)local aD="{"..aw;local function aE(F)for d,I in next,F do local aF=type(d)local aG;if aF=="string"then aG=string.format("%q",d)else aG=tostring(d)end;if not au and d=="__index"then I={}end;local aH=type(I)local aI=tostring(I)aD=aD..string.format("%s[%s]%s=%s",aC,aG,ax,ax)if aH=="table"then if aq<=-1 or ay<aq then if az[aI]and not as then aD=aD..string.format("%q",az[aI])else local aJ=V.."."..tostring(d)az[aI]=aJ;ay=ay+1;aD=aD..aB(I,aJ)ay=ay-1 end else aD=aD.."{}"end elseif aH=="string"or aH=="function"then aD=aD..string.format("%q",aI)else aD=aD..string.format("%s",aI)end;if next(F,d)then aD=aD..","..aw else aD=aD..aw end end end;local aK=getmetatable(F)if at and aK then aE(aK)if next(F)then aD=aD:sub(1,#aD-#aw)..","..aD:sub(#aD-#aw+1)end end;aE(F)aD=aD..av:rep(ay).."}"return aD end;return aB(F,aA)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},color_to_paint=function(aL)return j.colors[aL]end,paint_to_color=function(aM)local aN,aL=i.has_value(j.colors,aM)if aN then return aL end end}k={is_area_pressed=function(aO,aP,a2,a3,aQ,aR)if aO>=a2 and aO<a2+aQ then if aP>=a3 and aP<a3+aR then return true end end;return false end,format_event_table=function(aS)local o={}o.name=aS[1]if o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=aS[2]o.x=aS[3]o.y=aS[4]return o elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=aS[2]o.button=1;o.x=aS[3]o.y=aS[4]return o elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=aS[2]o.x=aS[3]o.y=aS[4]return o elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=aS[2]o.x=aS[3]o.y=aS[4]return o elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=aS[2]o.x=aS[3]o.y=aS[4]return o elseif o.name=="char"then o.name=b.CHAR;o.char=aS[2]return o elseif o.name=="key"then o.name=b.KEY;o.key=aS[2]return o elseif o.name=="key_up"then o.name=b.KEYUP;o.key=aS[2]return o elseif o.name=="paste"then o.name=b.PASTE;o.paste=aS[2]return o end;table.remove(aS,1)o.parameters=aS;return o end}l={_path="/.settings",set=function(aT,I)settings.set(aT,I)settings.save(l._path)end,unset=function(aT)settings.unset(aT)settings.save(l._path)end,get=function(aT)return settings.get(aT)end}m={get_monitors=function(aU)local aV={}for d,aW in next,aU do if aW=="terminal"then aV[aW]=term else if peripheral.getType(aW)=="monitor"then aV[aW]=peripheral.wrap(aW)end end end;return aV end,better_print=function(aX,aY,aZ,...)local a_=g.join({...},"")local b0=aX.getTextColor()local b1=aX.getBackgroundColor()if aY then aX.setTextColor(aY)end;if aZ then aX.setBackgroundColor(aZ)end;print(a_)aX.setTextColor(b0)aX.setBackgroundColor(b1)end,better_clear=function(aX)aX.clear()aX.setCursorPos(1,1)end}local b2={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a2,a3)if self.pixels[a2]then if self.pixels[a2][a3]then return true end end;return false end,get_pixel=function(self,a2,a3)if self:is_pixel_custom(a2,a3)then return self.pixels[a2][a3]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,a2,a3,char,aY,aZ)local b3=self:get_pixel(a2,a3)if char and#char==1 then b3.char=char end;b3.foreground=aY or b3.background;b3.background=aZ or b3.background;if not self.pixels[a2]then self.pixels[a2]={}end;self.pixels[a2][a3]=b3 end,clear=function(self)self.pixels={}end},set_screens=function(self,b4)self.screens=m.get_monitors(b4)end,set_monitors=function(self,aU)self:set_screens(aU)end,clear=function(self)self.buffer:clear()end,draw=function(self)local b5=self.screens;local b6=self.buffer;for b7,b8 in next,b5 do local b9,ba=b8.getCursorPos()local aQ,aR=b8.getSize()for a3=1,aR do local bb={text="",background="",foreground=""}for a2=1,aQ do local b3=b6:get_pixel(a2,a3)bb.text=bb.text..b3.char;bb.background=bb.background..j.colors[b3.background]bb.foreground=bb.foreground..j.colors[b3.foreground]end;b8.setCursorPos(1,a3)b8.blit(bb.text,bb.foreground,bb.background)end;b8.setCursorPos(b9,ba)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a2,a3,aL)self.buffer:set_pixel(a2,a3," ",aL,aL)end,write=function(self,a2,a3,bc,aY,aZ)for bd=0,#bc-1 do char=bc:sub(bd+1,bd+1)self.buffer:set_pixel(a2+bd,a3,char,aY,aZ)end end,rectangle=function(self,a2,a3,aQ,aR,aL)for bd=0,aQ-1 do for be=0,aR-1 do self:point(a2+bd,a3+be,aL)end end end,line=function(self,bf,bg,bh,bi,aL)local function bj(bf,bg,bh,bi)local bk=1;if bf>bh then bk=-1 end;local bl=bh-bf;local bm=bi-bg;local bn=1;if bm<0 then bn=-1;bm=-bm end;local bo=2*bm-bl;local a3=bg;for a2=bf,bh,bk do self:point(a2,a3,aL)if bo>0 then a3=a3+bn;bo=bo-2*bl end;bo=bo+2*bm end end;local function bp(bf,bg,bh,bi)local bk=1;if bg>bi then bk=-1 end;local bl=bh-bf;local bm=bi-bg;local bq=1;if bl<0 then bq=-1;bl=-bl end;local bo=2*bl-bm;local a2=bf;for a3=bg,bi,bk do self:point(a2,a3,aL)if bo>0 then a2=a2+bq;bo=bo-2*bm end;bo=bo+2*bl end end;if math.abs(bi-bg)<math.abs(bh-bf)then if bf>bh then bj(bh,bi,bf,bg)else bj(bf,bg,bh,bi)end else if bg>bi then bp(bh,bi,bf,bg)else bp(bf,bg,bh,bi)end end end,circle=function(self,br,bs,bt,aL)local bu=bt*bt;self:point(br,bs+bt,aL)self:point(br,bs-bt,aL)self:point(br+bt,bs,aL)self:point(br-bt,bs,aL)local a2=1;local a3=math.floor(math.sqrt(bu-1)+0.5)while a2<a3 do self:point(br+a2,bs+a3,aL)self:point(br+a2,bs-a3,aL)self:point(br-a2,bs+a3,aL)self:point(br-a2,bs-a3,aL)self:point(br+a3,bs+a2,aL)self:point(br+a3,bs-a2,aL)self:point(br-a3,bs+a2,aL)self:point(br-a3,bs-a2,aL)a2=a2+1;a3=math.floor(math.sqrt(bu-a2*a2)+0.5)end;if a2==a3 then self:point(br+a2,bs+a3,aL)self:point(br+a2,bs-a3,aL)self:point(br-a2,bs+a3,aL)self:point(br-a2,bs-a3,aL)end end}local bv={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,bw,d)if self.pressed_keys[d]then if bw then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,bx,...)local keys={...}if not(#keys>0)then return false end;for by,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if bx then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for by,d in next,keys do self:remove_key(d)end end,manage_event=function(self,bz)if bz.name==b.KEY then self:add_key(bz.key)elseif bz.name==b.KEYUP then self:remove_key(bz.key)end end}local bA={}bA={side=nil,protocol="YAGUI-"..a.ver.."_WSS",host_prefix="_Host:",default_timeout=0.5,open=function(self,bB)rednet.open(bB)self.side=bB end,close=function(self)rednet.close(self.side)self.side=nil end,server={root={},servername=nil,hostname=nil,host=function(self,bC)if not bC then bC=os.getComputerID()end;bC=tostring(bC)local bD=self.root.protocol..self.root.host_prefix..bC;if rednet.lookup(bD,bC)then return false,bC end;rednet.host(bD,bC)self.servername=bD;self.hostname=bC;return true,bC end,unhost=function(self)rednet.broadcast(b.DISCONNECTED,self.servername)rednet.unhost(self.servername,self.hostname)self.servername=nil;self.hostname=nil end,broadcast=function(self)rednet.broadcast(b2.frame,self.servername)end},client={root={},servername=nil,host_id=nil,connect=function(self,bC)bC=tostring(bC)local bD=self.root.protocol..self.root.host_prefix..bC;local bE=rednet.lookup(bD,bC)if not bE then return false,bC end;self.servername=bD;self.host_id=bE;return true,bC end,disconnect=function(self)self.servername=nil;self.host_id=nil end,listen=function(self,bF)if not bF then bF=self.root.default_timeout end;local bG={rednet.receive(self.servername,bF)}if bG[1]==self.host_id then local b6=bG[2]if not b6 then return false end;if b6==b.DISCONNECTED then return b6 end;b2.buffer.background=b6.background;b2.buffer.pixels=b6.pixels;return true end;return false end}}bA.server.root=bA;bA.client.root=bA;local bH={}bH={Clock={new=function(bI)local bJ={enabled=true,oneshot=false,clock=os.clock(),interval=bI,callbacks={onClock=function()end}}setmetatable(bJ,bH.Clock)return bJ end,event=function(self,bz)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,bz)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a2,a3,bc,aY,aZ)local bK={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_CENTER,text=bc,pos=h.Vector2.new(a2,a3),colors={foreground=aY,background=aZ},callbacks={onDraw=function()end}}setmetatable(bK,bH.Label)return bK end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bL=g.split(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,bM in next,bL do b2:write(self.pos.x,self.pos.y+d-1,bM,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then local bN=0;for d,bM in next,bL do if d==1 then bN=math.floor(#bM/2)b2:write(self.pos.x,self.pos.y,bM,self.colors.foreground,self.colors.background)else b2:write(self.pos.x+bN-math.floor(#bM/2),self.pos.y+d-1,bM,self.colors.foreground,self.colors.background)end end end end},Button={new=function(a2,a3,aQ,aR,bc,aY,bO,bP)local bQ={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bc,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aQ,aR),timed={enabled=false,clock=bH.Clock.new(0.5)},colors={foreground=aY,active_background=bO,unactive_background=bP},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}bQ.timed.clock.binded_button=bQ;bQ.timed.clock.oneshot=true;bQ.timed.clock:stop()f.set_callback(bQ.timed.clock,b.ONCLOCK,function(self,bz)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,bz)self.binded_button.callbacks.onTimeout(self.binded_button,bz)end)setmetatable(bQ,bH.Button)return bQ end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then b2:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else b2:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local bL=g.split(self.text,"\n")local bR=math.floor((self.size.y-#bL)/2)+self.pos.y;for be=0,#bL-1 do local bM=bL[be+1]local bS;if self.text_alignment==b.ALIGN_LEFT then bS=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then bS=math.floor((self.size.x-#bM)/2)+self.pos.x end;b2:write(bS,bR+be,bM,self.colors.foreground)end end,event=function(self,bz)if self.hidden then return false end;if bz.name==b.TOUCH then if k.is_area_pressed(bz.x,bz.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(bz)return true else self.callbacks.onFailedPress(self,bz)end elseif bv:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(bz)end;if self.timed.enabled then self.timed.clock:event(bz)end end,press=function(self,bz)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,bz)end else self.active=not self.active;self.callbacks.onPress(self,bz)end end},Progressbar={new=function(a2,a3,aQ,aR,bT,ai,aj,aY,bU,bV)local bW={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aQ,aR),value={max=aj,min=ai,current=bT,draw_percentage=true,percentage_precision=2},colors={foreground=aY,filled_background=bU,unfilled_background=bV},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(bW,bH.Progressbar)return bW end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bX=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local bY=math.floor(self.size.x*bX)b2:rectangle(self.pos.x,self.pos.y,bY,self.size.y,self.colors.filled_background)b2:rectangle(self.pos.x+bY,self.pos.y,self.size.x-bY,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local bZ=g.format_number(bX*100,self.value.percentage_precision).."%"local b_=math.floor((self.size.x-#bZ)/2)+self.pos.x;local bR=math.floor((self.size.y-1)/2)+self.pos.y;b2:write(b_,bR,bZ,self.colors.foreground)end end,event=function(self,bz)if self.hidden then return false end;if bz.name==b.TOUCH then if k.is_area_pressed(bz.x,bz.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,bz)end end end,set=function(self,I)local c0=h.constrain(I,self.value.min,self.value.max)self.value.current=c0 end},Memo={new=function(a2,a3,aQ,aR,aY,aZ)local c1={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aQ,aR),editable=true,tab_spaces="  ",lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=bH.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=aY,background=aZ,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end}}c1.cursor.blink.binded_cursor=c1.cursor;f.set_callback(c1.cursor.blink,b.ONCLOCK,function(self,bz)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(c1,bH.Memo)return c1 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)b2:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local c2=self.cursor.pos.x-self.first_visible_char;local c3=self.cursor.pos.y-self.first_visible_line;for a3=1,self.size.y do local bM=self.lines[a3+self.first_visible_line-1]or""local c4=bM:sub(self.first_visible_char,self.first_visible_char+self.size.x-1)b2:write(self.pos.x,self.pos.y+a3-1,c4,self.colors.foreground)end;if self.cursor.visible and c2>=0 and c2<self.size.x and c3>=0 and c3<self.size.y then b2:write(c2+self.pos.x,c3+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,bz)if self.hidden then return false end;if not self.editable then return false end;if bz.name==b.TOUCH then if k.is_area_pressed(bz.x,bz.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then local a2=bz.x-self.pos.x;local a3=bz.y-self.pos.y;self:set_cursor(a2+self.first_visible_char,a3+self.first_visible_line)self:focus(true,bz)self.callbacks.onPress(self,bz)return true else self:focus(false,bz)self.callbacks.onFailedPress(self,bz)return false end elseif bz.name==b.DELETED then self:focus(false,bz)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,bz)if bz.name==b.PASTE then self:write(bz.paste)elseif bz.name==b.CHAR then if self.callbacks.onChar(self,bz)then return true end;self:write(bz.char)elseif bz.name==b.KEY then if self.callbacks.onKey(self,bz)then return true end;if bv:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local c5=self.lines[self.cursor.pos.y-1]local c6=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local b9=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(c6 .."\n"..c5)self:set_cursor(b9,self.cursor.pos.y-1)end elseif bv:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local c6=self.lines[self.cursor.pos.y]local c7=self.lines[self.cursor.pos.y+1]if not c7 then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local b9=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(c7 .."\n"..c6)self:set_cursor(b9,self.cursor.pos.y)elseif bz.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)elseif bz.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)elseif bz.key==b.KEY_RIGHT then local bM=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#bM+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end elseif bz.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local c8=self.lines[self.cursor.pos.y-1]self:set_cursor(#c8+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif bz.key==b.KEY_BACKSPACE then local bM=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local c9=#self.lines[self.cursor.pos.y-1]+1;local ca=self.cursor.pos.y-1;self:set_cursor(c9,ca)self:write(bM)self:set_cursor(c9,ca)end else self.lines[self.cursor.pos.y]=bM:sub(1,self.cursor.pos.x-2)..bM:sub(self.cursor.pos.x)self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif bz.key==b.KEY_DELETE then local bM=self.lines[self.cursor.pos.y]local cb=bM:sub(self.cursor.pos.x)if#cb>0 then self.lines[self.cursor.pos.y]=bM:sub(1,self.cursor.pos.x-1)..bM:sub(self.cursor.pos.x+1)else local c7=self.lines[self.cursor.pos.y+1]if c7 then local c9=self.cursor.pos.x;local ca=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(c7)self:set_cursor(c9,ca)end end elseif bz.key==b.KEY_ENTER then local cc=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cd=cc:gsub("(%s*).*","%1")self:write("\n"..cd)elseif bv:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local ce=self.lines[self.cursor.pos.y]local cd=ce:gsub("^(%s*).*$","%1")local cf=math.min(#self.tab_spaces,#cd)self.lines[self.cursor.pos.y]=ce:sub(cf+1)self:set_cursor(self.cursor.pos.x-cf,self.cursor.pos.y)elseif bz.key==b.KEY_TAB then local b9=self.cursor.pos.x;local cg=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local ch=#self.lines[self.cursor.pos.y]-cg;self:set_cursor(b9+ch,self.cursor.pos.y)end elseif bz.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,bz)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+bz.direction,1,#self.lines)end;return true end end,focus=function(self,ci,bz)if ci then self.focussed=true;self.callbacks.onFocus(self,bz)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,bz)end end,set_cursor=function(self,c9,ca,cj)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then ca=h.constrain(ca,1,self.limits.y)end;if cj then for a3=#self.lines+1,ca do if not self.lines[a3]then self.lines[a3]=""end end else ca=h.constrain(ca,1,#self.lines)end;c9=h.constrain(c9,1,#self.lines[ca]+1)self.cursor.pos=h.Vector2.new(c9,ca)local c2=self.cursor.pos.x-self.first_visible_char;local c3=self.cursor.pos.y-self.first_visible_line;if c2>=self.size.x then self.first_visible_char=self.first_visible_char+c2-self.size.x+1 elseif c2<0 then self.first_visible_char=self.first_visible_char+c2 end;if c3>=self.size.y then self.first_visible_line=self.first_visible_line+c3-self.size.y+1 elseif c3<0 then self.first_visible_line=self.first_visible_line+c3 end end,write=function(self,...)local bc=g.join({...},"")local bL=g.split(bc,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local K="[^"..g.escape_magic_characters(g.join(self.whitelist,"")).."]"for d,bM in next,bL do bL[d]=bM:gsub(K,"")end elseif#self.blacklist>0 then local K="["..g.escape_magic_characters(g.join(self.blacklist,"")).."]"for d,bM in next,bL do bL[d]=bM:gsub(K,"")end end;if self.limits.y>0 then for a3=1,#self.lines+#bL-1-self.limits.y do table.remove(bL)end;if#bL==0 then return end end;if#bL>1 then for ck,bM in next,bL do if ck==1 then local cl=self.lines[self.cursor.pos.y]local cm=cl:sub(1,self.cursor.pos.x-1)local cb=cl:sub(self.cursor.pos.x)local cn=bL[#bL]if self.limits.x>0 then bM=bM:sub(1,self.limits.x-#cm)cn=cn:sub(1,self.limits.x-#cb)end;self.lines[self.cursor.pos.y]=cm..bM;table.insert(self.lines,self.cursor.pos.y+1,cn..cb)self:set_cursor(#cn+1,self.cursor.pos.y+1)elseif ck==#bL then break else if self.limits.x>0 then bM=bM:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,bM)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cl=self.lines[self.cursor.pos.y]local cm=cl:sub(1,self.cursor.pos.x-1)local cb=cl:sub(self.cursor.pos.x)if self.limits.x>0 then bL[1]=bL[1]:sub(1,self.limits.x-(#cm+#cb))end;self.lines[self.cursor.pos.y]=cm..bL[1]..cb;self:set_cursor(self.cursor.pos.x+#bL[1],self.cursor.pos.y)end end,print=function(self,...)local bc=g.join({...},"")local aw=#self.lines>0 and"\n"or""self:write(aw..bc)end,clear=function(self)self.lines={""}self:set_cursor(1,1)end},Window={new=function(a2,a3,aQ,aR,aZ,co)local cp={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aQ,aR),drag_options={enabled=true,from=h.Vector2.new(1,1)},shadow={enabled=co,offset=h.Vector2.new(1,1)},elements={},colors={background=aZ,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end}}setmetatable(cp,bH.Window)return cp end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then b2:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;b2:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,bz)if self.hidden then return false end;local cq=self:event_elements(bz)if not cq then if bz.name==b.TOUCH then if k.is_area_pressed(bz.x,bz.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=h.Vector2.new(bz.x,bz.y)self.focussed=true;self.callbacks.onPress(self,bz)self.callbacks.onFocus(self,bz)return true else self.focussed=false;self.callbacks.onFailedPress(self,bz)self.callbacks.onFocus(self,bz)end elseif bz.name==b.MOUSEDRAG and self.focussed then self:drag(bz.x,bz.y)return true elseif bz.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,bz)end else self.focussed=false;self.callbacks.onFocus(self,bz)end;return cq end,drag=function(self,a2,a3)if self.drag_options.enabled then local cr=h.Vector2.new(a2-self.drag_options.from.x,a3-self.drag_options.from.y)self.pos=self.pos+cr;for d,cs in next,self.elements do if cs.pos then cs.pos=cs.pos+cr end end;self.drag_options.from=h.Vector2.new(a2,a3)end end,set_elements=function(self,ct,cu)self.elements={}for d,cs in next,ct do if cu then cs.pos=self.pos+cs.pos-h.Vector2.ONE end;table.insert(self.elements,cs)end end,draw_elements=function(self)for d=#self.elements,1,-1 do local cs=self.elements[d]if cs.draw then cs:draw()end end end,event_elements=function(self,bz)local cq=false;for d,cs in next,self.elements do if cs.event then local cv=cs:event(bz)cq=cq or cv;if cv then bz={name=b.DELETED}end end end;return cq end}}bH.Clock.__index=bH.Clock;bH.Label.__index=bH.Label;bH.Button.__index=bH.Button;bH.Progressbar.__index=bH.Progressbar;bH.Memo.__index=bH.Memo;bH.Window.__index=bH.Window;local cw={}cw={new=function(cx,cy)local cz={options={enabled=false,FPS_target=cx,EPS_target=cy},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=bH.Clock.new(1/cx),stats_clock=bH.Clock.new(1),FPS_label=bH.Label.new(1,1,"1 FPS",colors.white),EPS_label=bH.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,cA)self.enabled=cA;self.elements.stats_clock.enabled=cA;self.elements.FPS_label.hidden=not cA;self.elements.EPS_label.hidden=not cA end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+h.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}cz.elements.loop.stats_clock.stats=cz.stats;cz.stats.elements=cz.elements.loop;f.set_callback(cz.elements.loop.stats_clock,b.ONCLOCK,function(self,bz)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)cz.stats:enable(false)setmetatable(cz,cw)return cz end,set_monitors=function(self,aU)self.monitors=m.get_monitors(aU)end,set_elements=function(self,ct)self.elements.high_priority={}self.elements.low_priority={}for d,I in next,ct do if I.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,I)else table.insert(self.elements.low_priority,I)end end end,draw_elements=function(self)local function cB(F)for d=#F,1,-1 do local cs=F[d]if cs.draw then cs:draw()end end end;self.callbacks.onDraw(self)local cC=b2.screens;b2.screens=self.monitors;cB(self.elements.low_priority)cB(self.elements.high_priority)for d,cs in next,self.elements.loop do if cs.draw then cs:draw()end end;b2:draw()b2.screens=cC;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,bz)local function aS(F)for d,cs in next,F do if cs.event then if cs:event(bz)then bz={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,bz)then bz={name=b.DELETED}end;if bz.name==b.TOUCH then local cD=false;for cE,aX in next,self.monitors do if bz.from==cE then cD=true;break end end;if not cD then bz={name=b.DELETED}end end;aS(self.elements.loop)local cF={}for d,cs in next,self.elements.high_priority do if cs.event then local cG=cs:event(bz)if cG then bz={name=b.DELETED}if self.elements.high_priority~=cs then table.insert(cF,{element=cs,key=d})end end end end;if#cF>0 then for d,I in next,cF do table.insert(self.elements.high_priority,1,I.element)table.remove(self.elements.high_priority,I.key+#cF)end end;aS(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;bv:reset()f.set_callback(self.elements.loop.clock,b.ONCLOCK,function(cH,bz)self.callbacks.onClock(self,bz)self:draw_elements()cH.interval=1/self.options.FPS_target end)self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local cI=os.startTimer(1/self.options.EPS_target)local cJ={os.pullEvent()}local bz=k.format_event_table(cJ)bv:manage_event(bz)self:event_elements(bz)os.cancelTimer(cI)end;bv:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}cw.__index=cw;setmetatable(h.Vector2,e)setmetatable(h.Vector3,e)for d,cs in next,bH do setmetatable(cs,e)end;setmetatable(cw,e)local cK={...}if cK[1]=="help"then local bL={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,bM in next,bL do m.better_print(term,bM.foreground,bM.background,bM.text)end elseif cK[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif cK[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif cK[1]=="copyright"then local cL={colors.red,colors.yellow,colors.green}local cM=g.split(a.copyright,"\n\n")for d,cN in next,cM do m.better_print(term,cL[d],nil,cN)if d<#cM then read("")end end elseif cK[1]=="setup"then if shell then local cO="YAGUI_PATH"local V="/"..shell.getRunningProgram()l.set(cO,V)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(cO),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif cK[1]=="create"then if cK[2]then local V=shell.resolve(cK[2])if g.get_extension(V)~="lua"then V=V..".lua"end;if fs.exists(V)then m.better_print(term,colors.red,nil,"PATH: \"/",V,"\" already exists, please use another path or delete it.")else local cP=fs.open(V,"w")cP.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")cP.close()m.better_print(term,colors.green,nil,"New project was created at \"/",V,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif cK[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",cK[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local cQ={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=b2,input=bv,WSS=bA,wireless_screen_share=bA,gui_elements=bH,Loop=cw}for d,I in next,b do cQ[d]=I end;return cQ