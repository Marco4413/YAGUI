--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.3",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",CHAR="char",KEY="key",DELETED="DELETED",DISCONNECTED="DISCONNECTED",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONDRAW=3,ONPRESS=4,ONCLOCK=5,ONEVENT=6,ONFOCUS=7,KEY_UP_ARROW=200,KEY_DOWN_ARROW=208,KEY_RIGHT_ARROW=205,KEY_LEFT_ARROW=203,KEY_ENTER=28,KEY_BACKSPACE=14,KEY_DELETE=211,KEY_TAB=15,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3}local c={set_callback=function(d,e,f)if e==b.ONDRAW then d.callbacks.onDraw=f elseif e==b.ONPRESS then d.callbacks.onPress=f elseif e==b.ONCLOCK then d.callbacks.onClock=f elseif e==b.ONEVENT then d.callbacks.onEvent=f elseif e==b.ONFOCUS then d.callbacks.onFocus=f end end}local g={}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(h,i)if not i then i=""end;local j=""for k=1,#h do local l=h[k]j=j..tostring(l)if k<#h then j=j..i end end;return j end,split=function(j,i)local h={}while true do local m=j:find(i)if m then table.insert(h,j:sub(1,m-1))j=j:sub(m+1)else table.insert(h,j)break end end;return h end,compare_versions=function(n,o)local p=g.split(n,".")local q=g.split(o,".")local r=#p;local s=#q;for t=1,math.min(r,s)do if tonumber(p[t])>tonumber(q[t])then return 1 elseif tonumber(p[t])<tonumber(q[t])then return-1 end end;if r>s then return 1 elseif r<s then return-1 end;return 0 end,escape_magic_characters=function(j)for k,u in pairs(g.magic_characters)do j=j:gsub("[%"..u.."]",'%%%'..u)end;return j end}local v={}v={Vector2={new=function(w,x)local y={x=w,y=x}setmetatable(y,v.Vector2)return y end,__add=function(self,z)return v.Vector2.new(self.x+z.x,self.y+z.y)end,__sub=function(self,z)return v.Vector2.new(self.x-z.x,self.y-z.y)end,__mul=function(self,A)return v.Vector2.new(self.x*A,self.y*A)end,__div=function(self,A)return v.Vector2.new(self.x/A,self.y/A)end},map=function(l,B,C,D,E,F)local G=(l-B)/(C-B)*(E-D)+D;if F then return v.constrain(G,D,E)end;return G end,constrain=function(l,H,I)return math.min(I,math.max(H,l))end}v.Vector2.__index=v.Vector2;local J={has_value=function(h,l)for K,L in pairs(h)do if L==l then return true,K end end;return false,nil end,has_key=function(h,k)if h.key~=nil then return true,h.key end;return false,nil end}local M={is_area_pressed=function(N,O,w,x,P,Q)if N>=w and N<w+P then if O>=x and O<x+Q then return true end end;return false end,format_event_table=function(R)local e={}e.name=R[1]if e.name=="mouse_click"then e.name=b.TOUCH;e.from="terminal"e.button=R[2]e.x=R[3]e.y=R[4]return e elseif e.name=="monitor_touch"then e.name=b.TOUCH;e.from=R[2]e.button=1;e.x=R[3]e.y=R[4]return e elseif e.name=="char"then e.name=b.CHAR;e.char=R[2]return e elseif e.name=="key"then e.name=b.KEY;e.key=R[2]return e elseif e.name=="mouse_drag"then e.name=b.MOUSEDRAG;e.button=R[2]e.x=R[3]e.y=R[4]return e end;table.remove(R,1)e.parameters=R;return e end}local S={_path="/.settings",set=function(self,T,l)settings.set(T,l)settings.save(self._path)end,unset=function(self,T)settings.unset(T)settings.save(self._path)end,get=function(T)return settings.get(T)end}local U={get_monitors=function(V)local W={}for k,X in pairs(V)do if X=="terminal"then W[X]=term else if peripheral.getType(X)=="monitor"then W[X]=peripheral.wrap(X)end end end;return W end,better_print=function(Y,Z,_,...)local a0=g.join({...},"")local a1=Y.getTextColor()local a2=Y.getBackgroundColor()if Z then Y.setTextColor(Z)end;if _ then Y.setBackgroundColor(_)end;print(a0)Y.setTextColor(a1)Y.setBackgroundColor(a2)end}local a3={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,w,x)w=tostring(w)x=tostring(x)if self.pixels[w]then if self.pixels[w][x]then return true end end;return false end,get_pixel=function(self,w,x)w=tostring(w)x=tostring(x)if self:is_pixel_custom(w,x)then return self.pixels[w][x]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,w,x,char,Z,_)w=tostring(w)x=tostring(x)local a4=self:get_pixel(w,x)if char and#char==1 then a4.char=char end;if Z then a4.foreground=Z end;if _ then a4.background=_ end;if not self.pixels[w]then self.pixels[w]={}end;self.pixels[w][x]=a4 end,clear=function(self)self.pixels={}end},set_screens=function(self,a5)self.screens=U.get_monitors(a5)end,clear=function(self)self.buffer:clear()end,draw=function(self)local a6=self.screens;local a7=self.buffer;for a8,a9 in pairs(a6)do local aa=a9.getBackgroundColor()local ab=a9.getTextColor()local ac,ad=a9.getCursorPos()local P,Q=a9.getSize()for w=1,P do for x=1,Q do a9.setCursorPos(w,x)local a4=a7:get_pixel(w,x)a9.setBackgroundColor(a4.background)a9.setTextColor(a4.foreground)a9.write(a4.char)end end;a9.setBackgroundColor(aa)a9.setTextColor(ab)a9.setCursorPos(ac,ad)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,w,x,ae)self.buffer:set_pixel(w,x," ",ae,ae)end,write=function(self,w,x,af,Z,_)for ag=0,#af-1 do char=af:sub(ag+1,ag+1)self.buffer:set_pixel(w+ag,x,char,Z,_)end end,rectangle=function(self,w,x,P,Q,ae)for ag=0,P-1 do for ah=0,Q-1 do self:point(w+ag,x+ah,ae)end end end,line=function(self,ai,aj,ak,al,ae)local function am(ai,aj,ak,al)local an=1;if ai>ak then an=-1 end;local ao=ak-ai;local ap=al-aj;local aq=1;if ap<0 then aq=-1;ap=-ap end;local ar=2*ap-ao;local x=aj;for w=ai,ak,an do self:point(w,x,ae)if ar>0 then x=x+aq;ar=ar-2*ao end;ar=ar+2*ap end end;local function as(ai,aj,ak,al)local an=1;if aj>al then an=-1 end;local ao=ak-ai;local ap=al-aj;local at=1;if ao<0 then at=-1;ao=-ao end;local ar=2*ao-ap;local w=ai;for x=aj,al,an do self:point(w,x,ae)if ar>0 then w=w+at;ar=ar-2*ap end;ar=ar+2*ao end end;if math.abs(al-aj)<math.abs(ak-ai)then if ai>ak then am(ak,al,ai,aj)else am(ai,aj,ak,al)end else if aj>al then as(ak,al,ai,aj)else as(ai,aj,ak,al)end end end,circle=function(self,au,av,aw,ae)local ax=aw*aw;self:point(au,av+aw,ae)self:point(au,av-aw,ae)self:point(au+aw,av,ae)self:point(au-aw,av,ae)local w=1;local x=math.floor(math.sqrt(ax-1)+0.5)while w<x do self:point(au+w,av+x,ae)self:point(au+w,av-x,ae)self:point(au-w,av+x,ae)self:point(au-w,av-x,ae)self:point(au+x,av+w,ae)self:point(au+x,av-w,ae)self:point(au-x,av+w,ae)self:point(au-x,av-w,ae)w=w+1;x=math.floor(math.sqrt(ax-w*w)+0.5)end;if w==x then self:point(au+w,av+x,ae)self:point(au+w,av-x,ae)self:point(au-w,av+x,ae)self:point(au-w,av-x,ae)end end}local ay={}ay={side=nil,protocol="YAGUI-"..a.ver.."_WSS",host_prefix="_Host:",default_timeout=0.5,open=function(self,az)rednet.open(az)self.side=az end,close=function(self)rednet.close(self.side)self.side=nil end,server={root={},servername=nil,hostname=nil,host=function(self,aA)if not aA then aA=os.getComputerID()end;aA=tostring(aA)local aB=self.root.protocol..self.root.host_prefix..aA;if rednet.lookup(aB,aA)then return false end;rednet.host(aB,aA)self.servername=aB;self.hostname=aA;return true end,unhost=function(self)rednet.broadcast(b.DISCONNECTED,self.servername)rednet.unhost(self.servername,self.hostname)self.servername=nil;self.hostname=nil end,broadcast=function(self)rednet.broadcast(a3.frame,self.servername)end},client={root={},servername=nil,host_id=nil,connect=function(self,aA)aA=tostring(aA)local aB=self.root.protocol..self.root.host_prefix..aA;local aC=rednet.lookup(aB,aA)if not aC then return false end;self.servername=aB;self.host_id=aC;return true end,disconnect=function(self)self.servername=nil;self.host_id=nil end,listen=function(self,aD)if not aD then aD=self.root.default_timeout end;local aE={rednet.receive(self.servername,aD)}if aE[1]==self.host_id then local a7=aE[2]if not a7 then return false end;if a7==b.DISCONNECTED then return a7 end;a3.buffer.background=a7.background;a3.buffer.pixels=a7.pixels;return true end;return false end}}ay.server.root=ay;ay.client.root=ay;local aF={}aF={Clock={new=function(aG)local aH={enabled=true,oneshot=false,clock=os.clock(),interval=aG,callbacks={onClock=function()end}}setmetatable(aH,aF.Clock)return aH end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,formatted_event)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(w,x,af,Z,_)local aI={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text=af,pos=v.Vector2.new(w,x),colors={foreground=Z,background=_},callbacks={onDraw=function()end,onPress=function()end}}setmetatable(aI,aF.Label)return aI end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)a3:write(self.pos.x,self.pos.y,self.text,self.colors.foreground,self.colors.background)end,event=function(self,formatted_event)if formatted_event.name==b.TOUCH then if M.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,#self.text,1)then self.callbacks.onPress(self,formatted_event)end end end},Button={new=function(w,x,P,Q,af,Z,aJ,aK)local aL={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,text=af,pos=v.Vector2.new(w,x),size=v.Vector2.new(P,Q),timed={enabled=false,clock=aF.Clock.new(0.5)},colors={foreground=Z,active_background=aJ,unactive_background=aK},callbacks={onDraw=function()end,onPress=function()end}}aL.timed.clock.binded_button=aL;aL.timed.clock.oneshot=true;c.set_callback(aL.timed.clock,b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)end)setmetatable(aL,aF.Button)return aL end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then a3:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else a3:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local aM=g.split(self.text,"\n")local aN=math.floor((self.size.y-#aM)/2)+self.pos.y;for ah=0,#aM-1 do local l=aM[ah+1]local aO=math.floor((self.size.x-#l)/2)+self.pos.x;a3:write(aO,aN+ah,l,self.colors.foreground)end end,event=function(self,formatted_event)if formatted_event.name==b.TOUCH then if M.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self:press()end;return true end end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self)self.active=not self.active;self.callbacks.onPress(self,formatted_event)end},Progressbar={new=function(w,x,P,Q,aP,H,I,Z,aQ,aR)local aS={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=v.Vector2.new(w,x),size=v.Vector2.new(P,Q),value={max=I,min=H,current=aP,draw_percentage=true},colors={foreground=Z,filled_background=aQ,unfilled_background=aR},callbacks={onDraw=function()end,onPress=function()end}}setmetatable(aS,aF.Progressbar)return aS end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local aT=v.map(self.value.current,self.value.min,self.value.max,0,1,true)local aU=math.floor(self.size.x*aT)a3:rectangle(self.pos.x,self.pos.y,aU,self.size.y,self.colors.filled_background)a3:rectangle(self.pos.x+aU,self.pos.y,self.size.x-aU,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local aV=tostring(aT*100).."%"local aW=math.floor((self.size.x-#aV)/2)+self.pos.x;local aN=math.floor((self.size.y-1)/2)+self.pos.y;a3:write(aW,aN,aV,self.colors.foreground)end end,event=function(self,formatted_event)if formatted_event.name==b.TOUCH then if M.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,l)local aX=v.constrain(l,self.value.min,self.value.max)self.value.current=aX end},Memo={new=function(w,x,P,Q,Z,_)local aY={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=v.Vector2.new(w,x),size=v.Vector2.new(P,Q),editable=true,lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=aF.Clock.new(0.5),pos=v.Vector2.new(1,1)},limits=v.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=Z,background=_,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onFocus=function()end}}aY.cursor.blink.binded_cursor=aY.cursor;c.set_callback(aY.cursor.blink,b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(aY,aF.Memo)return aY end,draw=function(self)if self.hidden then return end;a3:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local aZ=self.cursor.pos.x-self.first_visible_char;local a_=self.cursor.pos.y-self.first_visible_line;if aZ>=self.size.x then self.first_visible_char=self.first_visible_char+aZ-self.size.x+1;aZ=self.cursor.pos.x-self.first_visible_char-1 elseif aZ<1 then self.first_visible_char=self.first_visible_char+aZ;aZ=0 end;if a_>=self.size.y then self.first_visible_line=self.first_visible_line+a_-self.size.y+1;a_=self.cursor.pos.y-self.first_visible_line-1 elseif a_<1 then self.first_visible_line=self.first_visible_line+a_;a_=0 end;for x=1,self.size.y do local b0=self.lines[x+self.first_visible_line-1]or""local b1=b0:sub(self.first_visible_char,self.first_visible_char+self.size.x-1)a3:write(self.pos.x,self.pos.y+x-1,b1,self.colors.foreground)end;if self.cursor.visible then a3:write(aZ+self.pos.x,a_+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if not self.editable then return false end;if formatted_event.name==b.TOUCH then if M.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.focussed=true;local w=formatted_event.x-self.pos.x;local x=formatted_event.y-self.pos.y;self:set_cursor(w+self.first_visible_char,x+self.first_visible_line)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)return false end elseif formatted_event.name==b.DELETED then self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.CHAR then self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if formatted_event.key==b.KEY_UP_ARROW then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)elseif formatted_event.key==b.KEY_DOWN_ARROW then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)elseif formatted_event.key==b.KEY_RIGHT_ARROW then local b0=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#b0+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end elseif formatted_event.key==b.KEY_LEFT_ARROW then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local b2=self.lines[self.cursor.pos.y-1]self:set_cursor(#b2+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif formatted_event.key==b.KEY_BACKSPACE then local b0=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local b3=#self.lines[self.cursor.pos.y-1]+1;local b4=self.cursor.pos.y-1;self:set_cursor(b3,b4)self:write(b0)self:set_cursor(b3,b4)else self.lines[self.cursor.pos.y]=b0:sub(1,self.cursor.pos.x-2)..b0:sub(self.cursor.pos.x)self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif formatted_event.key==b.KEY_DELETE then local b0=self.lines[self.cursor.pos.y]local b5=b0:sub(self.cursor.pos.x)if#b5>0 then self.lines[self.cursor.pos.y]=b0:sub(1,self.cursor.pos.x-1)..b0:sub(self.cursor.pos.x+1)else local b6=self.lines[self.cursor.pos.y+1]if b6 then local b3=self.cursor.pos.x;local b4=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(b6)self:set_cursor(b3,b4)end end elseif formatted_event.key==b.KEY_ENTER then self:write("\n")elseif formatted_event.key==b.KEY_TAB then self:write("  ")end;return true end end end,set_cursor=function(self,b3,b4,b7)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then b4=v.constrain(b4,1,self.limits.y)end;if b7 then for x=#self.lines+1,b4 do if not self.lines[x]then self.lines[x]=""end end else b4=v.constrain(b4,1,#self.lines)end;b3=v.constrain(b3,1,#self.lines[b4]+1)self.cursor.pos=v.Vector2.new(b3,b4)end,write=function(self,...)local af=g.join({...},"")local b8=g.split(af,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local b9="[^"..g.escape_magic_characters(g.join(self.whitelist,"")).."]"for k,b0 in pairs(b8)do b8[k]=b0:gsub(b9,"")end elseif#self.blacklist>0 then local b9="["..g.escape_magic_characters(g.join(self.blacklist,"")).."]"for k,b0 in pairs(b8)do b8[k]=b0:gsub(b9,"")end end;if self.limits.y>0 then for x=1,#self.lines+#b8-1-self.limits.y do table.remove(b8)end;if#b8<=0 then return end end;if#b8>1 then for ba,b0 in pairs(b8)do if ba<=1 then local bb=self.lines[self.cursor.pos.y]local bc=bb:sub(1,self.cursor.pos.x-1)local b5=bb:sub(self.cursor.pos.x)local bd=b8[#b8]if self.limits.x>0 then b0=b0:sub(1,self.limits.x-#bc)bd=bd:sub(1,self.limits.x-#b5)end;self.lines[self.cursor.pos.y]=bc..b0;self:set_cursor(1,self.cursor.pos.y+1,true)table.insert(self.lines,self.cursor.pos.y,bd..b5)self:set_cursor(#bd+1,self.cursor.pos.y)elseif ba>=#b8 then break else if self.limits.x>0 then b0=b0:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,b0)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local bb=self.lines[self.cursor.pos.y]local bc=bb:sub(1,self.cursor.pos.x-1)local b5=bb:sub(self.cursor.pos.x)if self.limits.x>0 then b8[1]=b8[1]:sub(1,self.limits.x-(#bc+#b5))end;self.lines[self.cursor.pos.y]=bc..b8[1]..b5;self:set_cursor(self.cursor.pos.x+#b8[1],self.cursor.pos.y)end end},Window={new=function(w,x,P,Q,_,be)local bf={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=v.Vector2.new(w,x),size=v.Vector2.new(P,Q),drag_options={enabled=true,draggable=false,from=v.Vector2.new(1,1)},shadow={enabled=be,offset=v.Vector2.new(1,1)},elements={},colors={background=_,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end}}setmetatable(bf,aF.Window)return bf end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow then a3:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;a3:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,formatted_event)local bg=self:event_elements(formatted_event)if not bg then if formatted_event.name==b.TOUCH then if M.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=v.Vector2.new(formatted_event.x,formatted_event.y)self.drag_options.draggable=true;self.callbacks.onPress(self,formatted_event)return true else self.drag_options.draggable=false end elseif formatted_event.name==b.MOUSEDRAG and self.drag_options.draggable then self:drag(formatted_event.x,formatted_event.y)return true elseif formatted_event.name==b.DELETED then self.drag_options.draggable=false end else self.drag_options.draggable=false end;return bg end,drag=function(self,w,x)if self.drag_options.enabled then local bh=v.Vector2.new(w-self.drag_options.from.x,x-self.drag_options.from.y)self.pos=self.pos+bh;for k,bi in pairs(self.elements)do if bi.pos then bi.pos=bi.pos+bh end end;self.drag_options.from=v.Vector2.new(w,x)end end,set_elements=function(self,bj)self.elements={}for k,l in pairs(bj)do table.insert(self.elements,l)end end,draw_elements=function(self)for k=#self.elements,1,-1 do local bi=self.elements[k]if bi.draw then bi:draw()end end end,event_elements=function(self,formatted_event)local bg=false;for k,bi in pairs(self.elements)do local bk=bi:event(formatted_event)bg=bg or bk;if bk then formatted_event={name=b.DELETED}end end;return bg end}}aF.Clock.__index=aF.Clock;aF.Label.__index=aF.Label;aF.Button.__index=aF.Button;aF.Progressbar.__index=aF.Progressbar;aF.Memo.__index=aF.Memo;aF.Window.__index=aF.Window;local bl={}bl={new=function(bm,bn)local bo={options={enabled=false,FPS_target=bm,EPS_target=bn},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=aF.Clock.new(1/bm),stats_clock=aF.Clock.new(1),FPS_label=aF.Label.new(1,1,"1 FPS",colors.white),EPS_label=aF.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=v.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,bp)self.enabled=bp;self.elements.stats_clock.enabled=bp;self.elements.FPS_label.hidden=not bp;self.elements.EPS_label.hidden=not bp end,FPS=0,EPS=0},callbacks={onDraw=function()end,onClock=function()end,onEvent=function()end}}bo.elements.loop.stats_clock.stats=bo.stats;bo.stats.elements=bo.elements.loop;c.set_callback(bo.elements.loop.stats_clock,b.ONCLOCK,function(self,formatted_event)self.stats.elements.FPS_label.pos=self.stats.pos;self.stats.elements.EPS_label.pos=self.stats.pos+v.Vector2.new(0,1)self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)bo.stats:enable(false)setmetatable(bo,bl)return bo end,set_monitors=function(self,V)self.monitors=U.get_monitors(V)end,set_elements=function(self,bj)self.elements.high_priority={}self.elements.low_priority={}for k,l in pairs(bj)do if l.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,l)else table.insert(self.elements.low_priority,l)end end end,draw_elements=function(self)local function bq(h)for k=#h,1,-1 do local bi=h[k]if bi.draw then bi:draw()end end end;self.callbacks.onDraw(self)local br=a3.screens;a3.screens=self.monitors;bq(self.elements.low_priority)bq(self.elements.high_priority)for k,bi in pairs(self.elements.loop)do if bi.draw then bi:draw()end end;a3:draw()a3.screens=br;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,bs)local formatted_event=M.format_event_table(bs)local function R(h)for k,bi in pairs(h)do if bi:event(formatted_event)then formatted_event={name=b.DELETED}end end end;self.callbacks.onEvent(self,formatted_event)if formatted_event.name==b.TOUCH then local bt=false;for bu,Y in pairs(self.monitors)do if formatted_event.from==bu then bt=true;break end end;if not bt then formatted_event={name=b.DELETED}end end;R(self.elements.loop)local bv={}for k,bi in pairs(self.elements.high_priority)do local bw=bi:event(formatted_event)if bw then formatted_event={name=b.DELETED}if self.elements.high_priority~=bi then table.insert(bv,{element=bi,key=k})end end end;if#bv>0 then for k,l in pairs(bv)do table.insert(self.elements.high_priority,1,l.element)table.remove(self.elements.high_priority,l.key+#bv)end end;R(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;c.set_callback(self.elements.loop.clock,b.ONCLOCK,function(bx,formatted_event)self.callbacks.onClock(self,formatted_event)self:draw_elements()bx.interval=1/self.options.FPS_target end)while self.enabled do local by=os.startTimer(1/self.options.EPS_target)local bs={os.pullEvent()}self:event_elements(bs)os.cancelTimer(by)end end,stop=function(self)self.enabled=false end}bl.__index=bl;local bz={...}if bz[1]=="help"then local b8={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil}}for k,b0 in pairs(b8)do U.better_print(term,b0.foreground,b0.background,b0.text)end elseif bz[1]=="info"then U.better_print(term,colors.red,nil,"Library Version: ",a.ver)U.better_print(term,colors.yellow,nil,"Library Author: ",a.author)U.better_print(term,colors.green,nil,"Library Website: ",a.website)elseif bz[1]=="ver"then U.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif bz[1]=="copyright"then local bA={colors.red,colors.yellow,colors.green}local bB=g.split(a.copyright,"\n\n")for k,bC in pairs(bB)do U.better_print(term,bA[k],nil,bC)if k<#bB then read("")end end elseif bz[1]=="setup"then if shell then local bD="YAGUI_PATH"local bE="/"..shell.getRunningProgram()S:set(bD,bE)U.better_print(term,colors.green,nil,"Lib path was set to ",S.get(bD))else U.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE")end elseif bz[1]then U.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",bz[1],"\"")U.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local bF={info=a,generic_utils=c,string_utils=g,math_utils=v,table_utils=J,event_utils=M,setting_utils=S,monitor_utils=U,screen_buffer=a3,WSS=ay,wireless_screen_share=ay,gui_elements=aF,Loop=bl}for k,l in pairs(b)do bF[k]=l end;return bF