--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.8",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",DELETED="DELETED",DISCONNECTED="DISCONNECTED",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",COMPUTER_ADVANCED="computer_advanced",TURTLE="turtle",TURTLE_ADVANCED="turtle_advanced",POCKET="pocket",POCKET_ADVANCED="pocket_advanced",ALIGN_LEFT=1,ALIGN_CENTER=2}for c,d in pairs(keys)do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={set_callback=function(f,g,h)if g==b.ONSTART then f.callbacks.onStart=h elseif g==b.ONSTOP then f.callbacks.onStop=h elseif g==b.ONDRAW then f.callbacks.onDraw=h elseif g==b.ONPRESS then f.callbacks.onPress=h elseif g==b.ONFAILEDPRESS then f.callbacks.onFailedPress=h elseif g==b.ONTIMEOUT then f.callbacks.onTimeout=h elseif g==b.ONCLOCK then f.callbacks.onClock=h elseif g==b.ONEVENT then f.callbacks.onEvent=h elseif g==b.ONFOCUS then f.callbacks.onFocus=h elseif g==b.ONKEY then f.callbacks.onKey=h elseif g==b.ONCHAR then f.callbacks.onChar=h end end,get_computer_type=function(i)if turtle then if i and term.isColor()then return b.TURTLE_ADVANCED else return b.TURTLE end elseif pocket then if i and term.isColor()then return b.POCKET_ADVANCED else return b.POCKET end else if i and term.isColor()then return b.COMPUTER_ADVANCED else return b.COMPUTER end end end}local j={}j={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(k,l)if not l then l=""end;local m=""for d=1,#k do local n=k[d]m=m..tostring(n)if d<#k then m=m..l end end;return m end,split=function(m,l)local k={}while true do local o=m:find(l)if o then table.insert(k,m:sub(1,o-1))m=m:sub(o+1)else table.insert(k,m)break end end;return k end,compare_versions=function(p,q)local r=j.split(p,".")local s=j.split(q,".")local t=#r;local u=#s;for v=1,math.min(t,u)do if tonumber(r[v])>tonumber(s[v])then return 1 elseif tonumber(r[v])<tonumber(s[v])then return-1 end end;if t>u then return 1 elseif t<u then return-1 end;return 0 end,escape_magic_characters=function(m)for d,w in pairs(j.magic_characters)do m=m:gsub("[%"..w.."]",'%%%'..w)end;return m end,get_extension=function(x)local y,z=x:gsub(".*%.","")if z>0 then return y end;return""end}local A={}A={Vector2={new=function(B,C)local D={x=B or 0,y=C or 0}setmetatable(D,A.Vector2)return D end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,__tostring=function(self)return string.format("(%d; %d)",self.x,self.y)end,__add=function(self,E)return A.Vector2.new(self.x+E.x,self.y+E.y)end,__sub=function(self,E)return A.Vector2.new(self.x-E.x,self.y-E.y)end,__mul=function(self,F)return A.Vector2.new(self.x*F,self.y*F)end,__div=function(self,F)return A.Vector2.new(self.x/F,self.y/F)end,__eq=function(self,E)return self:length_sq()==E:length_sq()end,__lt=function(self,E)return self:length_sq()<E:length_sq()end,__le=function(self,E)return self:length_sq()<=E:length_sq()end},map=function(n,G,H,I,J,K)local L=(n-G)/(H-G)*(J-I)+I;if K then return A.constrain(L,I,J)end;return L end,constrain=function(n,M,N)return math.min(N,math.max(M,n))end}A.Vector2.__index=A.Vector2;A.Vector2.ONE=A.Vector2.new(1,1)A.Vector2.UP=A.Vector2.new(0,-1)A.Vector2.DOWN=A.Vector2.new(0,1)A.Vector2.LEFT=A.Vector2.new(-1,0)A.Vector2.RIGHT=A.Vector2.new(1,0)A.Vector2.ZERO=A.Vector2.new(0,0)local O={has_value=function(k,n)for P,Q in pairs(k)do if Q==n then return true,P end end;return false,nil end,has_key=function(k,d)if k[d]~=nil then return true,k[d]end;return false,nil end}local R={}R={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},color_to_paint=function(S)return R.colors[S]end,paint_to_color=function(T)local U,S=O.has_value(R.colors,T)if U then return S end end}local V={is_area_pressed=function(W,X,B,C,Y,Z)if W>=B and W<B+Y then if X>=C and X<C+Z then return true end end;return false end,format_event_table=function(_)local g={}g.name=_[1]if g.name=="mouse_click"then g.name=b.TOUCH;g.from="terminal"g.button=_[2]g.x=_[3]g.y=_[4]return g elseif g.name=="monitor_touch"then g.name=b.TOUCH;g.from=_[2]g.button=1;g.x=_[3]g.y=_[4]return g elseif g.name=="mouse_drag"then g.name=b.MOUSEDRAG;g.button=_[2]g.x=_[3]g.y=_[4]return g elseif g.name=="mouse_up"then g.name=b.MOUSEUP;g.button=_[2]g.x=_[3]g.y=_[4]return g elseif g.name=="mouse_scroll"then g.name=b.MOUSESCROLL;g.direction=_[2]g.x=_[3]g.y=_[4]return g elseif g.name=="char"then g.name=b.CHAR;g.char=_[2]return g elseif g.name=="key"then g.name=b.KEY;g.key=_[2]return g elseif g.name=="key_up"then g.name=b.KEYUP;g.key=_[2]return g elseif g.name=="paste"then g.name=b.PASTE;g.paste=_[2]return g end;table.remove(_,1)g.parameters=_;return g end}local a0={_path="/.settings",set=function(self,a1,n)settings.set(a1,n)settings.save(self._path)end,unset=function(self,a1)settings.unset(a1)settings.save(self._path)end,get=function(a1)return settings.get(a1)end}local a2={get_monitors=function(a3)local a4={}for d,a5 in pairs(a3)do if a5=="terminal"then a4[a5]=term else if peripheral.getType(a5)=="monitor"then a4[a5]=peripheral.wrap(a5)end end end;return a4 end,better_print=function(a6,a7,a8,...)local a9=j.join({...},"")local aa=a6.getTextColor()local ab=a6.getBackgroundColor()if a7 then a6.setTextColor(a7)end;if a8 then a6.setBackgroundColor(a8)end;print(a9)a6.setTextColor(aa)a6.setBackgroundColor(ab)end,better_clear=function(a6)a6.clear()a6.setCursorPos(1,1)end}local ac={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,B,C)B=tostring(B)C=tostring(C)if self.pixels[B]then if self.pixels[B][C]then return true end end;return false end,get_pixel=function(self,B,C)B=tostring(B)C=tostring(C)if self:is_pixel_custom(B,C)then return self.pixels[B][C]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,B,C,char,a7,a8)B=tostring(B)C=tostring(C)local ad=self:get_pixel(B,C)if char and#char==1 then ad.char=char end;ad.foreground=a7 or ad.background;ad.background=a8 or ad.background;if not self.pixels[B]then self.pixels[B]={}end;self.pixels[B][C]=ad end,clear=function(self)self.pixels={}end},set_screens=function(self,ae)self.screens=a2.get_monitors(ae)end,set_monitors=function(self,a3)self:set_screens(a3)end,clear=function(self)self.buffer:clear()end,draw=function(self)local af=self.screens;local ag=self.buffer;for ah,ai in pairs(af)do local aj,ak=ai.getCursorPos()local Y,Z=ai.getSize()for C=1,Z do local al={text="",background="",foreground=""}for B=1,Y do local ad=ag:get_pixel(B,C)al.text=al.text..ad.char;al.background=al.background..R.colors[ad.background]al.foreground=al.foreground..R.colors[ad.foreground]end;ai.setCursorPos(1,C)ai.blit(al.text,al.foreground,al.background)end;ai.setCursorPos(aj,ak)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,B,C,S)self.buffer:set_pixel(B,C," ",S,S)end,write=function(self,B,C,am,a7,a8)for an=0,#am-1 do char=am:sub(an+1,an+1)self.buffer:set_pixel(B+an,C,char,a7,a8)end end,rectangle=function(self,B,C,Y,Z,S)for an=0,Y-1 do for ao=0,Z-1 do self:point(B+an,C+ao,S)end end end,line=function(self,ap,aq,ar,as,S)local function at(ap,aq,ar,as)local au=1;if ap>ar then au=-1 end;local av=ar-ap;local aw=as-aq;local ax=1;if aw<0 then ax=-1;aw=-aw end;local ay=2*aw-av;local C=aq;for B=ap,ar,au do self:point(B,C,S)if ay>0 then C=C+ax;ay=ay-2*av end;ay=ay+2*aw end end;local function az(ap,aq,ar,as)local au=1;if aq>as then au=-1 end;local av=ar-ap;local aw=as-aq;local aA=1;if av<0 then aA=-1;av=-av end;local ay=2*av-aw;local B=ap;for C=aq,as,au do self:point(B,C,S)if ay>0 then B=B+aA;ay=ay-2*aw end;ay=ay+2*av end end;if math.abs(as-aq)<math.abs(ar-ap)then if ap>ar then at(ar,as,ap,aq)else at(ap,aq,ar,as)end else if aq>as then az(ar,as,ap,aq)else az(ap,aq,ar,as)end end end,circle=function(self,aB,aC,aD,S)local aE=aD*aD;self:point(aB,aC+aD,S)self:point(aB,aC-aD,S)self:point(aB+aD,aC,S)self:point(aB-aD,aC,S)local B=1;local C=math.floor(math.sqrt(aE-1)+0.5)while B<C do self:point(aB+B,aC+C,S)self:point(aB+B,aC-C,S)self:point(aB-B,aC+C,S)self:point(aB-B,aC-C,S)self:point(aB+C,aC+B,S)self:point(aB+C,aC-B,S)self:point(aB-C,aC+B,S)self:point(aB-C,aC-B,S)B=B+1;C=math.floor(math.sqrt(aE-B*B)+0.5)end;if B==C then self:point(aB+B,aC+C,S)self:point(aB+B,aC-C,S)self:point(aB-B,aC+C,S)self:point(aB-B,aC-C,S)end end}local aF={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,d)if self.pressed_keys[d]then return true end;return false end,are_keys_pressed=function(self,...)local keys={...}if not(#keys>0)then return false end;for aG,d in pairs(keys)do if not self:is_key_pressed(d)then return false end end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,manage_event=function(self,aH)if aH.name==b.KEY then self:add_key(aH.key)elseif aH.name==b.KEYUP then self:remove_key(aH.key)end end}local aI={}aI={side=nil,protocol="YAGUI-"..a.ver.."_WSS",host_prefix="_Host:",default_timeout=0.5,open=function(self,aJ)rednet.open(aJ)self.side=aJ end,close=function(self)rednet.close(self.side)self.side=nil end,server={root={},servername=nil,hostname=nil,host=function(self,aK)if not aK then aK=os.getComputerID()end;aK=tostring(aK)local aL=self.root.protocol..self.root.host_prefix..aK;if rednet.lookup(aL,aK)then return false,aK end;rednet.host(aL,aK)self.servername=aL;self.hostname=aK;return true,aK end,unhost=function(self)rednet.broadcast(b.DISCONNECTED,self.servername)rednet.unhost(self.servername,self.hostname)self.servername=nil;self.hostname=nil end,broadcast=function(self)rednet.broadcast(ac.frame,self.servername)end},client={root={},servername=nil,host_id=nil,connect=function(self,aK)aK=tostring(aK)local aL=self.root.protocol..self.root.host_prefix..aK;local aM=rednet.lookup(aL,aK)if not aM then return false,aK end;self.servername=aL;self.host_id=aM;return true,aK end,disconnect=function(self)self.servername=nil;self.host_id=nil end,listen=function(self,aN)if not aN then aN=self.root.default_timeout end;local aO={rednet.receive(self.servername,aN)}if aO[1]==self.host_id then local ag=aO[2]if not ag then return false end;if ag==b.DISCONNECTED then return ag end;ac.buffer.background=ag.background;ac.buffer.pixels=ag.pixels;return true end;return false end}}aI.server.root=aI;aI.client.root=aI;local aP={}aP={Clock={new=function(aQ)local aR={enabled=true,oneshot=false,clock=os.clock(),interval=aQ,callbacks={onClock=function()end}}setmetatable(aR,aP.Clock)return aR end,event=function(self,aH)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,aH)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(B,C,am,a7,a8)local aS={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_CENTER,text=am,pos=A.Vector2.new(B,C),colors={foreground=a7,background=a8},callbacks={onDraw=function()end}}setmetatable(aS,aP.Label)return aS end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local aT=j.split(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,aU in pairs(aT)do ac:write(self.pos.x,self.pos.y+d-1,aU,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then local aV=0;for d,aU in pairs(aT)do if d==1 then aV=math.floor(#aU/2)ac:write(self.pos.x,self.pos.y,aU,self.colors.foreground,self.colors.background)else ac:write(self.pos.x+aV-math.floor(#aU/2),self.pos.y+d-1,aU,self.colors.foreground,self.colors.background)end end end end},Button={new=function(B,C,Y,Z,am,a7,aW,aX)local aY={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut={},text_alignment=b.ALIGN_CENTER,text=am,pos=A.Vector2.new(B,C),size=A.Vector2.new(Y,Z),timed={enabled=false,clock=aP.Clock.new(0.5)},colors={foreground=a7,active_background=aW,unactive_background=aX},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}aY.timed.clock.binded_button=aY;aY.timed.clock.oneshot=true;aY.timed.clock:stop()e.set_callback(aY.timed.clock,b.ONCLOCK,function(self,aH)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,aH)self.binded_button.callbacks.onTimeout(self.binded_button,aH)end)setmetatable(aY,aP.Button)return aY end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then ac:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else ac:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local aT=j.split(self.text,"\n")local aZ=math.floor((self.size.y-#aT)/2)+self.pos.y;for ao=0,#aT-1 do local aU=aT[ao+1]local a_;if self.text_alignment==b.ALIGN_LEFT then a_=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then a_=math.floor((self.size.x-#aU)/2)+self.pos.x end;ac:write(a_,aZ+ao,aU,self.colors.foreground)end end,event=function(self,aH)if self.hidden then return false end;if aH.name==b.TOUCH then if V.is_area_pressed(aH.x,aH.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(aH)return true else self.callbacks.onFailedPress(self,aH)end elseif aF:are_keys_pressed(table.unpack(self.shortcut))then self:press(aH)end;if self.timed.enabled then self.timed.clock:event(aH)end end,press=function(self,aH)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,aH)end else self.active=not self.active;self.callbacks.onPress(self,aH)end end},Progressbar={new=function(B,C,Y,Z,b0,M,N,a7,b1,b2)local b3={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=A.Vector2.new(B,C),size=A.Vector2.new(Y,Z),value={max=N,min=M,current=b0,draw_percentage=true},colors={foreground=a7,filled_background=b1,unfilled_background=b2},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(b3,aP.Progressbar)return b3 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local b4=A.map(self.value.current,self.value.min,self.value.max,0,1,true)local b5=math.floor(self.size.x*b4)ac:rectangle(self.pos.x,self.pos.y,b5,self.size.y,self.colors.filled_background)ac:rectangle(self.pos.x+b5,self.pos.y,self.size.x-b5,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local b6=tostring(b4*100).."%"local b7=math.floor((self.size.x-#b6)/2)+self.pos.x;local aZ=math.floor((self.size.y-1)/2)+self.pos.y;ac:write(b7,aZ,b6,self.colors.foreground)end end,event=function(self,aH)if self.hidden then return false end;if aH.name==b.TOUCH then if V.is_area_pressed(aH.x,aH.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,aH)end end end,set=function(self,n)local b8=A.constrain(n,self.value.min,self.value.max)self.value.current=b8 end},Memo={new=function(B,C,Y,Z,a7,a8)local b9={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=A.Vector2.new(B,C),size=A.Vector2.new(Y,Z),editable=true,lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=aP.Clock.new(0.5),pos=A.Vector2.new(1,1)},limits=A.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=a7,background=a8,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end}}b9.cursor.blink.binded_cursor=b9.cursor;e.set_callback(b9.cursor.blink,b.ONCLOCK,function(self,aH)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(b9,aP.Memo)return b9 end,draw=function(self)if self.hidden then return end;ac:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local ba=self.cursor.pos.x-self.first_visible_char;local bb=self.cursor.pos.y-self.first_visible_line;if ba>=self.size.x then self.first_visible_char=self.first_visible_char+ba-self.size.x+1;ba=self.cursor.pos.x-self.first_visible_char-1 elseif ba<1 then self.first_visible_char=self.first_visible_char+ba;ba=0 end;if bb>=self.size.y then self.first_visible_line=self.first_visible_line+bb-self.size.y+1;bb=self.cursor.pos.y-self.first_visible_line-1 elseif bb<1 then self.first_visible_line=self.first_visible_line+bb;bb=0 end;for C=1,self.size.y do local aU=self.lines[C+self.first_visible_line-1]or""local bc=aU:sub(self.first_visible_char,self.first_visible_char+self.size.x-1)ac:write(self.pos.x,self.pos.y+C-1,bc,self.colors.foreground)end;if self.cursor.visible then ac:write(ba+self.pos.x,bb+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,aH)if self.hidden then return false end;if not self.editable then return false end;if aH.name==b.TOUCH then if V.is_area_pressed(aH.x,aH.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then local B=aH.x-self.pos.x;local C=aH.y-self.pos.y;self:set_cursor(B+self.first_visible_char,C+self.first_visible_line)self:focus(true,aH)self.callbacks.onPress(self,aH)return true else self:focus(false,aH)self.callbacks.onFailedPress(self,aH)return false end elseif aH.name==b.DELETED then self:focus(false,aH)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,aH)if aH.name==b.PASTE then self:write(aH.paste)elseif aH.name==b.CHAR then if self.callbacks.onChar(self,aH)then return true end;self:write(aH.char)elseif aH.name==b.KEY then if self.callbacks.onKey(self,aH)then return true end;if aH.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)elseif aH.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)elseif aH.key==b.KEY_RIGHT then local aU=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#aU+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end elseif aH.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local bd=self.lines[self.cursor.pos.y-1]self:set_cursor(#bd+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif aH.key==b.KEY_BACKSPACE then local aU=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local be=#self.lines[self.cursor.pos.y-1]+1;local bf=self.cursor.pos.y-1;self:set_cursor(be,bf)self:write(aU)self:set_cursor(be,bf)else self.lines[self.cursor.pos.y]=aU:sub(1,self.cursor.pos.x-2)..aU:sub(self.cursor.pos.x)self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif aH.key==b.KEY_DELETE then local aU=self.lines[self.cursor.pos.y]local bg=aU:sub(self.cursor.pos.x)if#bg>0 then self.lines[self.cursor.pos.y]=aU:sub(1,self.cursor.pos.x-1)..aU:sub(self.cursor.pos.x+1)else local bh=self.lines[self.cursor.pos.y+1]if bh then local be=self.cursor.pos.x;local bf=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(bh)self:set_cursor(be,bf)end end elseif aH.key==b.KEY_ENTER then self:write("\n")elseif aH.key==b.KEY_TAB then self:write("  ")end elseif aH.name==b.MOUSESCROLL then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+aH.direction)end;return true end end,focus=function(self,bi,aH)if bi then self.focussed=true;self.callbacks.onFocus(self,aH)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,aH)end end,set_cursor=function(self,be,bf,bj)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then bf=A.constrain(bf,1,self.limits.y)end;if bj then for C=#self.lines+1,bf do if not self.lines[C]then self.lines[C]=""end end else bf=A.constrain(bf,1,#self.lines)end;be=A.constrain(be,1,#self.lines[bf]+1)self.cursor.pos=A.Vector2.new(be,bf)end,write=function(self,...)local am=j.join({...},"")local aT=j.split(am,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local bk="[^"..j.escape_magic_characters(j.join(self.whitelist,"")).."]"for d,aU in pairs(aT)do aT[d]=aU:gsub(bk,"")end elseif#self.blacklist>0 then local bk="["..j.escape_magic_characters(j.join(self.blacklist,"")).."]"for d,aU in pairs(aT)do aT[d]=aU:gsub(bk,"")end end;if self.limits.y>0 then for C=1,#self.lines+#aT-1-self.limits.y do table.remove(aT)end;if#aT==0 then return end end;if#aT>1 then for bl,aU in pairs(aT)do if bl==1 then local bm=self.lines[self.cursor.pos.y]local bn=bm:sub(1,self.cursor.pos.x-1)local bg=bm:sub(self.cursor.pos.x)local bo=aT[#aT]if self.limits.x>0 then aU=aU:sub(1,self.limits.x-#bn)bo=bo:sub(1,self.limits.x-#bg)end;self.lines[self.cursor.pos.y]=bn..aU;self:set_cursor(1,self.cursor.pos.y+1,true)table.insert(self.lines,self.cursor.pos.y,bo..bg)self:set_cursor(#bo+1,self.cursor.pos.y)elseif bl==#aT then break else if self.limits.x>0 then aU=aU:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,aU)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local bm=self.lines[self.cursor.pos.y]local bn=bm:sub(1,self.cursor.pos.x-1)local bg=bm:sub(self.cursor.pos.x)if self.limits.x>0 then aT[1]=aT[1]:sub(1,self.limits.x-(#bn+#bg))end;self.lines[self.cursor.pos.y]=bn..aT[1]..bg;self:set_cursor(self.cursor.pos.x+#aT[1],self.cursor.pos.y)end end,print=function(self,...)local am=j.join({...},"\n").."\n"self:write(am)end,clear=function(self)self.lines={""}self:set_cursor(1,1)end},Window={new=function(B,C,Y,Z,a8,bp)local bq={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=A.Vector2.new(B,C),size=A.Vector2.new(Y,Z),drag_options={enabled=true,from=A.Vector2.new(1,1)},shadow={enabled=bp,offset=A.Vector2.new(1,1)},elements={},colors={background=a8,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end}}setmetatable(bq,aP.Window)return bq end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then ac:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;ac:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,aH)if self.hidden then return false end;local br=self:event_elements(aH)if not br then if aH.name==b.TOUCH then if V.is_area_pressed(aH.x,aH.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=A.Vector2.new(aH.x,aH.y)self.focussed=true;self.callbacks.onPress(self,aH)self.callbacks.onFocus(self,aH)return true else self.focussed=false;self.callbacks.onFailedPress(self,aH)self.callbacks.onFocus(self,aH)end elseif aH.name==b.MOUSEDRAG and self.focussed then self:drag(aH.x,aH.y)return true elseif aH.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,aH)end else self.focussed=false;self.callbacks.onFocus(self,aH)end;return br end,drag=function(self,B,C)if self.drag_options.enabled then local bs=A.Vector2.new(B-self.drag_options.from.x,C-self.drag_options.from.y)self.pos=self.pos+bs;for d,bt in pairs(self.elements)do if bt.pos then bt.pos=bt.pos+bs end end;self.drag_options.from=A.Vector2.new(B,C)end end,set_elements=function(self,bu,bv)self.elements={}for d,bt in pairs(bu)do if bv then bt.pos=self.pos+bt.pos-A.Vector2.ONE end;table.insert(self.elements,bt)end end,draw_elements=function(self)for d=#self.elements,1,-1 do local bt=self.elements[d]if bt.draw then bt:draw()end end end,event_elements=function(self,aH)local br=false;for d,bt in pairs(self.elements)do if bt.event then local bw=bt:event(aH)br=br or bw;if bw then aH={name=b.DELETED}end end end;return br end}}aP.Clock.__index=aP.Clock;aP.Label.__index=aP.Label;aP.Button.__index=aP.Button;aP.Progressbar.__index=aP.Progressbar;aP.Memo.__index=aP.Memo;aP.Window.__index=aP.Window;local bx={}bx={new=function(by,bz)local bA={options={enabled=false,FPS_target=by,EPS_target=bz},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=aP.Clock.new(1/by),stats_clock=aP.Clock.new(1),FPS_label=aP.Label.new(1,1,"1 FPS",colors.white),EPS_label=aP.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=A.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,bB)self.enabled=bB;self.elements.stats_clock.enabled=bB;self.elements.FPS_label.hidden=not bB;self.elements.EPS_label.hidden=not bB end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+A.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}bA.elements.loop.stats_clock.stats=bA.stats;bA.stats.elements=bA.elements.loop;e.set_callback(bA.elements.loop.stats_clock,b.ONCLOCK,function(self,aH)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)bA.stats:enable(false)setmetatable(bA,bx)return bA end,set_monitors=function(self,a3)self.monitors=a2.get_monitors(a3)end,set_elements=function(self,bu)self.elements.high_priority={}self.elements.low_priority={}for d,n in pairs(bu)do if n.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,n)else table.insert(self.elements.low_priority,n)end end end,draw_elements=function(self)local function bC(k)for d=#k,1,-1 do local bt=k[d]if bt.draw then bt:draw()end end end;self.callbacks.onDraw(self)local bD=ac.screens;ac.screens=self.monitors;bC(self.elements.low_priority)bC(self.elements.high_priority)for d,bt in pairs(self.elements.loop)do if bt.draw then bt:draw()end end;ac:draw()ac.screens=bD;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,aH)local function _(k)for d,bt in pairs(k)do if bt.event then if bt:event(aH)then aH={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,aH)then aH={name=b.DELETED}end;if aH.name==b.TOUCH then local bE=false;for bF,a6 in pairs(self.monitors)do if aH.from==bF then bE=true;break end end;if not bE then aH={name=b.DELETED}end end;_(self.elements.loop)local bG={}for d,bt in pairs(self.elements.high_priority)do if bt.event then local bH=bt:event(aH)if bH then aH={name=b.DELETED}if self.elements.high_priority~=bt then table.insert(bG,{element=bt,key=d})end end end end;if#bG>0 then for d,n in pairs(bG)do table.insert(self.elements.high_priority,1,n.element)table.remove(self.elements.high_priority,n.key+#bG)end end;_(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;aF:reset()e.set_callback(self.elements.loop.clock,b.ONCLOCK,function(bI,aH)self.callbacks.onClock(self,aH)self:draw_elements()bI.interval=1/self.options.FPS_target end)self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local bJ=os.startTimer(1/self.options.EPS_target)local bK={os.pullEvent()}local aH=V.format_event_table(bK)aF:manage_event(aH)self:event_elements(aH)os.cancelTimer(bJ)end;aF:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}bx.__index=bx;local bL={...}if bL[1]=="help"then local aT={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,aU in pairs(aT)do a2.better_print(term,aU.foreground,aU.background,aU.text)end elseif bL[1]=="info"then a2.better_print(term,colors.red,nil,"Library Version: ",a.ver)a2.better_print(term,colors.yellow,nil,"Library Author: ",a.author)a2.better_print(term,colors.green,nil,"Library Website: ",a.website)elseif bL[1]=="ver"then a2.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif bL[1]=="copyright"then local bM={colors.red,colors.yellow,colors.green}local bN=j.split(a.copyright,"\n\n")for d,bO in pairs(bN)do a2.better_print(term,bM[d],nil,bO)if d<#bN then read("")end end elseif bL[1]=="setup"then if shell then local bP="YAGUI_PATH"local x="/"..shell.getRunningProgram()a0:set(bP,x)a2.better_print(term,colors.green,nil,"Lib path was set to \"",a0.get(bP),"\".")else a2.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif bL[1]=="create"then if bL[2]then local x=shell.resolve(bL[2])local a1=fs.getName(x):lower()if j.get_extension(x)~="lua"then x=x..".lua"end;if fs.exists(x)then a2.better_print(term,colors.red,nil,"PATH: \"/",x,"\" already exists, please use another path or delete it.")else local bQ=fs.open(x,"w")bQ.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")bQ.close()a2.better_print(term,colors.green,nil,"New project was created at \"/",x,"\".")end else a2.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif bL[1]then a2.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",bL[1],"\"")a2.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local bR={info=a,generic_utils=e,string_utils=j,math_utils=A,table_utils=O,color_utils=R,event_utils=V,setting_utils=a0,monitor_utils=a2,screen_buffer=ac,input=aF,WSS=aI,wireless_screen_share=aI,gui_elements=aP,Loop=bx}for d,n in pairs(b)do bR[d]=n end;return bR