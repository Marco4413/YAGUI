--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.41",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",nfp="1.0.0",nft="1.0.0"}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSEMOVE="mouse_move",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",TERMRESIZE="term_resize",COROUTINE="coroutine",DELETED="DELETED",NONE="NONE",ALL="ALL",SEND="SEND",RECEIVE="RECEIVE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,ONSEND=17,ONRECEIVE=18,ONDRAG=19,ONRESIZE=20,ONPASTE=21,ONHOVER=22,ONRELEASE=23,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2,ALIGN_RIGHT=3}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={TOP=string.char(131),BOTTOM=string.char(143),LEFT=string.char(149),RIGHT=string.char(149),MIDDLE=string.char(140),TOPLEFT=string.char(151),TOPRIGHT=string.char(148),BOTTOMLEFT=string.char(138),BOTTOMRIGHT=string.char(133),MIDDLELEFT=string.char(132),MIDDLERIGHT=string.char(136)}local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)n:set_callback(o,p)end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=type(r)=="string"and table.concat({" to '",r,"'"})or""local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=g.split(x,t)local F=table.remove(E,#E)local G=#E==0 and F or table.concat({table.concat(E,", ")," or ",F})v=string.format("bad argument #%d%s (%s expected, got %s)",(w+1)/2,r,G,z)u=true;break end end;if u then error(v,3)return false end;return true end,get_type=function(H)local I=type(H)return I=="table"and type(H._type)=="string"and H._type or I end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=table.concat,split=function(J,K)if not string.find(J,K)then return{J}end;local L={}local M=table.concat({"(.-)",K,"()"})local N;for O,P in string.gfind(J,M)do table.insert(L,O)N=P end;table.insert(L,string.sub(J,N))return L end,split_by_char=function(J,Q)local R={}local S=1;for w=1,#J do if J:sub(w,w)==Q then table.insert(R,w==S and""or J:sub(S,w-1))S=w+1 end end;table.insert(R,J:sub(S,#J))return R end,compare_versions=function(T,U)local V=g.split(T,".")local W=g.split(U,".")local X=#V;local Y=#W;for w=1,math.min(X,Y)do if tonumber(V[w])>tonumber(W[w])then return 1 elseif tonumber(V[w])<tonumber(W[w])then return-1 end end;if X>Y then return 1 elseif X<Y then return-1 end;return 0 end,escape_magic_characters=function(J)for d,Z in next,g.magic_characters do J=J:gsub(table.concat({"[%",Z,"]"}),table.concat({"%%%",Z}))end;return J end,get_extension=function(_)return _:match("^.+%.(.+)$")or""end,format_number=function(a0,a1)a0=tostring(a0)a1=a1 or 0;local a2=a0:gsub("(.*)%..*","%1")if a1<=0 then return a2 end;local a3=#a2+1;local a4=a0:sub(a3+1,a3+a1)a4=a4:reverse():gsub("0*(.*)","%1"):reverse()if#a4>0 then return table.concat({a2,".",a4})end;return a2 end,trim=function(J)return J:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a5,a6)local a7={x=a5 or 0,y=a6 or 0}setmetatable(a7,h.Vector2)return a7 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return self.x*self.x+self.y*self.y end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y)end,unit=function(self)return self/self:length()end,dot=function(self,a8)return self.x*a8.x+self.y*a8.y end,cross=function(self,a8)return self.x*a8.y-self.y*a8.x end,rotate=function(self,a9)local aa=math.cos(a9)local ab=math.sin(a9)return h.Vector2.new(aa*self.x-ab*self.y,ab*self.x+aa*self.y)end,string=function(self,a1)if a1 then return string.format(table.concat({"(%.",a1,"f; %.",a1,"f)"}),self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a8)return h.Vector2.new(self.x+a8.x,self.y+a8.y)end,__sub=function(self,a8)return h.Vector2.new(self.x-a8.x,self.y-a8.y)end,__mul=function(self,a0)if type(self)=="number"then return h.Vector2.new(a0.x*self,a0.y*self)else return h.Vector2.new(self.x*a0,self.y*a0)end end,__div=function(self,a0)return h.Vector2.new(self.x/a0,self.y/a0)end,__eq=function(self,a8)return self.x==a8.x and self.y==a8.y end,__lt=function(self,a8)return self:length_sq()<a8:length_sq()end,__le=function(self,a8)return self:length_sq()<=a8:length_sq()end},Vector3={new=function(a5,a6,ac)local ad={x=a5 or 0,y=a6 or 0,z=ac or 0}setmetatable(ad,h.Vector3)return ad end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return self.x*self.x+self.y*self.y+self.z*self.z end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y+self.z*self.z)end,unit=function(self)return self/self:length()end,dot=function(self,a8)return self.x*a8.x+self.y*a8.y+self.z*a8.z end,cross=function(self,a8)return h.Vector3.new(self.y*a8.z-self.z*a8.y,self.z*a8.x-self.x*a8.z,self.x*a8.y-self.y*a8.x)end,rotate=function(self,ae,a9)local aa=math.cos(a9)return aa*self+math.sin(a9)*ae:cross(self)+(1-aa)*ae:dot(self)*ae end,string=function(self,a1)if a1 then return string.format(table.concat({"(%.",a1,"f; %.",a1,"f; %.",a1,"f)"}),self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a8)return h.Vector3.new(self.x+a8.x,self.y+a8.y,self.z+a8.z)end,__sub=function(self,a8)return h.Vector3.new(self.x-a8.x,self.y-a8.y,self.z-a8.z)end,__mul=function(self,a0)if type(self)=="number"then return h.Vector3.new(a0.x*self,a0.y*self,a0.z*self)else return h.Vector3.new(self.x*a0,self.y*a0,self.z*a0)end end,__div=function(self,a0)return h.Vector3.new(self.x/a0,self.y/a0,self.z/a0)end,__eq=function(self,a8)return self.x==a8.x and self.y==a8.y and self.z==a8.z end,__lt=function(self,a8)return self:length_sq()<a8:length_sq()end,__le=function(self,a8)return self:length_sq()<=a8:length_sq()end},map=function(H,af,ag,ah,ai,aj)local ak=(H-af)/(ag-af)*(ai-ah)+ah;if aj then return h.constrain(ak,ah,ai)end;return ak end,constrain=function(H,al,am)return math.min(am,math.max(al,H))end,round=function(a0)return math.floor(a0+0.5)end,round_numbers=function(...)local an={...}local ao={}for d,a0 in next,an do table.insert(ao,h.round(a0))end;return table.unpack(ao)end,floor_numbers=function(...)local an={...}local ap={}for d,a0 in next,an do table.insert(ap,math.floor(a0))end;return table.unpack(ap)end,ceil_numbers=function(...)local an={...}local aq={}for d,a0 in next,an do table.insert(aq,math.ceil(a0))end;return table.unpack(aq)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(ar,H)for as,at in next,ar do if at==H then return true,as end end;return false,nil end,has_key=function(ar,d)if ar[d]~=nil then return true,ar[d]end;return false,nil end,serialise=function(ar,au,av,aw,ax,ay,az,aA,aB)local au=au or 0;local az=az or"  "local aC=0;local aA=aA or"\n"local aB=aB or" "if not av then az,aA,aB="","",""end;local aD="root"local aE={[ar]=aD}local function aF(ar,_)local aG=az:rep(aC+1)local aH=table.concat({"{",aA})local function aI(ar)local aJ=#ar;local aK=0;for d,H in next,ar do local aL=type(d)local aM;if aL=="number"or aL=="boolean"or aL=="nil"then aM=tostring(d)else aM=string.format("%q",tostring(d))end;if not ay and d=="__index"then H={}end;local I=type(H)if aL=="number"and d<=aJ and d==aK+1 then aK=d;aH=table.concat({aH,aG})else aH=table.concat({aH,string.format("%s[%s]%s=%s",aG,aM,aB,aB)})end;if I=="table"then if not next(H)then aH=table.concat({aH,"{}"})elseif au<=-1 or aC<au then if aE[H]and not aw then aH=table.concat({aH,string.format("%q",aE[H])})else local aN=table.concat({_,"[",aM,"]"})aE[H]=aN;aC=aC+1;aH=table.concat({aH,aF(H,aN)})aC=aC-1 end else aH=table.concat({aH,"{}"})end elseif I=="number"or I=="boolean"or I=="nil"then aH=table.concat({aH,string.format("%s",tostring(H))})else aH=table.concat({aH,string.format("%q",tostring(H))})end;if next(ar,d)then aH=table.concat({aH,",",aA})else aH=table.concat({aH,aA})end end end;local aO=getmetatable(ar)if ax and aO then aI(aO)if next(ar)then aH=table.concat({aH:sub(1,#aH-#aA),",",aH:sub(#aH-#aA+1)})end end;aI(ar)aH=table.concat({aH,az:rep(aC),"}"})return aH end;return aF(ar,aD)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize,get=function(ar,...)local _={...}local aP=ar;for w=1,#_ do aP=aP[_[w]]end;return aP end,set=function(H,ar,...)local _={...}local aQ=table.remove(_)local aR=i.get(ar,table.unpack(_))local aS=aR[aQ]aR[aQ]=H;return aS end,better_remove=function(ar,...)local aT={...}local aU=#aT;for w=1,#aT do ar[aT[w]]=nil end;local aV,aW=1,{}for w=1,#ar+aU do if ar[w]==nil then aW[#aW+1]=w elseif#aW>0 then ar[aW[aV]],aW[#aW+1],ar[w]=ar[w],w;aV=aV+1 end end end}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aX)return j.colors[aX]end,paint_to_color=function(aY)return j.paint[aY]end}for d,H in next,j.colors do j.paint[H]=d end;k={in_area=function(aZ,a_,a5,a6,b0,b1)if aZ>=a5 and aZ<a5+b0 then if a_>=a6 and a_<a6+b1 then return true end end;return false end,format_event=function(b2)local o={}o.name=b2[1]if o.name=="timer"then o.name=b.TIMER;o.id=o[2]elseif o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=b2[2]o.x=b2[3]o.y=b2[4]elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=b2[2]o.button=1;o.x=b2[3]o.y=b2[4]elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=b2[2]o.x=b2[3]o.y=b2[4]elseif o.name=="mouse_move"then o.name=b.MOUSEMOVE;o.button=b2[2]o.x=b2[3]o.y=b2[4]elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=b2[2]o.x=b2[3]o.y=b2[4]elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=b2[2]o.x=b2[3]o.y=b2[4]elseif o.name=="char"then o.name=b.CHAR;o.char=b2[2]elseif o.name=="key"then o.name=b.KEY;o.key=b2[2]elseif o.name=="key_up"then o.name=b.KEYUP;o.key=b2[2]elseif o.name=="paste"then o.name=b.PASTE;o.paste=b2[2]elseif o.name=="rednet_message"then o.name=b.REDNET;o.from=b2[2]o.message=b2[3]local b3=b2[4]if type(b3)=="number"then o.distance=b3 else o.protocol=tostring(b3)end elseif o.name=="modem_message"then local b4=b2[5]o.name=b.MODEM;o.side=b2[2]o.from=b2[4]o.protocol=b4.sProtocol or""o.message=b4.message elseif o.name=="terminate"then o.name=b.TERMINATE elseif o.name=="term_resize"then o.name=b.TERMRESIZE elseif o.name=="coroutine"then o.name=b.COROUTINE;o.thread=b2[2]o.status=b2[3]o.ok=b2[4]local w=5;if not o.ok then o.error=b2[5]w=w+1 end;o.returned={}for w=w,#b2 do o.returned[#o.returned+1]=b2[w]end else o.parameters={}for d=2,#b2 do table.insert(o.parameters,b2[d])end end;o.raw=b2;return o end,delete_event=function(formatted_event)if formatted_event.name~=b.DELETED then return{name=b.DELETED,deleted=formatted_event}end;return formatted_event end}l={_path="/.settings",set=function(b5,H)settings.set(b5,H)settings.save(l._path)end,unset=function(b5)settings.unset(b5)settings.save(l._path)end,get=function(b5)return settings.get(b5)end}m={get_monitors=function(b6)local b7={}for d,b8 in next,b6 do if b8=="terminal"then b7[b8]=term else if peripheral.getType(b8)=="monitor"then b7[b8]=peripheral.wrap(b8)end end end;return b7 end,better_print=function(b9,ba,bb,...)local bc=table.concat({...})local bd=b9.getTextColor()local be=b9.getBackgroundColor()if ba then b9.setTextColor(ba)end;if bb then b9.setBackgroundColor(bb)end;print(bc)b9.setTextColor(bd)b9.setBackgroundColor(be)end,better_clear=function(b9)b9.clear()b9.setCursorPos(1,1)end}local bf={lineLow=function(bg,bh,bi,bj,bk,aX)local bl=1;if bh>bj then bl=-1 end;local bm=bj-bh;local bn=bk-bi;local bo=1;if bn<0 then bo=-1;bn=-bn end;local bp=2*bn-bm;local a6=bi;for a5=bh,bj,bl do bg.buffer:set_pixel(a5,a6," ",aX,aX)if bp>0 then a6=a6+bo;bp=bp-2*bm end;bp=bp+2*bn end end,lineHigh=function(bg,bh,bi,bj,bk,aX)local bl=1;if bi>bk then bl=-1 end;local bm=bj-bh;local bn=bk-bi;local bq=1;if bm<0 then bq=-1;bm=-bm end;local bp=2*bm-bn;local a5=bh;for a6=bi,bk,bl do bg.buffer:set_pixel(a5,a6," ",aX,aX)if bp>0 then a5=a5+bq;bp=bp-2*bn end;bp=bp+2*bm end end,get_rect_char=function(a5,a6,br,bs)if bs==1 then if br==1 then return e.MIDDLE,true else if a5==1 then return e.MIDDLERIGHT,true elseif a5==br then return e.MIDDLELEFT,true else return e.MIDDLE,true end end elseif a6==1 then if a5==1 then return e.TOPLEFT,false elseif a5==br then return e.TOPRIGHT,true else return e.TOP,false end elseif a6==bs then if a5==1 then return e.BOTTOMLEFT,true elseif a5==br then return e.BOTTOMRIGHT,true else return e.BOTTOM,true end elseif a5==1 then return e.LEFT,false elseif a5==br then return e.RIGHT,true else return" ",false end end,buffer={is_pixel_custom=function(self,a5,a6)return self.pixels[a6]and self.pixels[a6][a5]and true or false end,get_pixel=function(self,a5,a6)return self.pixels[a6]and self.pixels[a6][a5]or{char=self.background.char,foreground=self.background.foreground,background=self.background.background,inverted=self.background.inverted}end,set_pixel=function(self,a5,a6,Q,ba,bb,bt)a5,a6=math.floor(a5),math.floor(a6)local bu=self:get_pixel(a5,a6)if Q then bu.char=Q:sub(1,1)end;if bt then bu.foreground,bu.background=bb or bu.foreground,ba or bu.background else if bu.inverted then bu.foreground,bu.background=ba or bu.background,bb or bu.foreground else bu.foreground,bu.background=ba or bu.foreground,bb or bu.background end end;bu.inverted=bt;if not self.pixels[a6]then self.pixels[a6]={}end;self.pixels[a6][a5]=bu end,remove_pixel=function(self,a5,a6)if self.pixels[a6]then self.pixels[a6][a5]=nil end end,clear=function(self)self.pixels={}end}}local bv={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background={char=" ",foreground=colors.black,background=colors.black,inverted=false}},set_screens=function(self,bw)self.screens=m.get_monitors(bw)end,set_monitors=function(self,b6)self:set_screens(b6)end,clear=function(self)self.buffer:clear()end,draw=function(self)local bx={}for by,bz in next,self.screens do local bA,bB=bz.getCursorPos()local b0,b1=bz.getSize()for a6=1,b1 do local bC,bD,bE={},{},{}for a5=bx[a6]and#bx[a6].text+1 or 1,b0 do local bu=self.buffer:get_pixel(a5,a6)bC[#bC+1]=bu.char;bD[#bD+1]=j.colors[bu.foreground]bE[#bE+1]=j.colors[bu.background]end;bx[a6]={text=table.concat({bx[a6]and bx[a6].text or"",table.concat(bC)}),fg=table.concat({bx[a6]and bx[a6].fg or"",table.concat(bD)}),bg=table.concat({bx[a6]and bx[a6].bg or"",table.concat(bE)})}bz.setCursorPos(1,a6)bz.blit(bx[a6].text:sub(0,b0),bx[a6].fg:sub(0,b0),bx[a6].bg:sub(0,b0))end;bz.setCursorPos(bA,bB)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a5,a6,aX)if not aX then return end;self.buffer:set_pixel(a5,a6," ",aX,aX)end,write=function(self,a5,a6,bF,ba,bb)for bG=0,#bF-1 do local Q=bF:sub(bG+1,bG+1)self.buffer:set_pixel(a5+bG,a6,Q,ba,bb)end end,blit=function(self,a5,a6,bF,ba,bb)local bH=""local bI=""ba=ba or""bb=bb or""for bG=0,#bF-1 do local Q=bF:sub(bG+1,bG+1)local bJ=ba:sub(bG+1,bG+1)bJ=#bJ>0 and bJ or bH;local bK=bb:sub(bG+1,bG+1)bK=#bK>0 and bK or bI;self.buffer:set_pixel(a5+bG,a6,Q,j.paint[bJ],j.paint[bK])bH=bJ;bI=bK end end,rectangle=function(self,a5,a6,b0,b1,aX,bL,bM,bN)if not aX then if bL and bM then bN=true else return end end;if bN then for bO=1,b0 do if bL then local Q,bt=bf.get_rect_char(bO,1,b0,b1)self.buffer:set_pixel(a5+bO-1,a6,Q,bM,aX,bt)Q,bt=bf.get_rect_char(bO,b1,b0,b1)self.buffer:set_pixel(a5+bO-1,a6+b1-1,Q,bM,aX,bt)else self.buffer:set_pixel(a5+bO-1,a6," ",aX,aX)self.buffer:set_pixel(a5+bO-1,a6+b1-1," ",aX,aX)end end;for bP=2,b1-1 do if bL then local Q,bt=bf.get_rect_char(1,bP,b0,b1)self.buffer:set_pixel(a5,a6+bP-1,Q,bM,aX,bt)Q,bt=bf.get_rect_char(b0,bP,b0,b1)self.buffer:set_pixel(a5+b0-1,a6+bP-1,Q,bM,aX,bt)else self.buffer:set_pixel(a5,a6+bP-1," ",aX,aX)self.buffer:set_pixel(a5+b0-1,a6+bP-1," ",aX,aX)end end else for bO=1,b0 do for bP=1,b1 do if bL then local Q,bt=bf.get_rect_char(bO,bP,b0,b1)self.buffer:set_pixel(a5+bO-1,a6+bP-1,Q,bM,aX,bt)else self.buffer:set_pixel(a5+bO-1,a6+bP-1," ",aX,aX)end end end end end,nfp_image=function(self,a5,a6,bQ,bR,bS,bT,bU)bR,bS=bR or 1,bS or 1;local bG,bV=1,1;for w=1,#bQ do if bU and bV>=bU+bS then break end;local Q=bQ:sub(w,w)if Q=="\n"then bG,bV=1,bV+1 else if bV>=bS and bG>=bR and(not bT or bG<bT+bR)then local aX=j.paint[Q]if aX then self.buffer:set_pixel(a5+bG-bR,a6+bV-bS," ",aX,aX)end end;bG=bG+1 end end end,nft_image=function(self,a5,a6,bQ,bR,bS,bT,bU)bR,bS=bR or 1,bS or 1;local bG,bV,bW,bX,bY,bZ=1,1;for w=1,#bQ do if bU and bV>=bU+bS then break end;local Q=bQ:sub(w,w)if bW then bY=j.paint[Q]bW=false elseif bX then bZ=j.paint[Q]bX=false elseif Q=="\30"then bW=true elseif Q=="\31"then bX=true elseif Q=="\n"then bG,bV,bW,bX,bY,bZ=1,bV+1 else if bV>=bS and bG>=bR and(not bT or bG<bT+bR)then self.buffer:set_pixel(a5+bG-bR,a6+bV-bS,Q,bZ,bY)end;bG=bG+1 end end end,frame_to_nfp=function(self,b_,a5,a6,b0,b1)local c0={}local c1,c2,c3,c4=1,1,1,1;if not(a5 and a6 and b0 and b1)then for a6 in next,self.frame.pixels do c2=math.min(c2,a6)c4=math.max(c4,a6)for a5 in next,self.frame.pixels[a6]do c1=math.min(c1,a5)c3=math.max(c3,a5)end end end;a5,a6=a5 or c1,a6 or c2;for a6=a6,b1 and a6+b1-1 or c4 do local c5={}local w,c6=1,0;for a5=a5,b0 and a5+b0-1 or c3 do local bu=b_ and not self.frame:is_pixel_custom(a5,a6)and{}or self.frame:get_pixel(a5,a6)local aX=j.colors[bu.background]or" "c5[#c5+1]=aX;if aX~=" "then c6=w end;w=w+1 end;c0[#c0+1]=table.concat(c5):sub(0,c6)end;return table.concat(c0,"\n")end,frame_to_nft=function(self,a5,a6,b0,b1)local c0={}for bV=1,b1 do local c5={}local bI,bH;for bG=1,b0 do local bu=self.frame:get_pixel(a5+bG-1,a6+bV-1)if bu.background~=bI then c5[#c5+1]="\30"c5[#c5+1]=j.colors[bu.background]bI=bu.background end;if bu.foreground~=bH then c5[#c5+1]="\31"c5[#c5+1]=j.colors[bu.foreground]bH=bu.foreground end;c5[#c5+1]=bu.char=="\30"and"\24"or bu.char=="\31"and"\25"or bu.char end;c0[#c0+1]=table.concat(c5)end;return table.concat(c0,"\n")end,line=function(self,bh,bi,bj,bk,aX)if not aX then return end;if math.abs(bk-bi)<math.abs(bj-bh)then if bh>bj then bf.lineLow(self,bj,bk,bh,bi,aX)else bf.lineLow(self,bh,bi,bj,bk,aX)end else if bi>bk then bf.lineHigh(self,bj,bk,bh,bi,aX)else bf.lineHigh(self,bh,bi,bj,bk,aX)end end end,circle=function(self,c7,c8,c9,aX,bN)if not aX then return end;local ca=c9*c9;if bN then self.buffer:set_pixel(c7,c8+c9," ",aX,aX)self.buffer:set_pixel(c7,c8-c9," ",aX,aX)self.buffer:set_pixel(c7+c9,c8," ",aX,aX)self.buffer:set_pixel(c7-c9,c8," ",aX,aX)else self:line(c7,c8+c9,c7,c8-c9,aX)self:line(c7+c9,c8,c7-c9,c8,aX)end;local a5=1;local a6=math.floor(math.sqrt(ca-1)+0.5)while a5<a6 do if bN then self.buffer:set_pixel(c7+a5,c8+a6," ",aX,aX)self.buffer:set_pixel(c7+a5,c8-a6," ",aX,aX)self.buffer:set_pixel(c7-a5,c8+a6," ",aX,aX)self.buffer:set_pixel(c7-a5,c8-a6," ",aX,aX)self.buffer:set_pixel(c7+a6,c8+a5," ",aX,aX)self.buffer:set_pixel(c7+a6,c8-a5," ",aX,aX)self.buffer:set_pixel(c7-a6,c8+a5," ",aX,aX)self.buffer:set_pixel(c7-a6,c8-a5," ",aX,aX)else self:line(c7+a5,c8+a6,c7+a5,c8-a6,aX)self:line(c7-a5,c8+a6,c7-a5,c8-a6,aX)self:line(c7+a6,c8+a5,c7+a6,c8-a5,aX)self:line(c7-a6,c8+a5,c7-a6,c8-a5,aX)end;a5=a5+1;a6=math.floor(math.sqrt(ca-a5*a5)+0.5)end;if a5==a6 then if bN then self.buffer:set_pixel(c7+a5,c8+a6," ",aX,aX)self.buffer:set_pixel(c7+a5,c8-a6," ",aX,aX)self.buffer:set_pixel(c7-a5,c8+a6," ",aX,aX)self.buffer:set_pixel(c7-a5,c8-a6," ",aX,aX)else self:line(c7+a5,c8+a6,c7+a5,c8-a6,aX)self:line(c7-a5,c8+a6,c7-a5,c8-a6,aX)end end end}bv.buffer.__index=bf.buffer;setmetatable(bv.buffer,bv.buffer)setmetatable(bv.frame,bv.buffer)local cb={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,cc,d)if self.pressed_keys[d]then if cc then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,cd,...)local keys={...}if not(#keys>0)then return false end;for ce,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if cd then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for ce,d in next,keys do self:remove_key(d)end end,manage_event=function(self,formatted_event)if formatted_event.name==b.KEY then self:add_key(formatted_event.key)elseif formatted_event.name==b.KEYUP then self:remove_key(formatted_event.key)end end}local cf={}cf={Clock={_type="Clock",new=function(cg)local ch={enabled=true,oneshot=false,clock=os.clock(),interval=cg,callbacks={onClock=function()end}}setmetatable(ch,cf.Clock)return ch end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;local ci=os.clock()if ci>=self.clock+self.interval then local delta_time=ci-self.clock;self:reset_timer()self.callbacks.onClock(self,formatted_event,delta_time)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={_type="Label",new=function(a5,a6,bF,ba,bb)local cj={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_LEFT,text=bF,pos=h.Vector2.new(a5,a6),colors={foreground=ba,background=bb},callbacks={onDraw=function()end}}setmetatable(cj,cf.Label)return cj end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;local R=g.split_by_char(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,ck in next,R do bv:write(self.pos.x,self.pos.y+d-1,ck,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then for d,ck in next,R do bv:write(self.pos.x-#ck/2+1,self.pos.y+d-1,ck,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_RIGHT then for d,ck in next,R do bv:write(self.pos.x-#ck+1,self.pos.y+d-1,ck,self.colors.foreground,self.colors.background)end end end},Button={_type="Button",new=function(a5,a6,b0,b1,bF,ba,cl,cm,cn)local co={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,hoverable=cn and true or false,active=false,hovered=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bF,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(b0,b1),border=false,hold=false,timed={enabled=false,clock=cf.Clock.new(0.5)},colors={foreground=ba,hover_background=cn,active_background=cl,unactive_background=cm,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end,onHover=function()end,onRelease=function()end}}co.timed.clock.binded_button=co;co.timed.clock.oneshot=true;co.timed.clock:stop()co.timed.clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)self.binded_button.callbacks.onTimeout(self.binded_button,formatted_event)end)setmetatable(co,cf.Button)return co end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;if self.active then bv:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background,self.border,self.colors.border_color)elseif self.hovered then bv:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.hover_background,self.border,self.colors.border_color)else bv:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background,self.border,self.colors.border_color)end;local R=g.split_by_char(self.text,"\n")local cp=(self.size.y-#R)/2+self.pos.y;for bV=0,#R-1 do local ck=R[bV+1]local cq;if self.text_alignment==b.ALIGN_LEFT then cq=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then cq=(self.size.x-#ck)/2+self.pos.x elseif self.text_alignment==b.ALIGN_RIGHT then cq=self.pos.x+self.size.x-#ck end;bv:write(cq,cp+bV,ck,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(formatted_event)return true else self.callbacks.onFailedPress(self,formatted_event)end elseif formatted_event.name==b.KEY then if cb:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(formatted_event)end elseif self.hoverable then if formatted_event.name==b.MOUSEMOVE or formatted_event.name==b.MOUSEDRAG then if not formatted_event.x or not formatted_event.y then if self.hovered then self.hovered=false;self.callbacks.onHover(self,formatted_event)end elseif k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then if not self.hovered then self.hovered=true;self.callbacks.onHover(self,formatted_event)end;return true elseif self.hovered then self.hovered=false;self.callbacks.onHover(self,formatted_event)end elseif self.hovered and formatted_event.name==b.DELETED then self.hovered=false;self.callbacks.onHover(self,formatted_event)end end;if self.hold then local o=formatted_event.name==b.DELETED and formatted_event.deleted or formatted_event;if o.name==b.MOUSEUP then if self.active then self.active=false;if k.in_area(o.x,o.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onRelease(self,formatted_event)end end end elseif self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self,formatted_event)if self.hold then if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end elseif self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self.active=not self.active;self.callbacks.onPress(self,formatted_event)end end},Progressbar={_type="Progressbar",new=function(a5,a6,b0,b1,aP,al,am,ba,cr,cs)local ct={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(b0,b1),value={max=am,min=al,current=aP,draw_percentage=true,percentage_precision=2},colors={foreground=ba,filled_background=cr,unfilled_background=cs},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(ct,cf.Progressbar)return ct end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;local cu=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local cv=self.size.x*cu;bv:rectangle(self.pos.x,self.pos.y,cv,self.size.y,self.colors.filled_background)bv:rectangle(self.pos.x+cv,self.pos.y,self.size.x-cv,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local cw=table.concat({g.format_number(cu*100,self.value.percentage_precision),"%"})local cx=(self.size.x-#cw)/2+self.pos.x;local cp=(self.size.y-1)/2+self.pos.y;bv:write(cx,cp,cw,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,H)local cy=h.constrain(H,self.value.min,self.value.max)self.value.current=cy end},Memo={_type="Memo",new=function(a5,a6,b0,b1,ba,bb)local cz={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(b0,b1),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=cf.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},border=false,colors={foreground=ba,background=bb,cursor=colors.white,cursor_text=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end,onPaste=function()end}}cz.cursor.blink.binded_cursor=cz.cursor;cz.cursor.blink:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(cz,cf.Memo)return cz end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;bv:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)local cA=self.pos.x;local cB=self.pos.y;local cC=self.size.x;local cD=self.size.y;if self.border then cA=cA+1;cB=cB+1;cC=cC-2;cD=cD-2 end;local cE=self.cursor.pos.x-self.first_visible_char;local cF=self.cursor.pos.y-self.first_visible_line;for a6=1,cD do local cG=a6+self.first_visible_line-1;local cH=self.rich_text[cG]or{}local ck=self.lines[cG]or""local cI=self.first_visible_char;local cJ=self.first_visible_char+cC-1;local cK=ck:sub(cI,cJ)local cL=cB+a6-1;if cH.background then if type(cH.background)=="string"then local bY=cH.background:sub(cI,cJ)bY=#bY>0 and bY or cH.background:sub(#cH.background)bv:blit(cA,cL,string.rep(" ",cC),nil,bY)else bv:rectangle(cA,cL,cC,1,cH.background)end end;if cH.foreground then if type(cH.foreground)=="string"then local bZ=cH.foreground:sub(cI,cJ)bZ=#bZ>0 and bZ or cH.foreground:sub(#cH.foreground)bv:blit(cA,cL,cK,bZ)else bv:write(cA,cL,cK,cH.foreground)end else bv:write(cA,cL,cK,self.colors.foreground)end end;if self.cursor.visible and cE>=0 and cE<cC and cF>=0 and cF<cD then bv:write(cE+cA,cF+cB,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if self.hidden then return false end;if not self.editable then return false end;if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)self:focus(true,formatted_event)local a5=formatted_event.x-self.pos.x;local a6=formatted_event.y-self.pos.y;if self.border then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x+1,self.pos.y+1,self.size.x-2,self.size.y-2)then self:set_cursor(a5+self.first_visible_char-1,a6+self.first_visible_line-1)end else self:set_cursor(a5+self.first_visible_char,a6+self.first_visible_line)end;return true else self.callbacks.onFailedPress(self,formatted_event)self:focus(false,formatted_event)return false end elseif formatted_event.name==b.DELETED then self:focus(false,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.PASTE then if self.callbacks.onPaste(self,formatted_event)then return true end;self:write(formatted_event.paste)return true elseif formatted_event.name==b.CHAR then if self.callbacks.onChar(self,formatted_event)then return true end;self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if self.callbacks.onKey(self,formatted_event)then return true end;if cb:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cM=self.lines[self.cursor.pos.y-1]local cN=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bA=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(table.concat({cN,"\n",cM}))self:set_cursor(bA,self.cursor.pos.y-1)end;return true elseif cb:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cN=self.lines[self.cursor.pos.y]local cO=self.lines[self.cursor.pos.y+1]if not cO then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bA=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(table.concat({cO,"\n",cN}))self:set_cursor(bA,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif formatted_event.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif formatted_event.key==b.KEY_RIGHT then local ck=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#ck+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local cP=self.lines[self.cursor.pos.y-1]self:set_cursor(#cP+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_BACKSPACE then local ck=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local cQ=#self.lines[self.cursor.pos.y-1]+1;local cR=self.cursor.pos.y-1;self:set_cursor(cQ,cR)self:write(ck)self:set_cursor(cQ,cR)end else local aA=table.concat({ck:sub(1,self.cursor.pos.x-2),ck:sub(self.cursor.pos.x)})self.lines[self.cursor.pos.y]=aA;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,aA,{aA})end;return true elseif formatted_event.key==b.KEY_DELETE then local ck=self.lines[self.cursor.pos.y]local cS=ck:sub(self.cursor.pos.x)if#cS>0 then local aA=table.concat({ck:sub(1,self.cursor.pos.x-1),ck:sub(self.cursor.pos.x+1)})self.lines[self.cursor.pos.y]=aA;self.callbacks.onWrite(self,aA,{aA})else local cO=self.lines[self.cursor.pos.y+1]if cO then local cQ=self.cursor.pos.x;local cR=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(cO)self:set_cursor(cQ,cR)end end;return true elseif formatted_event.key==b.KEY_ENTER then local cT=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cU=cT:gsub("(%s*).*","%1")self:write(table.concat({"\n",cU}))return true elseif formatted_event.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_HOME then local cT=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cU=cT:gsub("(%s*).*","%1")self:set_cursor(#cU+1,self.cursor.pos.y)return true elseif cb:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local cV=self.lines[self.cursor.pos.y]local cU=cV:gsub("^(%s*).*$","%1")local cW=math.min(#self.tab_spaces,#cU)local aA=cV:sub(cW+1)self.lines[self.cursor.pos.y]=aA;self:set_cursor(self.cursor.pos.x-cW,self.cursor.pos.y)self.callbacks.onWrite(self,aA,{aA})return true elseif formatted_event.key==b.KEY_TAB then local bA=self.cursor.pos.x;local cX=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cY=#self.lines[self.cursor.pos.y]-cX;self:set_cursor(bA+cY,self.cursor.pos.y)return true end elseif formatted_event.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,formatted_event)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+formatted_event.direction,1,#self.lines)return true end end end,focus=function(self,cZ,formatted_event)if cZ then self.focussed=true;self.callbacks.onFocus(self,formatted_event)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)end end,set_cursor=function(self,cQ,cR,c_)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then cR=h.constrain(cR,1,self.limits.y)end;if c_ then for a6=#self.lines+1,cR do if not self.lines[a6]then self.lines[a6]=""end end else cR=h.constrain(cR,1,#self.lines)end;cQ=h.constrain(cQ,1,#self.lines[cR]+1)local cE=cQ-self.first_visible_char;local cF=cR-self.first_visible_line;local cC=self.size.x;local cD=self.size.y;if self.border then cC=cC-2;cD=cD-2 end;if cE>=cC then self.first_visible_char=self.first_visible_char+cE-cC+1 elseif cE<0 then self.first_visible_char=self.first_visible_char+cE end;if cF>=cD then self.first_visible_line=self.first_visible_line+cF-cD+1 elseif cF<0 then self.first_visible_line=self.first_visible_line+cF end;self.callbacks.onCursorChange(self,cQ,cR)self.cursor.pos=h.Vector2.new(cQ,cR)end,write=function(self,...)local bF=table.concat({...})local R=g.split_by_char(bF,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local M=table.concat({"[^",g.escape_magic_characters(table.concat(self.whitelist)),"]"})for d,ck in next,R do R[d]=ck:gsub(M,"")end elseif#self.blacklist>0 then local M=table.concat({"[",g.escape_magic_characters(table.concat(self.blacklist)),"]"})for d,ck in next,R do R[d]=ck:gsub(M,"")end end;if self.limits.y>0 then for a6=1,#self.lines+#R-1-self.limits.y do table.remove(R)end;if#R==0 then return end end;if#R>1 then for d0,ck in next,R do if d0==1 then local d1=self.lines[self.cursor.pos.y]local d2=d1:sub(1,self.cursor.pos.x-1)local cS=d1:sub(self.cursor.pos.x)local d3=R[#R]if self.limits.x>0 then ck=ck:sub(1,self.limits.x-#d2)d3=d3:sub(1,self.limits.x-#cS)end;self.lines[self.cursor.pos.y]=table.concat({d2,ck})table.insert(self.lines,self.cursor.pos.y+1,table.concat({d3,cS}))self:set_cursor(#d3+1,self.cursor.pos.y+1)elseif d0==#R then break else if self.limits.x>0 then ck=ck:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,ck)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local d1=self.lines[self.cursor.pos.y]local d2=d1:sub(1,self.cursor.pos.x-1)local cS=d1:sub(self.cursor.pos.x)if self.limits.x>0 then R[1]=R[1]:sub(1,self.limits.x-(#d2+#cS))end;self.lines[self.cursor.pos.y]=table.concat({d2,R[1],cS})self:set_cursor(self.cursor.pos.x+#R[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bF,R)end,print=function(self,...)local bF=table.concat({...})local aA=#self.lines>0 and"\n"or""self:write(table.concat({aA,bF}))end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=h.Vector2.new(1,1)end},Window={_type="Window",new=function(a5,a6,b0,b1,bb,d4)local d5={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(b0,b1),can_drag=false,border=false,dragging={enabled=true,from=h.Vector2.new(1,1)},resizing={enabled=true,corner=h.Vector2.new(-1,1),enabled_directions={[-1]={[1]=true,[0]=true,[-1]=true},[0]={[1]=true,[0]=false,[-1]=true},[1]={[1]=true,[0]=true,[-1]=true}},pinned={x=false,y=false},min_size=h.Vector2.new(b0,b1),max_size=h.Vector2.new(b0,b1)*2},shadow={enabled=d4,offset=h.Vector2.new(1,1)},elements={},colors={background=bb,shadow=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onEvent=function()end,onFocus=function()end,onDrag=function()end,onResize=function()end}}setmetatable(d5,cf.Window)return d5 end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;if self.shadow.enabled then bv:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;bv:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)self:draw_elements(delta_time)end,event=function(self,formatted_event)if self.hidden then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local d6=self:event_elements(formatted_event)if not d6 then if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.can_drag=false;if self.resizing.enabled then local d7=true;local d8=formatted_event.y==self.pos.y+self.size.y-1;local d9=formatted_event.y==self.pos.y;if formatted_event.x==self.pos.x+self.size.x-1 then if self.resizing.enabled_directions[1][1]and d8 then self.resizing.corner=self.pos.ONE:duplicate()self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][-1]and d9 then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][0]and not(d8 or d9)then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=true else d7=false end elseif formatted_event.x==self.pos.x then if self.resizing.enabled_directions[-1][1]and d8 then self.resizing.corner=self.pos.DOWN+self.pos.LEFT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][-1]and d9 then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][0]and not(d8 or d9)then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=true else d7=false end elseif self.resizing.enabled_directions[0][1]and d8 then self.resizing.corner=self.pos.DOWN+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[0][-1]and d9 then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false else d7=false end;if not d7 then self.resizing.corner=self.pos.ZERO:duplicate()self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end else self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end;self.focussed=true;self.callbacks.onPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.callbacks.onFailedPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG and self.focussed then if self.can_drag then self:drag(formatted_event.x,formatted_event.y)else self:resize(formatted_event.x,formatted_event.y,self.resizing.pinned.x,self.resizing.pinned.y)end;return true elseif formatted_event.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,formatted_event)end else self.focussed=false;self.callbacks.onFocus(self,formatted_event)end;return d6 end,drag=function(self,a5,a6)if self.dragging.enabled then local da=self.pos:duplicate()self.pos=self.pos+h.Vector2.new(a5-self.dragging.from.x,a6-self.dragging.from.y)self.dragging.from=h.Vector2.new(a5,a6)self.callbacks.onDrag(self,da.x,da.y)end end,resize=function(self,a5,a6,db,dc)if self.resizing.enabled and self.resizing.corner~=self.pos.ZERO then local function dd()self.size.x=h.constrain(self.size.x,self.resizing.min_size.x,self.resizing.max_size.x)self.size.y=h.constrain(self.size.y,self.resizing.min_size.y,self.resizing.max_size.y)end;local de=h.Vector2.new(a5,a6)local da=self.pos:duplicate()local df=self.size:duplicate()if self.resizing.corner==self.pos.ONE then self.size.x=de.x-self.pos.x+1;self.size.y=de.y-self.pos.y+1;dd()elseif self.resizing.corner==self.pos.ONE*-1 then self.size.x=self.size.x+self.pos.x-de.x;self.size.y=self.size.y+self.pos.y-de.y;dd()local dg=df-self.size;self.pos=self.pos+dg elseif self.resizing.corner==self.pos.UP+self.pos.RIGHT then self.size.x=de.x-self.pos.x+1;self.size.y=self.size.y+self.pos.y-de.y;dd()local dh=df.y-self.size.y;self.pos.y=self.pos.y+dh elseif self.resizing.corner==self.pos.DOWN+self.pos.LEFT then self.size.x=self.size.x+self.pos.x-de.x;self.size.y=de.y-self.pos.y+1;dd()local cY=df.x-self.size.x;self.pos.x=self.pos.x+cY end;if db then self.size.x=df.x;self.pos.x=da.x end;if dc then self.size.y=df.y;self.pos.y=da.y end;self.callbacks.onResize(self,da.x,da.y,df.x,df.y)end end,set_elements=function(self,di)self.elements={}for d,dj in next,di do table.insert(self.elements,dj)end end,draw_elements=function(self,delta_time)for d=#self.elements,1,-1 do local dj=self.elements[d]if dj.draw then dj.pos=dj.pos+self.pos-self.pos.ONE;dj:draw(delta_time)dj.pos=dj.pos-self.pos+self.pos.ONE end end end,event_elements=function(self,formatted_event)if formatted_event.name==b.DELETED then if formatted_event.deleted.x and formatted_event.deleted.y then local dk=k.format_event(formatted_event.deleted.raw)dk.x,dk.y=dk.x-self.pos.x+1,dk.y-self.pos.y+1;formatted_event=k.delete_event(dk)end else if formatted_event.x and formatted_event.y then formatted_event=k.format_event(formatted_event.raw)formatted_event.x,formatted_event.y=formatted_event.x-self.pos.x+1,formatted_event.y-self.pos.y+1 end end;for d,dj in next,self.elements do if dj.event then if dj:event(formatted_event)then formatted_event=k.delete_event(formatted_event)end end end;return formatted_event.name==b.DELETED end},Canvas={_type="Canvas",new=function(a5,a6,b0,b1)local dl={draw_priority=b.LOW_PRIORITY,hidden=false,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(b0,b1),transparent=false,buffer={pixels={},background={char=" ",foreground=colors.black,background=colors.black,inverted=false}},callbacks={onDraw=function()end}}setmetatable(dl.buffer,bv.buffer)setmetatable(dl,cf.Canvas)return dl end,draw=function(self)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;self:cast(bv)end,cast=function(self,a8)if self.transparent then for a6=1,self.size.y do if self.buffer.pixels[a6]then for a5=1,self.size.x do local bu=self.buffer.pixels[a6][a5]if bu then if bu.inverted then a8.buffer:set_pixel(self.pos.x+a5-1,self.pos.y+a6-1,bu.char,bu.background,bu.foreground,true)else a8.buffer:set_pixel(self.pos.x+a5-1,self.pos.y+a6-1,bu.char,bu.foreground,bu.background)end end end end end else for a6=1,self.size.y do for a5=1,self.size.x do local bu=self.buffer:get_pixel(a5,a6)if bu.inverted then a8.buffer:set_pixel(self.pos.x+a5-1,self.pos.y+a6-1,bu.char,bu.background,bu.foreground,true)else a8.buffer:set_pixel(self.pos.x+a5-1,self.pos.y+a6-1,bu.char,bu.foreground,bu.background)end end end end end,to_nfp=function(self,...)return bv.frame_to_nfp({frame=self.buffer},...)end,to_nft=function(self,...)return bv.frame_to_nft({frame=self.buffer},...)end}}cf.Clock.__index=cf.Clock;cf.Label.__index=cf.Label;cf.Button.__index=cf.Button;cf.Progressbar.__index=cf.Progressbar;cf.Memo.__index=cf.Memo;cf.Window.__index=cf.Window;for d,dm in next,bv do if type(dm)=="function"and not cf.Canvas[d]and not d:find("set_")and not d:find("frame")then cf.Canvas[d]=dm end end;cf.Canvas.__index=cf.Canvas;local dn={}dn={_type="WSS",new=function(dp)local dq={draw_priority=b.LOW_PRIORITY,enabled=true,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=cf.Clock.new(dp or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}dq.broadcast_clock.WSS=dq;dq.broadcast_clock:set_callback(b.ONCLOCK,function(self,formatted_event)rednet.broadcast(bv.frame,self.WSS.protocol)end)setmetatable(dq,dn)return dq end,draw=function(self,delta_time)if not self.enabled then return false end;if self.callbacks.onDraw(self,delta_time)then return end;if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then bv.buffer.background=self.buffer.background;bv.buffer.pixels=self.buffer.pixels end end end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local dr=false;if formatted_event.name==b.REDNET then if formatted_event.protocol==self.protocol then local b4=formatted_event.message;if self.mode==b.HOST then if b4==b.CONNECTION_REQUEST then rednet.send(formatted_event.from,b.OK,self.protocol)self.users[formatted_event.from]=true;dr=true;self.callbacks.onConnect(self,formatted_event)elseif b4==b.DISCONNECTED then self.users[formatted_event.from]=nil;dr=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(b4)=="table"and self.events_whitelist[b4.name]and self.users[formatted_event.from]then if b4.raw then os.queueEvent(table.unpack(b4.raw))end;dr=true end elseif self.mode==b.USER then if formatted_event.from==self.host_id then if b4==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;dr=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(b4)=="table"then self.buffer=b4;dr=true end end end end end;if self.mode==b.USER then if formatted_event.name==b.TOUCH then dr=true end;if self.events_whitelist[formatted_event.name]then rednet.send(self.host_id,formatted_event,self.protocol)dr=true end elseif self.mode==b.HOST then self.broadcast_clock:event(formatted_event)end;return dr end,use_side=function(self,ds)self.side=ds end,connect=function(self,dt,du,dv)du=du or 2;dv=dv or 10;rednet.open(self.side)self.host_id=dt;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local dw=0;while true do dw=dw+1;local dx={rednet.receive(self.protocol,du)}if dx[1]==dt and dx[2]==b.OK and dx[3]==self.protocol then return b.OK elseif dw>=dv then local dy=string.format("Connection timed out on attempt %d after %d ms",dw,du*1000)if#dx>0 then dy=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",dw,du*1000)end;dn:close()error(dy,2)end end;self.callbacks.onConnect(self,dt)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}dn.__index=dn;local dz={}dz={_type="FT",new=function(dA)local dB={enabled=true,computer_whitelist={},side=b.NONE,mode=b.ALL,password=dA or b.NONE,protocol="YAGUI-"..a.ver.."_FT",save_dir="/FT",callbacks={onEvent=function()end,onConnect=function()end,onSend=function()end,onReceive=function()end}}setmetatable(dB,dz)return dB end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;if formatted_event.name==b.REDNET and formatted_event.protocol==self.protocol then if self.mode==b.ALL or self.mode==b.RECEIVE then local dt=formatted_event.from;if self.computer_whitelist[dt]or self.callbacks.onConnect(self,formatted_event)then local b4=formatted_event.message;if type(b4)=="table"and b4.name and b4.content then if b4.psw==self.password then local b5=fs.getName(tostring(b4.name))local _=fs.combine(self.save_dir,b5)if fs.exists(_)then rednet.send(dt,b.NO,self.protocol)else local dC=tostring(b4.content)if self.callbacks.onReceive(self,formatted_event,dt,b5,_,dC)then return true end;local dD=fs.open(_,"w")if dD then dD.write(dC)dD.close()rednet.send(dt,b.OK,self.protocol)else rednet.send(dt,b.ERROR,self.protocol)end end else rednet.send(dt,b.NO,self.protocol)end else rednet.send(dt,b.ERROR,self.protocol)end else rednet.send(dt,b.NO,self.protocol)end end end end,send=function(self,dE,dF,dG,dH)if self.mode==b.ALL or self.mode==b.SEND then dH=dH or fs.getName(dG)dF=dF or b.NONE;local dD=fs.open(dG,"r")local dC=dD.readAll()dD.close()local b4={psw=dF,name=dH,content=dC}if self.callbacks.onSend(self,formatted_event,b4)then return true end;rednet.send(dE,b4,self.protocol)end end,open=function(self,ds)self.side=ds;rednet.open(ds)end,close=function(self)if rednet.isOpen()then rednet.close(self.side)end end}dz.__index=dz;local dI={}dI={_type="Loop",new=function(dJ,dK)local dL={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=dJ,EPS_target=dK},monitors={terminal=term},threads={queue_event=true,draw={},event={}},elements={high_priority={},low_priority={},loop={clock=cf.Clock.new(1/dJ),stats_clock=cf.Clock.new(1),FPS_label=cf.Label.new(1,1,"1 FPS",colors.white),EPS_label=cf.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),show=function(self,dM)self.FPS_label.hidden=not dM;self.EPS_label.hidden=not dM end,update_pos=function(self)self.FPS_label.pos=self.pos;self.EPS_label.pos=self.pos+h.Vector2.DOWN end,Events=0,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onEvent=function()end}}dL.elements.loop.stats_clock.stats=dL.stats;dL.stats.FPS_label=dL.elements.loop.FPS_label;dL.stats.EPS_label=dL.elements.loop.EPS_label;dL.elements.loop.stats_clock:set_callback(b.ONCLOCK,function(self,formatted_event,delta_time)self.stats:update_pos()self.stats.FPS_label.text=table.concat({math.floor(self.stats.FPS+0.5)," FPS"})self.stats.EPS_label.text=table.concat({math.floor(self.stats.EPS+0.5)," EPS"})end)dL.stats:show(false)dL.elements.loop.clock.Loop=dL;dL.elements.loop.clock:set_callback(b.ONCLOCK,function(self,formatted_event,delta_time)self.Loop.stats.FPS=1/delta_time;self.Loop.stats.EPS=self.Loop.stats.Events/delta_time;self.Loop.stats.Events=0;self.Loop:resume_threads("draw",delta_time)self.Loop:draw_elements(delta_time)self.interval=1/self.Loop.options.FPS_target end)setmetatable(dL,dI)return dL end,set_monitors=function(self,b6)self.monitors=m.get_monitors(b6)end,set_elements=function(self,di)self.elements.high_priority={}self.elements.low_priority={}for d,H in next,di do if H.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,H)else table.insert(self.elements.low_priority,H)end end end,draw_elements=function(self,delta_time)local function dN(ar)for d=#ar,1,-1 do local dj=ar[d]if dj.draw then dj:draw(delta_time)end end end;if self.callbacks.onDraw(self,delta_time)then return end;local dO=bv.screens;bv.screens=self.monitors;dN(self.elements.low_priority)dN(self.elements.high_priority)for d,dj in next,self.elements.loop do if dj.draw then dj:draw(delta_time)end end;bv:draw()bv.screens=dO end,event_elements=function(self,formatted_event)local function b2(ar)for d,dj in next,ar do if dj.event then if dj:event(formatted_event)then formatted_event=k.delete_event(formatted_event)end end end end;if formatted_event.name~=b.COROUTINE then self:resume_threads("event",formatted_event)end;if self.callbacks.onEvent(self,formatted_event)then formatted_event=k.delete_event(formatted_event)end;if self.options.stop_on_terminate and formatted_event.name==b.TERMINATE then self:stop()return end;if formatted_event.name==b.TOUCH then local dP=self.monitors[formatted_event.from]and true or false;if dP then if formatted_event.raw[1]=="monitor_touch"then os.queueEvent("mouse_up",1,formatted_event.x,formatted_event.y)end else formatted_event=k.delete_event(formatted_event)end end;b2(self.elements.loop)local dQ={}for d,dj in next,self.elements.high_priority do if dj.event then local dR=dj:event(formatted_event)if dR then formatted_event=k.delete_event(formatted_event)if self.elements.high_priority~=dj then table.insert(dQ,{element=dj,key=d})end end end end;if#dQ>0 then for d,H in next,dQ do table.insert(self.elements.high_priority,1,H.element)table.remove(self.elements.high_priority,H.key+#dQ)end end;b2(self.elements.low_priority)end,resume_threads=function(self,d,...)local dS=self.threads[d]if dS and#dS>0 then local dT={}for w=1,#dS do local dU=dS[w]if coroutine.status(dU)=="dead"then dT[#dT+1]=w else local dV={coroutine.resume(dU,self,...)}if self.threads.queue_event then os.queueEvent("coroutine",dU,coroutine.status(dU),table.unpack(dV))end end end;if#dT>0 then i.better_remove(dS,table.unpack(dT))end end end,start=function(self)self.enabled=true;cb:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local dW=os.startTimer(1/self.options.EPS_target)local dX;if self.options.raw_mode then dX={os.pullEventRaw()}else dX={os.pullEvent()}end;local formatted_event=k.format_event(dX)cb:manage_event(formatted_event)self:event_elements(formatted_event)self.stats.Events=self.stats.Events+1;os.cancelTimer(dW)end;cb:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}dI.__index=dI;local dY={__call=function(self,...)return self.new(...)end}dY.__index=dY;local dZ={__call=function(self,...)return self.new(...)end,set_callback=function(self,o,p)if o==b.ONSTART then self.callbacks.onStart=p elseif o==b.ONSTOP then self.callbacks.onStop=p elseif o==b.ONDRAW then self.callbacks.onDraw=p elseif o==b.ONPRESS then self.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then self.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then self.callbacks.onTimeout=p elseif o==b.ONCLOCK then self.callbacks.onClock=p elseif o==b.ONEVENT then self.callbacks.onEvent=p elseif o==b.ONFOCUS then self.callbacks.onFocus=p elseif o==b.ONKEY then self.callbacks.onKey=p elseif o==b.ONCHAR then self.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then self.callbacks.onMouseScroll=p elseif o==b.ONCURSORCHANGE then self.callbacks.onCursorChange=p elseif o==b.ONWRITE then self.callbacks.onWrite=p elseif o==b.ONCONNECT then self.callbacks.onConnect=p elseif o==b.ONDISCONNECT then self.callbacks.onDisconnect=p elseif o==b.ONSEND then self.callbacks.onSend=p elseif o==b.ONRECEIVE then self.callbacks.onReceive=p elseif o==b.ONDRAG then self.callbacks.onDrag=p elseif o==b.ONRESIZE then self.callbacks.onResize=p elseif o==b.ONPASTE then self.callbacks.onPaste=p elseif o==b.ONHOVER then self.callbacks.onHover=p elseif o==b.ONRELEASE then self.callbacks.onRelease=p end end}dZ.__index=dZ;setmetatable(h.Vector2,dY)setmetatable(h.Vector3,dY)setmetatable(dn,dZ)setmetatable(dz,dZ)for d,dj in next,cf do setmetatable(dj,dZ)end;setmetatable(dI,dZ)local d_={...}if d_[1]=="help"then local R={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,ck in next,R do m.better_print(term,ck.foreground,ck.background,ck.text)end elseif d_[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif d_[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif d_[1]=="copyright"then local e0={colors.red,colors.yellow,colors.green}local e1=g.split(a.copyright,"\n\n")for d,e2 in next,e1 do m.better_print(term,e0[d],nil,e2)if d<#e1 then read("")end end elseif d_[1]=="setup"then if shell then local e3="YAGUI_PATH"local _="/"..shell.getRunningProgram()l.set(e3,_)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(e3),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif d_[1]=="create"then if d_[2]then local _=shell.resolve(d_[2])if g.get_extension(_)~="lua"then _=_..".lua"end;if fs.exists(_)then m.better_print(term,colors.red,nil,"PATH: \"/",_,"\" already exists, please use another path or delete it.")else local dD=fs.open(_,"w")dD.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")dD.close()m.better_print(term,colors.green,nil,"New project was created at \"/",_,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif d_[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",d_[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local e4={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=bv,input=cb,WSS=dn,wireless_screen_share=dn,FT=dz,file_transfer=dz,gui_elements=cf,Loop=dI}for d,H in next,b do e4[d]=H end;return e4