--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.31.1",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",TERMRESIZE="term_resize",DELETED="DELETED",NONE="NONE",ALL="ALL",SEND="SEND",RECEIVE="RECEIVE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,ONSEND=17,ONRECEIVE=18,ONDRAG=19,ONRESIZE=20,ONPASTE=21,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2,ALIGN_RIGHT=3}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={TOP=string.char(131),BOTTOM=string.char(143),LEFT=string.char(149),RIGHT=string.char(149),MIDDLE=string.char(140),TOPLEFT=string.char(151),TOPRIGHT=string.char(148),BOTTOMLEFT=string.char(138),BOTTOMRIGHT=string.char(133),MIDDLELEFT=string.char(132),MIDDLERIGHT=string.char(136)}local f={BG=string.char(30),FG=string.char(31)}local g={}local h={}local i={}local j={}local k={}local l={}local m={}local n={}g={set_callback=function(o,p,q)o:set_callback(p,q)end,get_computer_type=function()local r=b.COMPUTER;if turtle then r=b.TURTLE elseif pocket then r=b.POCKET end;return r,term.isColor()end,expect=function(s,...)local t={...}local u="[/%.,]"s=s or"unknown"s=tostring(s)local v=false;local w;for x=1,#t,2 do local y=tostring(t[x])local z=true;local A;for B,C in next,h.split(y,u)do local D=t[x+1]local E=type(D)if E~=C then A=E else z=false;break end end;if z then local F=y:gsub(u,", ")w=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",s,(x+1)/2,F,A)v=true;break end end;if v then error(w,3)return false end;return true end}h={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=table.concat,split=function(G,H)if not string.find(G,H)then return{G}end;local I={}local J=table.concat({"(.-)",H,"()"})local K;for L,M in string.gfind(G,J)do table.insert(I,L)K=M end;table.insert(I,string.sub(G,K))return I end,split_by_char=function(G,N)local O={}local P=1;for x=1,#G do if G:sub(x,x)==N then table.insert(O,x==P and""or G:sub(P,x-1))P=x+1 end end;table.insert(O,G:sub(P,#G))return O end,compare_versions=function(Q,R)local S=h.split(Q,".")local T=h.split(R,".")local U=#S;local V=#T;for x=1,math.min(U,V)do if tonumber(S[x])>tonumber(T[x])then return 1 elseif tonumber(S[x])<tonumber(T[x])then return-1 end end;if U>V then return 1 elseif U<V then return-1 end;return 0 end,escape_magic_characters=function(G)for d,W in next,h.magic_characters do G=G:gsub(table.concat({"[%",W,"]"}),table.concat({"%%%",W}))end;return G end,get_extension=function(X)local Y,Z=X:gsub(".*%.","")if Z>0 then return Y end;return""end,format_number=function(_,a0)_=tostring(_)a0=a0 or 0;local a1=_:gsub("(.*)%..*","%1")if a0<=0 then return a1 end;local a2=#a1+1;local a3=_:sub(a2+1,a2+a0)a3=a3:reverse():gsub("0*(.*)","%1"):reverse()if#a3>0 then return table.concat({a1,".",a3})end;return a1 end,trim=function(G)return G:gsub("^%s*(.*)%s*$","%1")end}i={Vector2={new=function(a4,a5)local a6={x=a4 or 0,y=a5 or 0}setmetatable(a6,i.Vector2)return a6 end,duplicate=function(self)return i.Vector2.new(self.x,self.y)end,length_sq=function(self)return self.x*self.x+self.y*self.y end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y)end,unit=function(self)return self/self:length()end,dot=function(self,a7)return self.x*a7.x+self.y*a7.y end,cross=function(self,a7)return self.x*a7.y-self.y*a7.x end,rotate=function(self,a8)local a9=math.cos(a8)local aa=math.sin(a8)return i.Vector2.new(a9*self.x-aa*self.y,aa*self.x+a9*self.y)end,string=function(self,a0)if a0 then return string.format(table.concat({"(%.",a0,"f; %.",a0,"f)"}),self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a7)return i.Vector2.new(self.x+a7.x,self.y+a7.y)end,__sub=function(self,a7)return i.Vector2.new(self.x-a7.x,self.y-a7.y)end,__mul=function(self,_)if type(self)=="number"then return i.Vector2.new(_.x*self,_.y*self)else return i.Vector2.new(self.x*_,self.y*_)end end,__div=function(self,_)return i.Vector2.new(self.x/_,self.y/_)end,__eq=function(self,a7)return self.x==a7.x and self.y==a7.y end,__lt=function(self,a7)return self:length_sq()<a7:length_sq()end,__le=function(self,a7)return self:length_sq()<=a7:length_sq()end},Vector3={new=function(a4,a5,ab)local ac={x=a4 or 0,y=a5 or 0,z=ab or 0}setmetatable(ac,i.Vector3)return ac end,duplicate=function(self)return i.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return self.x*self.x+self.y*self.y+self.z*self.z end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y+self.z*self.z)end,unit=function(self)return self/self:length()end,dot=function(self,a7)return self.x*a7.x+self.y*a7.y+self.z*a7.z end,cross=function(self,a7)return i.Vector3.new(self.y*a7.z-self.z*a7.y,self.z*a7.x-self.x*a7.z,self.x*a7.y-self.y*a7.x)end,rotate=function(self,ad,a8)local a9=math.cos(a8)return a9*self+math.sin(a8)*ad:cross(self)+(1-a9)*ad:dot(self)*ad end,string=function(self,a0)if a0 then return string.format(table.concat({"(%.",a0,"f; %.",a0,"f; %.",a0,"f)"}),self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a7)return i.Vector3.new(self.x+a7.x,self.y+a7.y,self.z+a7.z)end,__sub=function(self,a7)return i.Vector3.new(self.x-a7.x,self.y-a7.y,self.z-a7.z)end,__mul=function(self,_)if type(self)=="number"then return i.Vector3.new(_.x*self,_.y*self,_.z*self)else return i.Vector3.new(self.x*_,self.y*_,self.z*_)end end,__div=function(self,_)return i.Vector3.new(self.x/_,self.y/_,self.z/_)end,__eq=function(self,a7)return self.x==a7.x and self.y==a7.y and self.z==a7.z end,__lt=function(self,a7)return self:length_sq()<a7:length_sq()end,__le=function(self,a7)return self:length_sq()<=a7:length_sq()end},map=function(ae,af,ag,ah,ai,aj)local ak=(ae-af)/(ag-af)*(ai-ah)+ah;if aj then return i.constrain(ak,ah,ai)end;return ak end,constrain=function(ae,al,am)return math.min(am,math.max(al,ae))end,round=function(_)return math.floor(_+0.5)end,round_numbers=function(...)local an={...}local ao={}for d,_ in next,an do table.insert(ao,i.round(_))end;return table.unpack(ao)end,floor_numbers=function(...)local an={...}local ap={}for d,_ in next,an do table.insert(ap,math.floor(_))end;return table.unpack(ap)end,ceil_numbers=function(...)local an={...}local aq={}for d,_ in next,an do table.insert(aq,math.ceil(_))end;return table.unpack(aq)end}i.Vector2.__index=i.Vector2;i.Vector3.__index=i.Vector3;i.Vector2.ONE=i.Vector2.new(1,1)i.Vector2.UP=i.Vector2.new(0,-1)i.Vector2.DOWN=i.Vector2.new(0,1)i.Vector2.LEFT=i.Vector2.new(-1,0)i.Vector2.RIGHT=i.Vector2.new(1,0)i.Vector2.ZERO=i.Vector2.new(0,0)i.Vector3.ONE=i.Vector3.new(1,1,1)i.Vector3.UP=i.Vector3.new(0,1,0)i.Vector3.DOWN=i.Vector3.new(0,-1,0)i.Vector3.LEFT=i.Vector3.new(-1,0,0)i.Vector3.RIGHT=i.Vector3.new(1,0,0)i.Vector3.FORWARD=i.Vector3.new(0,0,1)i.Vector3.BACK=i.Vector3.new(0,0,-1)i.Vector3.ZERO=i.Vector3.new(0,0,0)j={has_value=function(ar,ae)for as,at in next,ar do if at==ae then return true,as end end;return false,nil end,has_key=function(ar,d)if ar[d]~=nil then return true,ar[d]end;return false,nil end,serialise=function(ar,au,av,aw,ax,ay,az,aA,aB)local au=au or 0;local az=az or"  "local aC=0;local aA=aA or"\n"local aB=aB or" "if not av then az,aA,aB="","",""end;local aD="root"local aE={[ar]=aD}local function aF(ar,X)local aG=az:rep(aC+1)local aH=table.concat({"{",aA})local function aI(ar)local aJ=#ar;local aK=0;for d,ae in next,ar do local aL=type(d)local aM;if aL=="string"or aL=="table"then aM=string.format("%q",tostring(d))else aM=tostring(d)end;if not ay and d=="__index"then ae={}end;local aN=type(ae)if aL=="number"and d<=aJ and d==aK+1 then aK=d;aH=table.concat({aH,aG})else aH=table.concat({aH,string.format("%s[%s]%s=%s",aG,aM,aB,aB)})end;if aN=="table"then if not next(ae)then aH=table.concat({aH,"{}"})elseif au<=-1 or aC<au then if aE[ae]and not aw then aH=table.concat({aH,string.format("%q",aE[ae])})else local aO=table.concat({X,"[",aM,"]"})aE[ae]=aO;aC=aC+1;aH=table.concat({aH,aF(ae,aO)})aC=aC-1 end else aH=table.concat({aH,"{}"})end elseif aN=="string"or aN=="function"then aH=table.concat({aH,string.format("%q",tostring(ae))})else aH=table.concat({aH,string.format("%s",tostring(ae))})end;if next(ar,d)then aH=table.concat({aH,",",aA})else aH=table.concat({aH,aA})end end end;local aP=getmetatable(ar)if ax and aP then aI(aP)if next(ar)then aH=table.concat({aH:sub(1,#aH-#aA),",",aH:sub(#aH-#aA+1)})end end;aI(ar)aH=table.concat({aH,az:rep(aC),"}"})return aH end;return aF(ar,aD)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize,better_unpack=function(ar,x,aQ)x=x or 1;aQ=aQ or#ar;if x<=aQ then return ar[x],j.better_unpack(ar,x+1,aQ)end end,get=function(ar,...)local X={...}local aR=ar;for x=1,#X do aR=aR[X[x]]end;return aR end,set=function(ae,ar,...)local X={...}local aS=table.remove(X)local aT=j.get(ar,table.unpack(X))local aU=aT[aS]aT[aS]=ae;return aU end}j.serialize=j.serialise;k={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aV)return k.colors[aV]end,paint_to_color=function(aW)return k.paint[aW]end}for d,ae in next,k.colors do k.paint[ae]=d end;l={is_area_pressed=function(aX,aY,a4,a5,aZ,a_)if aX>=a4 and aX<a4+aZ then if aY>=a5 and aY<a5+a_ then return true end end;return false end,format_event_table=function(b0)local p={}p.name=b0[1]if p.name=="timer"then p.name=b.TIMER;p.id=p[2]elseif p.name=="mouse_click"then p.name=b.TOUCH;p.from="terminal"p.button=b0[2]p.x=b0[3]p.y=b0[4]elseif p.name=="monitor_touch"then p.name=b.TOUCH;p.from=b0[2]p.button=1;p.x=b0[3]p.y=b0[4]elseif p.name=="mouse_drag"then p.name=b.MOUSEDRAG;p.button=b0[2]p.x=b0[3]p.y=b0[4]elseif p.name=="mouse_up"then p.name=b.MOUSEUP;p.button=b0[2]p.x=b0[3]p.y=b0[4]elseif p.name=="mouse_scroll"then p.name=b.MOUSESCROLL;p.direction=b0[2]p.x=b0[3]p.y=b0[4]elseif p.name=="char"then p.name=b.CHAR;p.char=b0[2]elseif p.name=="key"then p.name=b.KEY;p.key=b0[2]elseif p.name=="key_up"then p.name=b.KEYUP;p.key=b0[2]elseif p.name=="paste"then p.name=b.PASTE;p.paste=b0[2]elseif p.name=="rednet_message"then p.name=b.REDNET;p.from=b0[2]p.message=b0[3]local b1=b0[4]if type(b1)=="number"then p.distance=b1 else p.protocol=tostring(b1)end elseif p.name=="modem_message"then local b2=b0[5]p.name=b.MODEM;p.side=b0[2]p.from=b0[4]p.protocol=b2.sProtocol or""p.message=b2.message elseif p.name=="terminate"then p.name=b.TERMINATE elseif p.name=="term_resize"then p.name=b.TERMRESIZE else p.parameters={}for d=2,#b0 do table.insert(p.parameters,b0[d])end end;p.raw=b0;return p end}m={_path="/.settings",set=function(b3,ae)settings.set(b3,ae)settings.save(m._path)end,unset=function(b3)settings.unset(b3)settings.save(m._path)end,get=function(b3)return settings.get(b3)end}n={get_monitors=function(b4)local b5={}for d,b6 in next,b4 do if b6=="terminal"then b5[b6]=term else if peripheral.getType(b6)=="monitor"then b5[b6]=peripheral.wrap(b6)end end end;return b5 end,better_print=function(b7,b8,b9,...)local ba=table.concat({...})local bb=b7.getTextColor()local bc=b7.getBackgroundColor()if b8 then b7.setTextColor(b8)end;if b9 then b7.setBackgroundColor(b9)end;print(ba)b7.setTextColor(bb)b7.setBackgroundColor(bc)end,better_clear=function(b7)b7.clear()b7.setCursorPos(1,1)end}local bd={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a4,a5)if self.pixels[a4]then if self.pixels[a4][a5]then return true end end;return false end,get_pixel=function(self,a4,a5)if self:is_pixel_custom(a4,a5)then return self.pixels[a4][a5]end;return{char=" ",foreground=self.background,background=self.background,inverted=false}end,set_pixel=function(self,a4,a5,N,b8,b9,be)a4,a5=math.floor(a4),math.floor(a5)local bf=self:get_pixel(a4,a5)if N then bf.char=N:sub(1,1)end;if be then bf.foreground,bf.background=b9 or bf.foreground,b8 or bf.background else if bf.inverted then bf.foreground,bf.background=b8 or bf.background,b9 or bf.foreground else bf.foreground,bf.background=b8 or bf.foreground,b9 or bf.background end end;bf.inverted=be;if not self.pixels[a4]then self.pixels[a4]={}end;self.pixels[a4][a5]=bf end,clear=function(self)self.pixels={}end},set_screens=function(self,bg)self.screens=n.get_monitors(bg)end,set_monitors=function(self,b4)self:set_screens(b4)end,clear=function(self)self.buffer:clear()end,draw=function(self)local bh=self.screens;local bi=self.buffer;for bj,bk in next,bh do local bl,bm=bk.getCursorPos()local aZ,a_=bk.getSize()for a5=1,a_ do local bn,bo,bp={},{},{}for a4=1,aZ do local bf=bi:get_pixel(a4,a5)bn[#bn+1]=bf.char;bo[#bo+1]=k.colors[bf.foreground]bp[#bp+1]=k.colors[bf.background]end;bk.setCursorPos(1,a5)bk.blit(table.concat(bn),table.concat(bo),table.concat(bp))end;bk.setCursorPos(bl,bm)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a4,a5,aV)self.buffer:set_pixel(a4,a5," ",aV,aV)end,write=function(self,a4,a5,bq,b8,b9)for br=0,#bq-1 do local N=bq:sub(br+1,br+1)self.buffer:set_pixel(a4+br,a5,N,b8,b9)end end,blit=function(self,a4,a5,bq,b8,b9)local bs=""local bt=""b8=b8 or""b9=b9 or""for br=0,#bq-1 do local N=bq:sub(br+1,br+1)local bu=b8:sub(br+1,br+1)bu=#bu>0 and bu or bs;local bv=b9:sub(br+1,br+1)bv=#bv>0 and bv or bt;self.buffer:set_pixel(a4+br,a5,N,k.paint[bu],k.paint[bv])bs=bu;bt=bv end end,rectangle=function(self,a4,a5,aZ,a_,aV,bw,bx)if bw then for br=0,aZ-1 do for by=0,a_-1 do if a_==1 then if aZ==1 then self.buffer:set_pixel(a4+br,a5+by,e.MIDDLE,bx,aV,true)else if br==0 then self.buffer:set_pixel(a4+br,a5+by,e.MIDDLERIGHT,bx,aV,true)elseif br==aZ-1 then self.buffer:set_pixel(a4+br,a5+by,e.MIDDLELEFT,bx,aV,true)else self.buffer:set_pixel(a4+br,a5+by,e.MIDDLE,bx,aV,true)end end elseif by==0 then if br==0 then self.buffer:set_pixel(a4+br,a5+by,e.TOPLEFT,bx,aV)elseif br==aZ-1 then self.buffer:set_pixel(a4+br,a5+by,e.TOPRIGHT,bx,aV,true)else self.buffer:set_pixel(a4+br,a5+by,e.TOP,bx,aV)end elseif by==a_-1 then if br==0 then self.buffer:set_pixel(a4+br,a5+by,e.BOTTOMLEFT,bx,aV,true)elseif br==aZ-1 then self.buffer:set_pixel(a4+br,a5+by,e.BOTTOMRIGHT,bx,aV,true)else self.buffer:set_pixel(a4+br,a5+by,e.BOTTOM,bx,aV,true)end elseif br==0 then self.buffer:set_pixel(a4+br,a5+by,e.LEFT,bx,aV)elseif br==aZ-1 then self.buffer:set_pixel(a4+br,a5+by,e.RIGHT,bx,aV,true)else self.buffer:set_pixel(a4+br,a5+by," ",aV,aV)end end end else for br=0,aZ-1 do for by=0,a_-1 do self.buffer:set_pixel(a4+br,a5+by," ",aV,aV)end end end end,nfp_image=function(self,a4,a5,bz,bA,bB,bC,bD)bA,bB=bA or 1,bB or 1;local br,by=1,1;for x=1,#bz do if bD and by>=bD+bB then break end;local N=bz:sub(x,x)if N=="\n"then br,by=1,by+1 else if by>=bB and br>=bA and(not bC or br<bC+bA)then local aV=k.paint[N]if aV then self.buffer:set_pixel(a4+br-bA,a5+by-bB," ",aV,aV)end end;br=br+1 end end end,nft_image=function(self,a4,a5,bz,bA,bB,bC,bD)bA,bB=bA or 1,bB or 1;local br,by,bE,bF,bG,bH=1,1;for x=1,#bz do if bD and by>=bD+bB then break end;local N=bz:sub(x,x)if bE then bG=k.paint[N]bE=false elseif bF then bH=k.paint[N]bF=false elseif N==f.BG then bE=true elseif N==f.FG then bF=true elseif N=="\n"then br,by,bE,bF,bG,bH=1,by+1 else if by>=bB and br>=bA and(not bC or br<bC+bA)then self.buffer:set_pixel(a4+br-bA,a5+by-bB,N,bH,bG)end;br=br+1 end end end,frame_to_nft=function(self,a4,a5,aZ,a_)local f={}for by=1,a_ do local bI={}local bt,bs;for br=1,aZ do local bf=self.frame.pixels[a4]and self.frame.pixels[a4+br-1][a5+by-1]or{char=" ",foreground=self.frame.background,background=self.frame.background}if bf.background~=bt then bI[#bI+1]=f.BG;bI[#bI+1]=k.colors[bf.background]bt=bf.background end;if bf.foreground~=bs then bI[#bI+1]=f.FG;bI[#bI+1]=k.colors[bf.foreground]bs=bf.foreground end;bI[#bI+1]=bf.char end;f[#f+1]=table.concat(bI)end;return table.concat(f,"\n")end,line=function(self,bJ,bK,bL,bM,aV)local function bN(bJ,bK,bL,bM)local bO=1;if bJ>bL then bO=-1 end;local bP=bL-bJ;local bQ=bM-bK;local bR=1;if bQ<0 then bR=-1;bQ=-bQ end;local bS=2*bQ-bP;local a5=bK;for a4=bJ,bL,bO do self:point(a4,a5,aV)if bS>0 then a5=a5+bR;bS=bS-2*bP end;bS=bS+2*bQ end end;local function bT(bJ,bK,bL,bM)local bO=1;if bK>bM then bO=-1 end;local bP=bL-bJ;local bQ=bM-bK;local bU=1;if bP<0 then bU=-1;bP=-bP end;local bS=2*bP-bQ;local a4=bJ;for a5=bK,bM,bO do self:point(a4,a5,aV)if bS>0 then a4=a4+bU;bS=bS-2*bQ end;bS=bS+2*bP end end;if math.abs(bM-bK)<math.abs(bL-bJ)then if bJ>bL then bN(bL,bM,bJ,bK)else bN(bJ,bK,bL,bM)end else if bK>bM then bT(bL,bM,bJ,bK)else bT(bJ,bK,bL,bM)end end end,circle=function(self,bV,bW,bX,aV)local bY=bX*bX;self:point(bV,bW+bX,aV)self:point(bV,bW-bX,aV)self:point(bV+bX,bW,aV)self:point(bV-bX,bW,aV)local a4=1;local a5=math.floor(math.sqrt(bY-1)+0.5)while a4<a5 do self:point(bV+a4,bW+a5,aV)self:point(bV+a4,bW-a5,aV)self:point(bV-a4,bW+a5,aV)self:point(bV-a4,bW-a5,aV)self:point(bV+a5,bW+a4,aV)self:point(bV+a5,bW-a4,aV)self:point(bV-a5,bW+a4,aV)self:point(bV-a5,bW-a4,aV)a4=a4+1;a5=math.floor(math.sqrt(bY-a4*a4)+0.5)end;if a4==a5 then self:point(bV+a4,bW+a5,aV)self:point(bV+a4,bW-a5,aV)self:point(bV-a4,bW+a5,aV)self:point(bV-a4,bW-a5,aV)end end}local bZ={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,b_,d)if self.pressed_keys[d]then if b_ then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,c0,...)local keys={...}if not(#keys>0)then return false end;for c1,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if c0 then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for c1,d in next,keys do self:remove_key(d)end end,manage_event=function(self,formatted_event)if formatted_event.name==b.KEY then self:add_key(formatted_event.key)elseif formatted_event.name==b.KEYUP then self:remove_key(formatted_event.key)end end}local c2={}c2={Clock={new=function(c3)local c4={enabled=true,oneshot=false,clock=os.clock(),interval=c3,callbacks={onClock=function()end}}setmetatable(c4,c2.Clock)return c4 end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,formatted_event)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a4,a5,bq,b8,b9)local c5={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_LEFT,text=bq,pos=i.Vector2.new(a4,a5),colors={foreground=b8,background=b9},callbacks={onDraw=function()end}}setmetatable(c5,c2.Label)return c5 end,draw=function(self,c6)if self.hidden then return end;self.callbacks.onDraw(self,c6)local O=h.split_by_char(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,c7 in next,O do bd:write(self.pos.x,self.pos.y+d-1,c7,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then for d,c7 in next,O do bd:write(self.pos.x-#c7/2+1,self.pos.y+d-1,c7,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_RIGHT then for d,c7 in next,O do bd:write(self.pos.x-#c7+1,self.pos.y+d-1,c7,self.colors.foreground,self.colors.background)end end end},Button={new=function(a4,a5,aZ,a_,bq,b8,c8,c9)local ca={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bq,pos=i.Vector2.new(a4,a5),size=i.Vector2.new(aZ,a_),border=false,timed={enabled=false,clock=c2.Clock.new(0.5)},colors={foreground=b8,active_background=c8,unactive_background=c9,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}ca.timed.clock.binded_button=ca;ca.timed.clock.oneshot=true;ca.timed.clock:stop()ca.timed.clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)self.binded_button.callbacks.onTimeout(self.binded_button,formatted_event)end)setmetatable(ca,c2.Button)return ca end,draw=function(self,c6)if self.hidden then return end;self.callbacks.onDraw(self,c6)if self.active then bd:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background,self.border,self.colors.border_color)else bd:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background,self.border,self.colors.border_color)end;local O=h.split_by_char(self.text,"\n")local cb=(self.size.y-#O)/2+self.pos.y;for by=0,#O-1 do local c7=O[by+1]local cc;if self.text_alignment==b.ALIGN_LEFT then cc=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then cc=(self.size.x-#c7)/2+self.pos.x elseif self.text_alignment==b.ALIGN_RIGHT then cc=self.pos.x+self.size.x-#c7 end;bd:write(cc,cb+by,c7,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if l.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(formatted_event)return true else self.callbacks.onFailedPress(self,formatted_event)end elseif bZ:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(formatted_event)end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self,formatted_event)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self.active=not self.active;self.callbacks.onPress(self,formatted_event)end end},Progressbar={new=function(a4,a5,aZ,a_,aR,al,am,b8,cd,ce)local cf={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=i.Vector2.new(a4,a5),size=i.Vector2.new(aZ,a_),value={max=am,min=al,current=aR,draw_percentage=true,percentage_precision=2},colors={foreground=b8,filled_background=cd,unfilled_background=ce},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(cf,c2.Progressbar)return cf end,draw=function(self,c6)if self.hidden then return end;self.callbacks.onDraw(self,c6)local cg=i.map(self.value.current,self.value.min,self.value.max,0,1,true)local ch=self.size.x*cg;bd:rectangle(self.pos.x,self.pos.y,ch,self.size.y,self.colors.filled_background)bd:rectangle(self.pos.x+ch,self.pos.y,self.size.x-ch,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local ci=table.concat({h.format_number(cg*100,self.value.percentage_precision),"%"})local cj=(self.size.x-#ci)/2+self.pos.x;local cb=(self.size.y-1)/2+self.pos.y;bd:write(cj,cb,ci,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if l.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,ae)local ck=i.constrain(ae,self.value.min,self.value.max)self.value.current=ck end},Memo={new=function(a4,a5,aZ,a_,b8,b9)local cl={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=i.Vector2.new(a4,a5),size=i.Vector2.new(aZ,a_),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=c2.Clock.new(0.5),pos=i.Vector2.new(1,1)},limits=i.Vector2.new(0,0),whitelist={},blacklist={},border=false,colors={foreground=b8,background=b9,cursor=colors.white,cursor_text=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end,onPaste=function()end}}cl.cursor.blink.binded_cursor=cl.cursor;cl.cursor.blink:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(cl,c2.Memo)return cl end,draw=function(self,c6)if self.hidden then return end;self.callbacks.onDraw(self,c6)bd:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)local cm=self.pos.x;local cn=self.pos.y;local co=self.size.x;local cp=self.size.y;if self.border then cm=cm+1;cn=cn+1;co=co-2;cp=cp-2 end;local cq=self.cursor.pos.x-self.first_visible_char;local cr=self.cursor.pos.y-self.first_visible_line;for a5=1,cp do local cs=a5+self.first_visible_line-1;local ct=self.rich_text[cs]or{}local c7=self.lines[cs]or""local cu=self.first_visible_char;local cv=self.first_visible_char+co-1;local cw=c7:sub(cu,cv)local cx=cn+a5-1;if ct.background then if type(ct.background)=="string"then local bG=ct.background:sub(cu,cv)bG=#bG>0 and bG or ct.background:sub(#ct.background)bd:blit(cm,cx,string.rep(" ",co),nil,bG)else bd:rectangle(cm,cx,co,1,ct.background)end end;if ct.foreground then if type(ct.foreground)=="string"then local bH=ct.foreground:sub(cu,cv)bH=#bH>0 and bH or ct.foreground:sub(#ct.foreground)bd:blit(cm,cx,cw,bH)else bd:write(cm,cx,cw,ct.foreground)end else bd:write(cm,cx,cw,self.colors.foreground)end end;if self.cursor.visible and cq>=0 and cq<co and cr>=0 and cr<cp then bd:write(cq+cm,cr+cn,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if self.hidden then return false end;if not self.editable then return false end;if formatted_event.name==b.TOUCH then if l.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)self:focus(true,formatted_event)local a4=formatted_event.x-self.pos.x;local a5=formatted_event.y-self.pos.y;if self.border then if l.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x+1,self.pos.y+1,self.size.x-2,self.size.y-2)then self:set_cursor(a4+self.first_visible_char-1,a5+self.first_visible_line-1)end else self:set_cursor(a4+self.first_visible_char,a5+self.first_visible_line)end;return true else self.callbacks.onFailedPress(self,formatted_event)self:focus(false,formatted_event)return false end elseif formatted_event.name==b.DELETED then self:focus(false,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.PASTE then if self.callbacks.onPaste(self,formatted_event)then return true end;self:write(formatted_event.paste)return true elseif formatted_event.name==b.CHAR then if self.callbacks.onChar(self,formatted_event)then return true end;self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if self.callbacks.onKey(self,formatted_event)then return true end;if bZ:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cy=self.lines[self.cursor.pos.y-1]local cz=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bl=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(table.concat({cz,"\n",cy}))self:set_cursor(bl,self.cursor.pos.y-1)end;return true elseif bZ:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cz=self.lines[self.cursor.pos.y]local cA=self.lines[self.cursor.pos.y+1]if not cA then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bl=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(table.concat({cA,"\n",cz}))self:set_cursor(bl,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif formatted_event.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif formatted_event.key==b.KEY_RIGHT then local c7=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#c7+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local cB=self.lines[self.cursor.pos.y-1]self:set_cursor(#cB+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_BACKSPACE then local c7=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local cC=#self.lines[self.cursor.pos.y-1]+1;local cD=self.cursor.pos.y-1;self:set_cursor(cC,cD)self:write(c7)self:set_cursor(cC,cD)end else local aA=table.concat({c7:sub(1,self.cursor.pos.x-2),c7:sub(self.cursor.pos.x)})self.lines[self.cursor.pos.y]=aA;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,aA,{aA})end;return true elseif formatted_event.key==b.KEY_DELETE then local c7=self.lines[self.cursor.pos.y]local cE=c7:sub(self.cursor.pos.x)if#cE>0 then local aA=table.concat({c7:sub(1,self.cursor.pos.x-1),c7:sub(self.cursor.pos.x+1)})self.lines[self.cursor.pos.y]=aA;self.callbacks.onWrite(self,aA,{aA})else local cA=self.lines[self.cursor.pos.y+1]if cA then local cC=self.cursor.pos.x;local cD=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(cA)self:set_cursor(cC,cD)end end;return true elseif formatted_event.key==b.KEY_ENTER then local cF=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cG=cF:gsub("(%s*).*","%1")self:write(table.concat({"\n",cG}))return true elseif formatted_event.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_HOME then local cF=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cG=cF:gsub("(%s*).*","%1")self:set_cursor(#cG+1,self.cursor.pos.y)return true elseif bZ:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local cH=self.lines[self.cursor.pos.y]local cG=cH:gsub("^(%s*).*$","%1")local cI=math.min(#self.tab_spaces,#cG)local aA=cH:sub(cI+1)self.lines[self.cursor.pos.y]=aA;self:set_cursor(self.cursor.pos.x-cI,self.cursor.pos.y)self.callbacks.onWrite(self,aA,{aA})return true elseif formatted_event.key==b.KEY_TAB then local bl=self.cursor.pos.x;local cJ=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cK=#self.lines[self.cursor.pos.y]-cJ;self:set_cursor(bl+cK,self.cursor.pos.y)return true end elseif formatted_event.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,formatted_event)then return true end;self.first_visible_line=i.constrain(self.first_visible_line+formatted_event.direction,1,#self.lines)return true end end end,focus=function(self,cL,formatted_event)if cL then self.focussed=true;self.callbacks.onFocus(self,formatted_event)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)end end,set_cursor=function(self,cC,cD,cM)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then cD=i.constrain(cD,1,self.limits.y)end;if cM then for a5=#self.lines+1,cD do if not self.lines[a5]then self.lines[a5]=""end end else cD=i.constrain(cD,1,#self.lines)end;cC=i.constrain(cC,1,#self.lines[cD]+1)local cq=cC-self.first_visible_char;local cr=cD-self.first_visible_line;local co=self.size.x;local cp=self.size.y;if self.border then co=co-2;cp=cp-2 end;if cq>=co then self.first_visible_char=self.first_visible_char+cq-co+1 elseif cq<0 then self.first_visible_char=self.first_visible_char+cq end;if cr>=cp then self.first_visible_line=self.first_visible_line+cr-cp+1 elseif cr<0 then self.first_visible_line=self.first_visible_line+cr end;self.callbacks.onCursorChange(self,cC,cD)self.cursor.pos=i.Vector2.new(cC,cD)end,write=function(self,...)local bq=table.concat({...})local O=h.split_by_char(bq,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local J=table.concat({"[^",h.escape_magic_characters(table.concat(self.whitelist)),"]"})for d,c7 in next,O do O[d]=c7:gsub(J,"")end elseif#self.blacklist>0 then local J=table.concat({"[",h.escape_magic_characters(table.concat(self.blacklist)),"]"})for d,c7 in next,O do O[d]=c7:gsub(J,"")end end;if self.limits.y>0 then for a5=1,#self.lines+#O-1-self.limits.y do table.remove(O)end;if#O==0 then return end end;if#O>1 then for cN,c7 in next,O do if cN==1 then local cO=self.lines[self.cursor.pos.y]local cP=cO:sub(1,self.cursor.pos.x-1)local cE=cO:sub(self.cursor.pos.x)local cQ=O[#O]if self.limits.x>0 then c7=c7:sub(1,self.limits.x-#cP)cQ=cQ:sub(1,self.limits.x-#cE)end;self.lines[self.cursor.pos.y]=table.concat({cP,c7})table.insert(self.lines,self.cursor.pos.y+1,table.concat({cQ,cE}))self:set_cursor(#cQ+1,self.cursor.pos.y+1)elseif cN==#O then break else if self.limits.x>0 then c7=c7:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,c7)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cO=self.lines[self.cursor.pos.y]local cP=cO:sub(1,self.cursor.pos.x-1)local cE=cO:sub(self.cursor.pos.x)if self.limits.x>0 then O[1]=O[1]:sub(1,self.limits.x-(#cP+#cE))end;self.lines[self.cursor.pos.y]=table.concat({cP,O[1],cE})self:set_cursor(self.cursor.pos.x+#O[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bq,O)end,print=function(self,...)local bq=table.concat({...})local aA=#self.lines>0 and"\n"or""self:write(table.concat({aA,bq}))end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=i.Vector2.new(1,1)end},Window={new=function(a4,a5,aZ,a_,b9,cR)local cS={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=i.Vector2.new(a4,a5),size=i.Vector2.new(aZ,a_),can_drag=false,border=false,dragging={enabled=true,from=i.Vector2.new(1,1)},resizing={enabled=true,corner=i.Vector2.new(-1,1),enabled_directions={[-1]={[1]=true,[0]=true,[-1]=true},[0]={[1]=true,[0]=false,[-1]=true},[1]={[1]=true,[0]=true,[-1]=true}},pinned={x=false,y=false},min_size=i.Vector2.new(aZ,a_),max_size=i.Vector2.new(aZ,a_)*2},shadow={enabled=cR,offset=i.Vector2.new(1,1)},elements={},colors={background=b9,shadow=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onDrag=function()end,onResize=function()end}}setmetatable(cS,c2.Window)return cS end,draw=function(self,c6)if self.hidden then return end;self.callbacks.onDraw(self,c6)if self.shadow.enabled then bd:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;bd:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)self:draw_elements(c6)end,event=function(self,formatted_event)if self.hidden then return false end;local cT=self:event_elements(formatted_event)if not cT then if formatted_event.name==b.TOUCH then if l.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.can_drag=false;if self.resizing.enabled then local cU=true;local cV=formatted_event.y==self.pos.y+self.size.y-1;local cW=formatted_event.y==self.pos.y;if formatted_event.x==self.pos.x+self.size.x-1 then if self.resizing.enabled_directions[1][1]and cV then self.resizing.corner=self.pos.ONE:duplicate()self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][-1]and cW then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][0]and not(cV or cW)then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cU=false end elseif formatted_event.x==self.pos.x then if self.resizing.enabled_directions[-1][1]and cV then self.resizing.corner=self.pos.DOWN+self.pos.LEFT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][-1]and cW then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][0]and not(cV or cW)then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cU=false end elseif self.resizing.enabled_directions[0][1]and cV then self.resizing.corner=self.pos.DOWN+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[0][-1]and cW then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false else cU=false end;if not cU then self.resizing.corner=self.pos.ZERO:duplicate()self.dragging.from=i.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end else self.dragging.from=i.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end;self.focussed=true;self.callbacks.onPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.callbacks.onFailedPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG and self.focussed then if self.can_drag then self:drag(formatted_event.x,formatted_event.y)else self:resize(formatted_event.x,formatted_event.y,self.resizing.pinned.x,self.resizing.pinned.y)end;return true elseif formatted_event.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,formatted_event)end else self.focussed=false;self.callbacks.onFocus(self,formatted_event)end;return cT end,drag=function(self,a4,a5)if self.dragging.enabled then local cX=self.pos:duplicate()self.pos=self.pos+i.Vector2.new(a4-self.dragging.from.x,a5-self.dragging.from.y)self.dragging.from=i.Vector2.new(a4,a5)self.callbacks.onDrag(self,cX.x,cX.y)end end,resize=function(self,a4,a5,cY,cZ)if self.resizing.enabled and self.resizing.corner~=self.pos.ZERO then local function c_()self.size.x=i.constrain(self.size.x,self.resizing.min_size.x,self.resizing.max_size.x)self.size.y=i.constrain(self.size.y,self.resizing.min_size.y,self.resizing.max_size.y)end;local d0=i.Vector2.new(a4,a5)local cX=self.pos:duplicate()local d1=self.size:duplicate()if self.resizing.corner==self.pos.ONE then self.size.x=d0.x-self.pos.x+1;self.size.y=d0.y-self.pos.y+1;c_()elseif self.resizing.corner==self.pos.ONE*-1 then self.size.x=self.size.x+self.pos.x-d0.x;self.size.y=self.size.y+self.pos.y-d0.y;c_()local d2=d1-self.size;self.pos=self.pos+d2 elseif self.resizing.corner==self.pos.UP+self.pos.RIGHT then self.size.x=d0.x-self.pos.x+1;self.size.y=self.size.y+self.pos.y-d0.y;c_()local d3=d1.y-self.size.y;self.pos.y=self.pos.y+d3 elseif self.resizing.corner==self.pos.DOWN+self.pos.LEFT then self.size.x=self.size.x+self.pos.x-d0.x;self.size.y=d0.y-self.pos.y+1;c_()local cK=d1.x-self.size.x;self.pos.x=self.pos.x+cK end;if cY then self.size.x=d1.x;self.pos.x=cX.x end;if cZ then self.size.y=d1.y;self.pos.y=cX.y end;self.callbacks.onResize(self,cX.x,cX.y,d1.x,d1.y)end end,set_elements=function(self,d4)self.elements={}for d,d5 in next,d4 do table.insert(self.elements,d5)end end,draw_elements=function(self,c6)for d=#self.elements,1,-1 do local d5=self.elements[d]if d5.draw then d5.pos=d5.pos+self.pos-self.pos.ONE;d5:draw(c6)d5.pos=d5.pos-self.pos+self.pos.ONE end end end,event_elements=function(self,formatted_event)local d6=formatted_event;if d6.name==b.TOUCH then d6=l.format_event_table(d6.raw)d6.x,d6.y=d6.x-self.pos.x+1,d6.y-self.pos.y+1 end;local cT=false;for d,d5 in next,self.elements do if d5.event then local d7=d5:event(d6)cT=cT or d7;if d7 then d6={name=b.DELETED}end end end;return cT end}}c2.Clock.__index=c2.Clock;c2.Label.__index=c2.Label;c2.Button.__index=c2.Button;c2.Progressbar.__index=c2.Progressbar;c2.Memo.__index=c2.Memo;c2.Window.__index=c2.Window;local d8={}d8={new=function(d9)local da={draw_priority=b.LOW_PRIORITY,enabled=true,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=c2.Clock.new(d9 or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}da.broadcast_clock.WSS=da;da.broadcast_clock:set_callback(b.ONCLOCK,function(self,formatted_event)rednet.broadcast(bd.frame,self.WSS.protocol)end)setmetatable(da,d8)return da end,draw=function(self,c6)if not self.enabled then return false end;self.callbacks.onDraw(self,c6)if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then bd.buffer.background=self.buffer.background;bd.buffer.pixels=self.buffer.pixels end end end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local db=false;if formatted_event.name==b.REDNET then if formatted_event.protocol==self.protocol then local b2=formatted_event.message;if self.mode==b.HOST then if b2==b.CONNECTION_REQUEST then rednet.send(formatted_event.from,b.OK,self.protocol)self.users[formatted_event.from]=true;db=true;self.callbacks.onConnect(self,formatted_event)elseif b2==b.DISCONNECTED then self.users[formatted_event.from]=nil;db=true;self.callbacks.onDisconnect(self,formatted_event)elseif self.events_whitelist[b2.name or"nil"]and self.users[formatted_event.from]and type(b2)=="table"then if b2.raw then os.queueEvent(table.unpack(b2.raw))end;db=true end elseif self.mode==b.USER then if formatted_event.from==self.host_id then if b2==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;db=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(b2)=="table"then self.buffer=b2;db=true end end end end end;if self.mode==b.USER then if formatted_event.name==b.TOUCH then db=true end;if self.events_whitelist[tostring(formatted_event.name)]then rednet.send(self.host_id,formatted_event,self.protocol)db=true end elseif self.mode==b.HOST then self.broadcast_clock:event(formatted_event)end;return db end,use_side=function(self,dc)self.side=dc end,connect=function(self,dd,de,df)de=de or 2;df=df or 10;rednet.open(self.side)self.host_id=dd;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local dg=0;while true do dg=dg+1;local dh={rednet.receive(self.protocol,de)}if dh[1]==dd and dh[2]==b.OK and dh[3]==self.protocol then return b.OK elseif dg>=df then local di=string.format("Connection timed out on attempt %d after %d ms",dg,de*1000)if#dh>0 then di=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",dg,de*1000)end;d8:close()error(di,2)end end;self.callbacks.onConnect(self,dd)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}d8.__index=d8;local dj={}dj={new=function(dk)local dl={enabled=true,computer_whitelist={},side=b.NONE,mode=b.ALL,password=dk or b.NONE,protocol="YAGUI-"..a.ver.."_FT",save_dir="/FT",callbacks={onEvent=function()end,onConnect=function()end,onSend=function()end,onReceive=function()end}}setmetatable(dl,dj)return dl end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;if formatted_event.name==b.REDNET and formatted_event.protocol==self.protocol then if self.mode==b.ALL or self.mode==b.RECEIVE then local dd=formatted_event.from;if self.computer_whitelist[dd]or self.callbacks.onConnect(self,formatted_event)then local b2=formatted_event.message;if type(b2)=="table"and b2.name and b2.content then if b2.psw==self.password then local b3=fs.getName(tostring(b2.name))local X=fs.combine(self.save_dir,b3)if fs.exists(X)then rednet.send(dd,b.NO,self.protocol)else local dm=tostring(b2.content)if self.callbacks.onReceive(self,formatted_event,dd,b3,X,dm)then return true end;local dn=fs.open(X,"w")if dn then dn.write(dm)dn.close()rednet.send(dd,b.OK,self.protocol)else rednet.send(dd,b.ERROR,self.protocol)end end else rednet.send(dd,b.NO,self.protocol)end else rednet.send(dd,b.ERROR,self.protocol)end else rednet.send(dd,b.NO,self.protocol)end end end end,send=function(self,dp,dq,dr,ds)if self.mode==b.ALL or self.mode==b.SEND then ds=ds or fs.getName(dr)dq=dq or b.NONE;local dn=fs.open(dr,"r")local dm=dn.readAll()dn.close()local b2={psw=dq,name=ds,content=dm}if self.callbacks.onSend(self,formatted_event,b2)then return true end;rednet.send(dp,b2,self.protocol)end end,open=function(self,dc)self.side=dc;rednet.open(dc)end,close=function(self)if rednet.isOpen()then rednet.close(self.side)end end}dj.__index=dj;local dt={}dt={new=function(du,dv)local dw={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=du,EPS_target=dv},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=c2.Clock.new(1/du),stats_clock=c2.Clock.new(1),FPS_label=c2.Label.new(1,1,"1 FPS",colors.white),EPS_label=c2.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=i.Vector2.new(1,1),elements=nil,show=function(self,dx)self.elements.FPS_label.hidden=not dx;self.elements.EPS_label.hidden=not dx end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+i.Vector2.DOWN end,Frames=0,Events=0,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}dw.elements.loop.stats_clock.stats=dw.stats;dw.stats.elements=dw.elements.loop;dw.elements.loop.stats_clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.stats:update_pos()self.stats.elements.FPS_label.text=table.concat({self.stats.FPS," FPS"})self.stats.elements.EPS_label.text=table.concat({self.stats.EPS," EPS"})self.stats.FPS,self.stats.EPS=self.stats.Frames,self.stats.Events;self.stats.Frames,self.stats.Events=0,0 end)dw.stats:show(false)dw.elements.loop.clock.Loop=dw;dw.elements.loop.clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.Loop.callbacks.onClock(self.Loop,formatted_event)self.Loop:draw_elements(1/self.Loop.stats.FPS)self.interval=1/self.Loop.options.FPS_target end)setmetatable(dw,dt)return dw end,set_monitors=function(self,b4)self.monitors=n.get_monitors(b4)end,set_elements=function(self,d4)self.elements.high_priority={}self.elements.low_priority={}for d,ae in next,d4 do if ae.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,ae)else table.insert(self.elements.low_priority,ae)end end end,draw_elements=function(self,c6)local function dy(ar)for d=#ar,1,-1 do local d5=ar[d]if d5.draw then d5:draw(c6)end end end;self.callbacks.onDraw(self,c6)local dz=bd.screens;bd.screens=self.monitors;dy(self.elements.low_priority)dy(self.elements.high_priority)for d,d5 in next,self.elements.loop do if d5.draw then d5:draw(c6)end end;bd:draw()bd.screens=dz;self.stats.Frames=self.stats.Frames+1 end,event_elements=function(self,formatted_event)local function b0(ar)for d,d5 in next,ar do if d5.event then if d5:event(formatted_event)then formatted_event={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,formatted_event)then formatted_event={name=b.DELETED}end;if self.options.stop_on_terminate and formatted_event.name==b.TERMINATE then self:stop()return end;if formatted_event.name==b.TOUCH then local dA=false;for dB,b7 in next,self.monitors do if formatted_event.from==dB then dA=true;break end end;if not dA then formatted_event={name=b.DELETED}end end;b0(self.elements.loop)local dC={}for d,d5 in next,self.elements.high_priority do if d5.event then local dD=d5:event(formatted_event)if dD then formatted_event={name=b.DELETED}if self.elements.high_priority~=d5 then table.insert(dC,{element=d5,key=d})end end end end;if#dC>0 then for d,ae in next,dC do table.insert(self.elements.high_priority,1,ae.element)table.remove(self.elements.high_priority,ae.key+#dC)end end;b0(self.elements.low_priority)self.stats.Events=self.stats.Events+1 end,start=function(self)self.enabled=true;bZ:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local dE=os.startTimer(1/self.options.EPS_target)local dF;if self.options.raw_mode then dF={os.pullEventRaw()}else dF={os.pullEvent()}end;local formatted_event=l.format_event_table(dF)bZ:manage_event(formatted_event)self:event_elements(formatted_event)os.cancelTimer(dE)end;bZ:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}dt.__index=dt;local dG={__call=function(self,...)return self.new(...)end}dG.__index=dG;local dH={__call=function(self,...)return self.new(...)end,set_callback=function(self,p,q)if p==b.ONSTART then self.callbacks.onStart=q elseif p==b.ONSTOP then self.callbacks.onStop=q elseif p==b.ONDRAW then self.callbacks.onDraw=q elseif p==b.ONPRESS then self.callbacks.onPress=q elseif p==b.ONFAILEDPRESS then self.callbacks.onFailedPress=q elseif p==b.ONTIMEOUT then self.callbacks.onTimeout=q elseif p==b.ONCLOCK then self.callbacks.onClock=q elseif p==b.ONEVENT then self.callbacks.onEvent=q elseif p==b.ONFOCUS then self.callbacks.onFocus=q elseif p==b.ONKEY then self.callbacks.onKey=q elseif p==b.ONCHAR then self.callbacks.onChar=q elseif p==b.ONMOUSESCROLL then self.callbacks.onMouseScroll=q elseif p==b.ONCURSORCHANGE then self.callbacks.onCursorChange=q elseif p==b.ONWRITE then self.callbacks.onWrite=q elseif p==b.ONCONNECT then self.callbacks.onConnect=q elseif p==b.ONDISCONNECT then self.callbacks.onDisconnect=q elseif p==b.ONSEND then self.callbacks.onSend=q elseif p==b.ONRECEIVE then self.callbacks.onReceive=q elseif p==b.ONDRAG then self.callbacks.onDrag=q elseif p==b.ONRESIZE then self.callbacks.onResize=q elseif p==b.ONPASTE then self.callbacks.onPaste=q end end}dH.__index=dH;setmetatable(i.Vector2,dG)setmetatable(i.Vector3,dG)setmetatable(d8,dH)setmetatable(dj,dH)for d,d5 in next,c2 do setmetatable(d5,dH)end;setmetatable(dt,dH)local dI={...}if dI[1]=="help"then local O={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,c7 in next,O do n.better_print(term,c7.foreground,c7.background,c7.text)end elseif dI[1]=="info"then n.better_print(term,colors.red,nil,"Library Version: ",a.ver)n.better_print(term,colors.yellow,nil,"Library Author: ",a.author)n.better_print(term,colors.green,nil,"Library Website: ",a.website)n.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif dI[1]=="ver"then n.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif dI[1]=="copyright"then local dJ={colors.red,colors.yellow,colors.green}local dK=h.split(a.copyright,"\n\n")for d,dL in next,dK do n.better_print(term,dJ[d],nil,dL)if d<#dK then read("")end end elseif dI[1]=="setup"then if shell then local dM="YAGUI_PATH"local X="/"..shell.getRunningProgram()m.set(dM,X)n.better_print(term,colors.green,nil,"Lib path was set to \"",m.get(dM),"\".")else n.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif dI[1]=="create"then if dI[2]then local X=shell.resolve(dI[2])if h.get_extension(X)~="lua"then X=X..".lua"end;if fs.exists(X)then n.better_print(term,colors.red,nil,"PATH: \"/",X,"\" already exists, please use another path or delete it.")else local dn=fs.open(X,"w")dn.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")dn.close()n.better_print(term,colors.green,nil,"New project was created at \"/",X,"\".")end else n.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif dI[1]then n.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",dI[1],"\"")n.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local dN={info=a,generic_utils=g,string_utils=h,math_utils=i,table_utils=j,color_utils=k,event_utils=l,setting_utils=m,monitor_utils=n,screen_buffer=bd,input=bZ,WSS=d8,wireless_screen_share=d8,FT=dj,file_transfer=dj,gui_elements=c2,Loop=dt}for d,ae in next,b do dN[d]=ae end;return dN