--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.29.2",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",TERMRESIZE="term_resize",DELETED="DELETED",NONE="NONE",ALL="ALL",SEND="SEND",RECEIVE="RECEIVE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,ONSEND=17,ONRECEIVE=18,ONDRAG=19,ONRESIZE=20,ONPASTE=21,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2,ALIGN_RIGHT=3}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={}local f={}local g={}local h={}local i={}local j={}local k={}local l={}e={set_callback=function(m,n,o)m:set_callback(n,o)end,get_computer_type=function()local p=b.COMPUTER;if turtle then p=b.TURTLE elseif pocket then p=b.POCKET end;return p,term.isColor()end,expect=function(q,...)local r={...}local s="[/%.,]"q=q or"unknown"q=tostring(q)local t=false;local u;for v=1,#r,2 do local w=tostring(r[v])local x=true;local y;for z,A in next,f.split(w,s)do local B=r[v+1]local C=type(B)if C~=A then y=C else x=false;break end end;if x then local D=w:gsub(s,", ")u=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",q,(v+1)/2,D,y)t=true;break end end;if t then error(u,3)return false end;return true end}f={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(E,F)F=F or""local G=""for d=1,#E do local H=E[d]G=G..tostring(H)..(d<#E and F or"")end;return G end,split=function(G,F)if not string.find(G,F)then return{G}end;local I={}local J="(.-)"..F.."()"local K;for L,M in string.gfind(G,J)do table.insert(I,L)K=M end;table.insert(I,string.sub(G,K))return I end,split_by_char=function(G,N)local O={}local P=1;for v=1,#G do if G:sub(v,v)==N then table.insert(O,v==P and""or G:sub(P,v-1))P=v+1 end end;table.insert(O,G:sub(P,#G))return O end,compare_versions=function(Q,R)local S=f.split(Q,".")local T=f.split(R,".")local U=#S;local V=#T;for v=1,math.min(U,V)do if tonumber(S[v])>tonumber(T[v])then return 1 elseif tonumber(S[v])<tonumber(T[v])then return-1 end end;if U>V then return 1 elseif U<V then return-1 end;return 0 end,escape_magic_characters=function(G)for d,W in next,f.magic_characters do G=G:gsub("[%"..W.."]",'%%%'..W)end;return G end,get_extension=function(X)local Y,Z=X:gsub(".*%.","")if Z>0 then return Y end;return""end,format_number=function(_,a0)_=tostring(_)a0=a0 or 0;local a1=_:gsub("(.*)%..*","%1")if a0<=0 then return a1 end;local a2=#a1+1;local a3=_:sub(a2+1,a2+a0)a3=a3:reverse():gsub("0*(.*)","%1"):reverse()if#a3>0 then return a1 .."."..a3 end;return a1 end,trim=function(G)return G:gsub("^%s*(.*)%s*$","%1")end}g={Vector2={new=function(a4,a5)local a6={x=a4 or 0,y=a5 or 0}setmetatable(a6,g.Vector2)return a6 end,duplicate=function(self)return g.Vector2.new(self.x,self.y)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a7)return self.x*a7.x+self.y*a7.y end,cross=function(self,a7)return self.x*a7.y-self.y*a7.x end,rotate=function(self,a8)local a9=math.cos(a8)local aa=math.sin(a8)return g.Vector2.new(a9*self.x-aa*self.y,aa*self.x+a9*self.y)end,string=function(self,a0)if a0 then return string.format("(%."..tostring(a0).."f; %."..tostring(a0).."f)",self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a7)return g.Vector2.new(self.x+a7.x,self.y+a7.y)end,__sub=function(self,a7)return g.Vector2.new(self.x-a7.x,self.y-a7.y)end,__mul=function(self,_)if type(self)=="number"then return g.Vector2.new(_.x*self,_.y*self)else return g.Vector2.new(self.x*_,self.y*_)end end,__div=function(self,_)return g.Vector2.new(self.x/_,self.y/_)end,__eq=function(self,a7)return self.x==a7.x and self.y==a7.y end,__lt=function(self,a7)return self:length_sq()<a7:length_sq()end,__le=function(self,a7)return self:length_sq()<=a7:length_sq()end},Vector3={new=function(a4,a5,ab)local ac={x=a4 or 0,y=a5 or 0,z=ab or 0}setmetatable(ac,g.Vector3)return ac end,duplicate=function(self)return g.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)+math.pow(self.z,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a7)return self.x*a7.x+self.y*a7.y+self.z*a7.z end,cross=function(self,a7)return g.Vector3.new(self.y*a7.z-self.z*a7.y,self.z*a7.x-self.x*a7.z,self.x*a7.y-self.y*a7.x)end,rotate=function(self,ad,a8)local a9=math.cos(a8)return a9*self+math.sin(a8)*ad:cross(self)+(1-a9)*ad:dot(self)*ad end,string=function(self,a0)if a0 then return string.format("(%."..tostring(a0).."f; %."..tostring(a0).."f; %."..tostring(a0).."f)",self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a7)return g.Vector3.new(self.x+a7.x,self.y+a7.y,self.z+a7.z)end,__sub=function(self,a7)return g.Vector3.new(self.x-a7.x,self.y-a7.y,self.z-a7.z)end,__mul=function(self,_)if type(self)=="number"then return g.Vector3.new(_.x*self,_.y*self,_.z*self)else return g.Vector3.new(self.x*_,self.y*_,self.z*_)end end,__div=function(self,_)return g.Vector3.new(self.x/_,self.y/_,self.z/_)end,__eq=function(self,a7)return self.x==a7.x and self.y==a7.y and self.z==a7.z end,__lt=function(self,a7)return self:length_sq()<a7:length_sq()end,__le=function(self,a7)return self:length_sq()<=a7:length_sq()end},map=function(H,ae,af,ag,ah,ai)local aj=(H-ae)/(af-ae)*(ah-ag)+ag;if ai then return g.constrain(aj,ag,ah)end;return aj end,constrain=function(H,ak,al)return math.min(al,math.max(ak,H))end,round=function(_)return math.floor(_+0.5)end,round_numbers=function(...)local am={...}local an={}for d,_ in next,am do table.insert(an,g.round(_))end;return table.unpack(an)end,floor_numbers=function(...)local am={...}local ao={}for d,_ in next,am do table.insert(ao,math.floor(_))end;return table.unpack(ao)end,ceil_numbers=function(...)local am={...}local ap={}for d,_ in next,am do table.insert(ap,math.ceil(_))end;return table.unpack(ap)end}g.Vector2.__index=g.Vector2;g.Vector3.__index=g.Vector3;g.Vector2.ONE=g.Vector2.new(1,1)g.Vector2.UP=g.Vector2.new(0,-1)g.Vector2.DOWN=g.Vector2.new(0,1)g.Vector2.LEFT=g.Vector2.new(-1,0)g.Vector2.RIGHT=g.Vector2.new(1,0)g.Vector2.ZERO=g.Vector2.new(0,0)g.Vector3.ONE=g.Vector3.new(1,1,1)g.Vector3.UP=g.Vector3.new(0,1,0)g.Vector3.DOWN=g.Vector3.new(0,-1,0)g.Vector3.LEFT=g.Vector3.new(-1,0,0)g.Vector3.RIGHT=g.Vector3.new(1,0,0)g.Vector3.FORWARD=g.Vector3.new(0,0,1)g.Vector3.BACK=g.Vector3.new(0,0,-1)g.Vector3.ZERO=g.Vector3.new(0,0,0)h={has_value=function(E,H)for aq,ar in next,E do if ar==H then return true,aq end end;return false,nil end,has_key=function(E,d)if E[d]~=nil then return true,E[d]end;return false,nil end,serialise=function(E,as,at,au,av,aw,ax,ay,az)local as=as or 0;local ax=ax or"  "local aA=0;local ay=ay or"\n"local az=az or" "if not at then ax,ay,az="","",""end;local aB="root"local aC={[E]=aB}local function aD(E,X)local aE=ax:rep(aA+1)local aF="{"..ay;local function aG(E)local aH=#E;local aI=0;for d,H in next,E do local aJ=type(d)local aK;if aJ=="string"or aJ=="table"then aK=string.format("%q",tostring(d))else aK=tostring(d)end;if not aw and d=="__index"then H={}end;local aL=type(H)if aJ=="number"and d<=aH and d==aI+1 then aI=d;aF=aF..aE else aF=aF..string.format("%s[%s]%s=%s",aE,aK,az,az)end;if aL=="table"then if not next(H)then aF=aF.."{}"elseif as<=-1 or aA<as then if aC[H]and not au then aF=aF..string.format("%q",aC[H])else local aM=X.."["..aK.."]"aC[H]=aM;aA=aA+1;aF=aF..aD(H,aM)aA=aA-1 end else aF=aF.."{}"end elseif aL=="string"or aL=="function"then aF=aF..string.format("%q",tostring(H))else aF=aF..string.format("%s",tostring(H))end;if next(E,d)then aF=aF..","..ay else aF=aF..ay end end end;local aN=getmetatable(E)if av and aN then aG(aN)if next(E)then aF=aF:sub(1,#aF-#ay)..","..aF:sub(#aF-#ay+1)end end;aG(E)aF=aF..ax:rep(aA).."}"return aF end;return aD(E,aB)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize,better_unpack=function(E,v,aO)v=v or 1;aO=aO or#E;if v<=aO then return E[v],h.better_unpack(E,v+1,aO)end end,get=function(E,...)local X={...}local aP=E;for v=1,#X do aP=aP[X[v]]end;return aP end,set=function(H,E,...)local X={...}local aQ=table.remove(X)local aR=h.get(E,table.unpack(X))local aS=aR[aQ]aR[aQ]=H;return aS end}h.serialize=h.serialise;i={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aT)return i.colors[aT]end,paint_to_color=function(aU)return i.paint[aU]end}for d,H in next,i.colors do i.paint[H]=d end;j={is_area_pressed=function(aV,aW,a4,a5,aX,aY)if aV>=a4 and aV<a4+aX then if aW>=a5 and aW<a5+aY then return true end end;return false end,format_event_table=function(aZ)local n={}n.name=aZ[1]if n.name=="timer"then n.name=b.TIMER;n.id=n[2]elseif n.name=="mouse_click"then n.name=b.TOUCH;n.from="terminal"n.button=aZ[2]n.x=aZ[3]n.y=aZ[4]elseif n.name=="monitor_touch"then n.name=b.TOUCH;n.from=aZ[2]n.button=1;n.x=aZ[3]n.y=aZ[4]elseif n.name=="mouse_drag"then n.name=b.MOUSEDRAG;n.button=aZ[2]n.x=aZ[3]n.y=aZ[4]elseif n.name=="mouse_up"then n.name=b.MOUSEUP;n.button=aZ[2]n.x=aZ[3]n.y=aZ[4]elseif n.name=="mouse_scroll"then n.name=b.MOUSESCROLL;n.direction=aZ[2]n.x=aZ[3]n.y=aZ[4]elseif n.name=="char"then n.name=b.CHAR;n.char=aZ[2]elseif n.name=="key"then n.name=b.KEY;n.key=aZ[2]elseif n.name=="key_up"then n.name=b.KEYUP;n.key=aZ[2]elseif n.name=="paste"then n.name=b.PASTE;n.paste=aZ[2]elseif n.name=="rednet_message"then n.name=b.REDNET;n.from=aZ[2]n.message=aZ[3]local a_=aZ[4]if type(a_)=="number"then n.distance=a_ else n.protocol=tostring(a_)end elseif n.name=="modem_message"then local b0=aZ[5]n.name=b.MODEM;n.side=aZ[2]n.from=aZ[4]n.protocol=b0.sProtocol or""n.message=b0.message elseif n.name=="terminate"then n.name=b.TERMINATE elseif n.name=="term_resize"then n.name=b.TERMRESIZE else n.parameters={}for d=2,#aZ do table.insert(n.parameters,aZ[d])end end;n.raw=aZ;return n end}k={_path="/.settings",set=function(b1,H)settings.set(b1,H)settings.save(k._path)end,unset=function(b1)settings.unset(b1)settings.save(k._path)end,get=function(b1)return settings.get(b1)end}l={get_monitors=function(b2)local b3={}for d,b4 in next,b2 do if b4=="terminal"then b3[b4]=term else if peripheral.getType(b4)=="monitor"then b3[b4]=peripheral.wrap(b4)end end end;return b3 end,better_print=function(b5,b6,b7,...)local b8=f.join({...},"")local b9=b5.getTextColor()local ba=b5.getBackgroundColor()if b6 then b5.setTextColor(b6)end;if b7 then b5.setBackgroundColor(b7)end;print(b8)b5.setTextColor(b9)b5.setBackgroundColor(ba)end,better_clear=function(b5)b5.clear()b5.setCursorPos(1,1)end}local bb={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a4,a5)if self.pixels[a4]then if self.pixels[a4][a5]then return true end end;return false end,get_pixel=function(self,a4,a5)if self:is_pixel_custom(a4,a5)then return self.pixels[a4][a5]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,a4,a5,N,b6,b7)a4,a5=math.floor(a4),math.floor(a5)local bc=self:get_pixel(a4,a5)if N and#N==1 then bc.char=N end;bc.foreground=b6 or bc.background;bc.background=b7 or bc.background;if not self.pixels[a4]then self.pixels[a4]={}end;self.pixels[a4][a5]=bc end,clear=function(self)self.pixels={}end},set_screens=function(self,bd)self.screens=l.get_monitors(bd)end,set_monitors=function(self,b2)self:set_screens(b2)end,clear=function(self)self.buffer:clear()end,draw=function(self)local be=self.screens;local bf=self.buffer;for bg,bh in next,be do local bi,bj=bh.getCursorPos()local aX,aY=bh.getSize()for a5=1,aY do local bk={text="",background="",foreground=""}for a4=1,aX do local bc=bf:get_pixel(a4,a5)bk.text=bk.text..bc.char;bk.background=bk.background..i.colors[bc.background]bk.foreground=bk.foreground..i.colors[bc.foreground]end;bh.setCursorPos(1,a5)bh.blit(bk.text,bk.foreground,bk.background)end;bh.setCursorPos(bi,bj)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a4,a5,aT)self.buffer:set_pixel(a4,a5," ",aT,aT)end,write=function(self,a4,a5,bl,b6,b7)for bm=0,#bl-1 do local N=bl:sub(bm+1,bm+1)self.buffer:set_pixel(a4+bm,a5,N,b6,b7)end end,blit=function(self,a4,a5,bl,b6,b7)local bn=""local bo=""b6=b6 or""b7=b7 or""for bm=0,#bl-1 do local N=bl:sub(bm+1,bm+1)local bp=b6:sub(bm+1,bm+1)bp=#bp>0 and bp or bn;local bq=b7:sub(bm+1,bm+1)bq=#bq>0 and bq or bo;self.buffer:set_pixel(a4+bm,a5,N,i.paint[bp],i.paint[bq])bn=bp;bo=bq end end,rectangle=function(self,a4,a5,aX,aY,aT)for bm=0,aX-1 do for br=0,aY-1 do self:point(a4+bm,a5+br,aT)end end end,line=function(self,bs,bt,bu,bv,aT)local function bw(bs,bt,bu,bv)local bx=1;if bs>bu then bx=-1 end;local by=bu-bs;local bz=bv-bt;local bA=1;if bz<0 then bA=-1;bz=-bz end;local bB=2*bz-by;local a5=bt;for a4=bs,bu,bx do self:point(a4,a5,aT)if bB>0 then a5=a5+bA;bB=bB-2*by end;bB=bB+2*bz end end;local function bC(bs,bt,bu,bv)local bx=1;if bt>bv then bx=-1 end;local by=bu-bs;local bz=bv-bt;local bD=1;if by<0 then bD=-1;by=-by end;local bB=2*by-bz;local a4=bs;for a5=bt,bv,bx do self:point(a4,a5,aT)if bB>0 then a4=a4+bD;bB=bB-2*bz end;bB=bB+2*by end end;if math.abs(bv-bt)<math.abs(bu-bs)then if bs>bu then bw(bu,bv,bs,bt)else bw(bs,bt,bu,bv)end else if bt>bv then bC(bu,bv,bs,bt)else bC(bs,bt,bu,bv)end end end,circle=function(self,bE,bF,bG,aT)local bH=bG*bG;self:point(bE,bF+bG,aT)self:point(bE,bF-bG,aT)self:point(bE+bG,bF,aT)self:point(bE-bG,bF,aT)local a4=1;local a5=math.floor(math.sqrt(bH-1)+0.5)while a4<a5 do self:point(bE+a4,bF+a5,aT)self:point(bE+a4,bF-a5,aT)self:point(bE-a4,bF+a5,aT)self:point(bE-a4,bF-a5,aT)self:point(bE+a5,bF+a4,aT)self:point(bE+a5,bF-a4,aT)self:point(bE-a5,bF+a4,aT)self:point(bE-a5,bF-a4,aT)a4=a4+1;a5=math.floor(math.sqrt(bH-a4*a4)+0.5)end;if a4==a5 then self:point(bE+a4,bF+a5,aT)self:point(bE+a4,bF-a5,aT)self:point(bE-a4,bF+a5,aT)self:point(bE-a4,bF-a5,aT)end end}local bI={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,bJ,d)if self.pressed_keys[d]then if bJ then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,bK,...)local keys={...}if not(#keys>0)then return false end;for bL,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if bK then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for bL,d in next,keys do self:remove_key(d)end end,manage_event=function(self,formatted_event)if formatted_event.name==b.KEY then self:add_key(formatted_event.key)elseif formatted_event.name==b.KEYUP then self:remove_key(formatted_event.key)end end}local bM={}bM={Clock={new=function(bN)local bO={enabled=true,oneshot=false,clock=os.clock(),interval=bN,callbacks={onClock=function()end}}setmetatable(bO,bM.Clock)return bO end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,formatted_event)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a4,a5,bl,b6,b7)local bP={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_LEFT,text=bl,pos=g.Vector2.new(a4,a5),colors={foreground=b6,background=b7},callbacks={onDraw=function()end}}setmetatable(bP,bM.Label)return bP end,draw=function(self,bQ)if self.hidden then return end;self.callbacks.onDraw(self,bQ)local O=f.split_by_char(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,bR in next,O do bb:write(self.pos.x,self.pos.y+d-1,bR,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then for d,bR in next,O do bb:write(self.pos.x-#bR/2+1,self.pos.y+d-1,bR,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_RIGHT then for d,bR in next,O do bb:write(self.pos.x-#bR+1,self.pos.y+d-1,bR,self.colors.foreground,self.colors.background)end end end},Button={new=function(a4,a5,aX,aY,bl,b6,bS,bT)local bU={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bl,pos=g.Vector2.new(a4,a5),size=g.Vector2.new(aX,aY),timed={enabled=false,clock=bM.Clock.new(0.5)},colors={foreground=b6,active_background=bS,unactive_background=bT},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}bU.timed.clock.binded_button=bU;bU.timed.clock.oneshot=true;bU.timed.clock:stop()bU.timed.clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)self.binded_button.callbacks.onTimeout(self.binded_button,formatted_event)end)setmetatable(bU,bM.Button)return bU end,draw=function(self,bQ)if self.hidden then return end;self.callbacks.onDraw(self,bQ)if self.active then bb:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else bb:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local O=f.split_by_char(self.text,"\n")local bV=(self.size.y-#O)/2+self.pos.y;for br=0,#O-1 do local bR=O[br+1]local bW;if self.text_alignment==b.ALIGN_LEFT then bW=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then bW=(self.size.x-#bR)/2+self.pos.x elseif self.text_alignment==b.ALIGN_RIGHT then bW=self.pos.x+self.size.x-#bR end;bb:write(bW,bV+br,bR,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if j.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(formatted_event)return true else self.callbacks.onFailedPress(self,formatted_event)end elseif bI:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(formatted_event)end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self,formatted_event)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self.active=not self.active;self.callbacks.onPress(self,formatted_event)end end},Progressbar={new=function(a4,a5,aX,aY,aP,ak,al,b6,bX,bY)local bZ={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=g.Vector2.new(a4,a5),size=g.Vector2.new(aX,aY),value={max=al,min=ak,current=aP,draw_percentage=true,percentage_precision=2},colors={foreground=b6,filled_background=bX,unfilled_background=bY},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(bZ,bM.Progressbar)return bZ end,draw=function(self,bQ)if self.hidden then return end;self.callbacks.onDraw(self,bQ)local b_=g.map(self.value.current,self.value.min,self.value.max,0,1,true)local c0=self.size.x*b_;bb:rectangle(self.pos.x,self.pos.y,c0,self.size.y,self.colors.filled_background)bb:rectangle(self.pos.x+c0,self.pos.y,self.size.x-c0,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local c1=f.format_number(b_*100,self.value.percentage_precision).."%"local c2=(self.size.x-#c1)/2+self.pos.x;local bV=(self.size.y-1)/2+self.pos.y;bb:write(c2,bV,c1,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if j.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,H)local c3=g.constrain(H,self.value.min,self.value.max)self.value.current=c3 end},Memo={new=function(a4,a5,aX,aY,b6,b7)local c4={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=g.Vector2.new(a4,a5),size=g.Vector2.new(aX,aY),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=bM.Clock.new(0.5),pos=g.Vector2.new(1,1)},limits=g.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=b6,background=b7,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end,onPaste=function()end}}c4.cursor.blink.binded_cursor=c4.cursor;c4.cursor.blink:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(c4,bM.Memo)return c4 end,draw=function(self,bQ)if self.hidden then return end;self.callbacks.onDraw(self,bQ)bb:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local c5=self.cursor.pos.x-self.first_visible_char;local c6=self.cursor.pos.y-self.first_visible_line;for a5=1,self.size.y do local c7=a5+self.first_visible_line-1;local c8=self.rich_text[c7]or{}local bR=self.lines[c7]or""local c9=self.first_visible_char;local ca=self.first_visible_char+self.size.x-1;local cb=bR:sub(c9,ca)local cc=self.pos.y+a5-1;if c8.background then if type(c8.background)=="string"then local cd=c8.background:sub(c9,ca)cd=#cd>0 and cd or c8.background:sub(#c8.background)bb:blit(self.pos.x,cc,string.rep(" ",self.size.x),nil,cd)else bb:rectangle(self.pos.x,cc,self.size.x,1,c8.background)end end;if c8.foreground then if type(c8.foreground)=="string"then local ce=c8.foreground:sub(c9,ca)ce=#ce>0 and ce or c8.foreground:sub(#c8.foreground)bb:blit(self.pos.x,cc,cb,ce)else bb:write(self.pos.x,cc,cb,c8.foreground)end else bb:write(self.pos.x,cc,cb,self.colors.foreground)end end;if self.cursor.visible and c5>=0 and c5<self.size.x and c6>=0 and c6<self.size.y then bb:write(c5+self.pos.x,c6+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if self.hidden then return false end;if not self.editable then return false end;if formatted_event.name==b.TOUCH then if j.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)self:focus(true,formatted_event)local a4=formatted_event.x-self.pos.x;local a5=formatted_event.y-self.pos.y;self:set_cursor(a4+self.first_visible_char,a5+self.first_visible_line)return true else self.callbacks.onFailedPress(self,formatted_event)self:focus(false,formatted_event)return false end elseif formatted_event.name==b.DELETED then self:focus(false,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.PASTE then if self.callbacks.onPaste(self,formatted_event)then return true end;self:write(formatted_event.paste)return true elseif formatted_event.name==b.CHAR then if self.callbacks.onChar(self,formatted_event)then return true end;self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if self.callbacks.onKey(self,formatted_event)then return true end;if bI:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cf=self.lines[self.cursor.pos.y-1]local cg=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bi=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(cg.."\n"..cf)self:set_cursor(bi,self.cursor.pos.y-1)end;return true elseif bI:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cg=self.lines[self.cursor.pos.y]local ch=self.lines[self.cursor.pos.y+1]if not ch then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bi=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(ch.."\n"..cg)self:set_cursor(bi,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif formatted_event.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif formatted_event.key==b.KEY_RIGHT then local bR=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#bR+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local ci=self.lines[self.cursor.pos.y-1]self:set_cursor(#ci+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_BACKSPACE then local bR=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local cj=#self.lines[self.cursor.pos.y-1]+1;local ck=self.cursor.pos.y-1;self:set_cursor(cj,ck)self:write(bR)self:set_cursor(cj,ck)end else local ay=bR:sub(1,self.cursor.pos.x-2)..bR:sub(self.cursor.pos.x)self.lines[self.cursor.pos.y]=ay;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,ay,{ay})end;return true elseif formatted_event.key==b.KEY_DELETE then local bR=self.lines[self.cursor.pos.y]local cl=bR:sub(self.cursor.pos.x)if#cl>0 then local ay=bR:sub(1,self.cursor.pos.x-1)..bR:sub(self.cursor.pos.x+1)self.lines[self.cursor.pos.y]=ay;self.callbacks.onWrite(self,ay,{ay})else local ch=self.lines[self.cursor.pos.y+1]if ch then local cj=self.cursor.pos.x;local ck=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(ch)self:set_cursor(cj,ck)end end;return true elseif formatted_event.key==b.KEY_ENTER then local cm=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cn=cm:gsub("(%s*).*","%1")self:write("\n"..cn)return true elseif formatted_event.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_HOME then local cm=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cn=cm:gsub("(%s*).*","%1")self:set_cursor(#cn+1,self.cursor.pos.y)return true elseif bI:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local co=self.lines[self.cursor.pos.y]local cn=co:gsub("^(%s*).*$","%1")local cp=math.min(#self.tab_spaces,#cn)local ay=co:sub(cp+1)self.lines[self.cursor.pos.y]=ay;self:set_cursor(self.cursor.pos.x-cp,self.cursor.pos.y)self.callbacks.onWrite(self,ay,{ay})return true elseif formatted_event.key==b.KEY_TAB then local bi=self.cursor.pos.x;local cq=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cr=#self.lines[self.cursor.pos.y]-cq;self:set_cursor(bi+cr,self.cursor.pos.y)return true end elseif formatted_event.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,formatted_event)then return true end;self.first_visible_line=g.constrain(self.first_visible_line+formatted_event.direction,1,#self.lines)return true end end end,focus=function(self,cs,formatted_event)if cs then self.focussed=true;self.callbacks.onFocus(self,formatted_event)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)end end,set_cursor=function(self,cj,ck,ct)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then ck=g.constrain(ck,1,self.limits.y)end;if ct then for a5=#self.lines+1,ck do if not self.lines[a5]then self.lines[a5]=""end end else ck=g.constrain(ck,1,#self.lines)end;cj=g.constrain(cj,1,#self.lines[ck]+1)local c5=cj-self.first_visible_char;local c6=ck-self.first_visible_line;if c5>=self.size.x then self.first_visible_char=self.first_visible_char+c5-self.size.x+1 elseif c5<0 then self.first_visible_char=self.first_visible_char+c5 end;if c6>=self.size.y then self.first_visible_line=self.first_visible_line+c6-self.size.y+1 elseif c6<0 then self.first_visible_line=self.first_visible_line+c6 end;self.callbacks.onCursorChange(self,cj,ck)self.cursor.pos=g.Vector2.new(cj,ck)end,write=function(self,...)local bl=f.join({...},"")local O=f.split_by_char(bl,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local J="[^"..f.escape_magic_characters(f.join(self.whitelist,"")).."]"for d,bR in next,O do O[d]=bR:gsub(J,"")end elseif#self.blacklist>0 then local J="["..f.escape_magic_characters(f.join(self.blacklist,"")).."]"for d,bR in next,O do O[d]=bR:gsub(J,"")end end;if self.limits.y>0 then for a5=1,#self.lines+#O-1-self.limits.y do table.remove(O)end;if#O==0 then return end end;if#O>1 then for cu,bR in next,O do if cu==1 then local cv=self.lines[self.cursor.pos.y]local cw=cv:sub(1,self.cursor.pos.x-1)local cl=cv:sub(self.cursor.pos.x)local cx=O[#O]if self.limits.x>0 then bR=bR:sub(1,self.limits.x-#cw)cx=cx:sub(1,self.limits.x-#cl)end;self.lines[self.cursor.pos.y]=cw..bR;table.insert(self.lines,self.cursor.pos.y+1,cx..cl)self:set_cursor(#cx+1,self.cursor.pos.y+1)elseif cu==#O then break else if self.limits.x>0 then bR=bR:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,bR)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cv=self.lines[self.cursor.pos.y]local cw=cv:sub(1,self.cursor.pos.x-1)local cl=cv:sub(self.cursor.pos.x)if self.limits.x>0 then O[1]=O[1]:sub(1,self.limits.x-(#cw+#cl))end;self.lines[self.cursor.pos.y]=cw..O[1]..cl;self:set_cursor(self.cursor.pos.x+#O[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bl,O)end,print=function(self,...)local bl=f.join({...},"")local ay=#self.lines>0 and"\n"or""self:write(ay..bl)end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=g.Vector2.new(1,1)end},Window={new=function(a4,a5,aX,aY,b7,cy)local cz={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=g.Vector2.new(a4,a5),size=g.Vector2.new(aX,aY),can_drag=false,dragging={enabled=true,from=g.Vector2.new(1,1)},resizing={enabled=true,corner=g.Vector2.new(-1,1),enabled_directions={[-1]={[1]=true,[0]=true,[-1]=true},[0]={[1]=true,[0]=false,[-1]=true},[1]={[1]=true,[0]=true,[-1]=true}},pinned={x=false,y=false},min_size=g.Vector2.new(aX,aY),max_size=g.Vector2.new(aX,aY)*2},shadow={enabled=cy,offset=g.Vector2.new(1,1)},elements={},colors={background=b7,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onDrag=function()end,onResize=function()end}}setmetatable(cz,bM.Window)return cz end,draw=function(self,bQ)if self.hidden then return end;self.callbacks.onDraw(self,bQ)if self.shadow.enabled then bb:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;bb:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements(bQ)end,event=function(self,formatted_event)if self.hidden then return false end;local cA=self:event_elements(formatted_event)if not cA then if formatted_event.name==b.TOUCH then if j.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.can_drag=false;if self.resizing.enabled then local cB=true;local cC=formatted_event.y==self.pos.y+self.size.y-1;local cD=formatted_event.y==self.pos.y;if formatted_event.x==self.pos.x+self.size.x-1 then if self.resizing.enabled_directions[1][1]and cC then self.resizing.corner=self.pos.ONE:duplicate()self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][-1]and cD then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][0]and not(cC or cD)then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cB=false end elseif formatted_event.x==self.pos.x then if self.resizing.enabled_directions[-1][1]and cC then self.resizing.corner=self.pos.DOWN+self.pos.LEFT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][-1]and cD then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][0]and not(cC or cD)then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cB=false end elseif self.resizing.enabled_directions[0][1]and cC then self.resizing.corner=self.pos.DOWN+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[0][-1]and cD then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false else cB=false end;if not cB then self.resizing.corner=self.pos.ZERO:duplicate()self.dragging.from=g.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end else self.dragging.from=g.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end;self.focussed=true;self.callbacks.onPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.callbacks.onFailedPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG and self.focussed then if self.can_drag then self:drag(formatted_event.x,formatted_event.y)else self:resize(formatted_event.x,formatted_event.y,self.resizing.pinned.x,self.resizing.pinned.y)end;return true elseif formatted_event.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,formatted_event)end else self.focussed=false;self.callbacks.onFocus(self,formatted_event)end;return cA end,drag=function(self,a4,a5)if self.dragging.enabled then local cE=self.pos:duplicate()local cF=g.Vector2.new(a4-self.dragging.from.x,a5-self.dragging.from.y)self.pos=self.pos+cF;self.dragging.from=g.Vector2.new(a4,a5)self.callbacks.onDrag(self,cE.x,cE.y)end end,resize=function(self,a4,a5,cG,cH)if self.resizing.enabled and self.resizing.corner~=self.pos.ZERO then local function cI()self.size.x=g.constrain(self.size.x,self.resizing.min_size.x,self.resizing.max_size.x)self.size.y=g.constrain(self.size.y,self.resizing.min_size.y,self.resizing.max_size.y)end;local cJ=g.Vector2.new(a4,a5)local cE=self.pos:duplicate()local cK=self.size:duplicate()if self.resizing.corner==self.pos.ONE then self.size.x=cJ.x-self.pos.x+1;self.size.y=cJ.y-self.pos.y+1;cI()elseif self.resizing.corner==self.pos.ONE*-1 then self.size.x=self.size.x+self.pos.x-cJ.x;self.size.y=self.size.y+self.pos.y-cJ.y;cI()local cL=cK-self.size;self.pos=self.pos+cL elseif self.resizing.corner==self.pos.UP+self.pos.RIGHT then self.size.x=cJ.x-self.pos.x+1;self.size.y=self.size.y+self.pos.y-cJ.y;cI()local cM=cK.y-self.size.y;self.pos.y=self.pos.y+cM elseif self.resizing.corner==self.pos.DOWN+self.pos.LEFT then self.size.x=self.size.x+self.pos.x-cJ.x;self.size.y=cJ.y-self.pos.y+1;cI()local cr=cK.x-self.size.x;self.pos.x=self.pos.x+cr end;if cG then self.size.x=cK.x;self.pos.x=cE.x end;if cH then self.size.y=cK.y;self.pos.y=cE.y end;self.callbacks.onResize(self,cE.x,cE.y,cK.x,cK.y)end end,set_elements=function(self,cN)self.elements={}for d,cO in next,cN do table.insert(self.elements,cO)end end,draw_elements=function(self,bQ)for d=#self.elements,1,-1 do local cO=self.elements[d]if cO.draw then cO.pos=cO.pos+self.pos-self.pos.ONE;cO:draw(bQ)cO.pos=cO.pos-self.pos+self.pos.ONE end end end,event_elements=function(self,formatted_event)local cP=formatted_event;if cP.name==b.TOUCH then cP=j.format_event_table(cP.raw)cP.x,cP.y=cP.x-self.pos.x+1,cP.y-self.pos.y+1 end;local cA=false;for d,cO in next,self.elements do if cO.event then local cQ=cO:event(cP)cA=cA or cQ;if cQ then cP={name=b.DELETED}end end end;return cA end}}bM.Clock.__index=bM.Clock;bM.Label.__index=bM.Label;bM.Button.__index=bM.Button;bM.Progressbar.__index=bM.Progressbar;bM.Memo.__index=bM.Memo;bM.Window.__index=bM.Window;local cR={}cR={new=function(cS)local cT={draw_priority=b.LOW_PRIORITY,enabled=false,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=bM.Clock.new(cS or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}cT.broadcast_clock.WSS=cT;cT.broadcast_clock:set_callback(b.ONCLOCK,function(self,formatted_event)rednet.broadcast(bb.frame,self.WSS.protocol)end)setmetatable(cT,cR)return cT end,draw=function(self,bQ)if not self.enabled then return false end;self.callbacks.onDraw(self,bQ)if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then bb.buffer.background=self.buffer.background;bb.buffer.pixels=self.buffer.pixels end end end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local cU=false;if formatted_event.name==b.REDNET then if formatted_event.protocol==self.protocol then local b0=formatted_event.message;if self.mode==b.HOST then if b0==b.CONNECTION_REQUEST then rednet.send(formatted_event.from,b.OK,self.protocol)self.users[formatted_event.from]=true;cU=true;self.callbacks.onConnect(self,formatted_event)elseif b0==b.DISCONNECTED then self.users[formatted_event.from]=nil;cU=true;self.callbacks.onDisconnect(self,formatted_event)elseif self.events_whitelist[b0.name or"nil"]and self.users[formatted_event.from]and type(b0)=="table"then if b0.raw then os.queueEvent(table.unpack(b0.raw))end;cU=true end elseif self.mode==b.USER then if formatted_event.from==self.host_id then if b0==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;cU=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(b0)=="table"then self.buffer=b0;cU=true end end end end end;if self.mode==b.USER then if formatted_event.name==b.TOUCH then cU=true end;if self.events_whitelist[tostring(formatted_event.name)]then rednet.send(self.host_id,formatted_event,self.protocol)cU=true end elseif self.mode==b.HOST then self.broadcast_clock:event(formatted_event)end;return cU end,use_side=function(self,cV)self.side=cV end,connect=function(self,cW,cX,cY)cX=cX or 2;cY=cY or 10;rednet.open(self.side)self.host_id=cW;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local cZ=0;while true do cZ=cZ+1;local c_={rednet.receive(self.protocol,cX)}if c_[1]==cW and c_[2]==b.OK and c_[3]==self.protocol then return b.OK elseif cZ>=cY then local d0=string.format("Connection timed out on attempt %d after %d ms",cZ,cX*1000)if#c_>0 then d0=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",cZ,cX*1000)end;cR:close()error(d0,2)end end;self.callbacks.onConnect(self,cW)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}cR.__index=cR;local d1={}d1={new=function(d2)local d3={enabled=true,computer_whitelist={},side=b.NONE,mode=b.ALL,password=d2 or b.NONE,protocol="YAGUI-"..a.ver.."_FT",save_dir="/FT",callbacks={onEvent=function()end,onConnect=function()end,onSend=function()end,onReceive=function()end}}setmetatable(d3,d1)return d3 end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;if formatted_event.name==b.REDNET and formatted_event.protocol==self.protocol then if self.mode==b.ALL or self.mode==b.RECEIVE then local cW=formatted_event.from;if self.computer_whitelist[cW]or self.callbacks.onConnect(self,formatted_event)then local b0=formatted_event.message;if type(b0)=="table"and b0.name and b0.content then if b0.psw==self.password then local b1=fs.getName(tostring(b0.name))local X=fs.combine(self.save_dir,b1)if fs.exists(X)then rednet.send(cW,b.NO,self.protocol)else local d4=tostring(b0.content)if self.callbacks.onReceive(self,formatted_event,cW,b1,X,d4)then return true end;local d5=fs.open(X,"w")if d5 then d5.write(d4)d5.close()rednet.send(cW,b.OK,self.protocol)else rednet.send(cW,b.ERROR,self.protocol)end end else rednet.send(cW,b.NO,self.protocol)end else rednet.send(cW,b.ERROR,self.protocol)end else rednet.send(cW,b.NO,self.protocol)end end end end,send=function(self,d6,d7,d8,d9)if self.mode==b.ALL or self.mode==b.SEND then d9=d9 or fs.getName(d8)d7=d7 or b.NONE;local d5=fs.open(d8,"r")local d4=d5.readAll()d5.close()local b0={psw=d7,name=d9,content=d4}if self.callbacks.onSend(self,formatted_event,b0)then return true end;rednet.send(d6,b0,self.protocol)end end,open=function(self,cV)self.side=cV;rednet.open(cV)end,close=function(self)if rednet.isOpen()then rednet.close(self.side)end end}d1.__index=d1;local da={}da={new=function(db,dc)local dd={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=db,EPS_target=dc},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=bM.Clock.new(1/db),stats_clock=bM.Clock.new(1),FPS_label=bM.Label.new(1,1,"1 FPS",colors.white),EPS_label=bM.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=g.Vector2.new(1,1),elements=nil,show=function(self,de)self.elements.FPS_label.hidden=not de;self.elements.EPS_label.hidden=not de end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+g.Vector2.DOWN end,Frames=0,Events=0,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}dd.elements.loop.stats_clock.stats=dd.stats;dd.stats.elements=dd.elements.loop;dd.elements.loop.stats_clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS,self.stats.EPS=self.stats.Frames,self.stats.Events;self.stats.Frames,self.stats.Events=0,0 end)dd.stats:show(false)dd.elements.loop.clock.Loop=dd;dd.elements.loop.clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.Loop.callbacks.onClock(self.Loop,formatted_event)self.Loop:draw_elements(1/self.Loop.stats.FPS)self.interval=1/self.Loop.options.FPS_target end)setmetatable(dd,da)return dd end,set_monitors=function(self,b2)self.monitors=l.get_monitors(b2)end,set_elements=function(self,cN)self.elements.high_priority={}self.elements.low_priority={}for d,H in next,cN do if H.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,H)else table.insert(self.elements.low_priority,H)end end end,draw_elements=function(self,bQ)local function df(E)for d=#E,1,-1 do local cO=E[d]if cO.draw then cO:draw(bQ)end end end;self.callbacks.onDraw(self,bQ)local dg=bb.screens;bb.screens=self.monitors;df(self.elements.low_priority)df(self.elements.high_priority)for d,cO in next,self.elements.loop do if cO.draw then cO:draw(bQ)end end;bb:draw()bb.screens=dg;self.stats.Frames=self.stats.Frames+1 end,event_elements=function(self,formatted_event)local function aZ(E)for d,cO in next,E do if cO.event then if cO:event(formatted_event)then formatted_event={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,formatted_event)then formatted_event={name=b.DELETED}end;if self.options.stop_on_terminate and formatted_event.name==b.TERMINATE then self:stop()return end;if formatted_event.name==b.TOUCH then local dh=false;for di,b5 in next,self.monitors do if formatted_event.from==di then dh=true;break end end;if not dh then formatted_event={name=b.DELETED}end end;aZ(self.elements.loop)local dj={}for d,cO in next,self.elements.high_priority do if cO.event then local dk=cO:event(formatted_event)if dk then formatted_event={name=b.DELETED}if self.elements.high_priority~=cO then table.insert(dj,{element=cO,key=d})end end end end;if#dj>0 then for d,H in next,dj do table.insert(self.elements.high_priority,1,H.element)table.remove(self.elements.high_priority,H.key+#dj)end end;aZ(self.elements.low_priority)self.stats.Events=self.stats.Events+1 end,start=function(self)self.enabled=true;bI:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local dl=os.startTimer(1/self.options.EPS_target)local dm;if self.options.raw_mode then dm={os.pullEventRaw()}else dm={os.pullEvent()}end;local formatted_event=j.format_event_table(dm)bI:manage_event(formatted_event)self:event_elements(formatted_event)os.cancelTimer(dl)end;bI:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}da.__index=da;local dn={__call=function(self,...)return self.new(...)end}dn.__index=dn;local dp={__call=function(self,...)return self.new(...)end,set_callback=function(self,n,o)if n==b.ONSTART then self.callbacks.onStart=o elseif n==b.ONSTOP then self.callbacks.onStop=o elseif n==b.ONDRAW then self.callbacks.onDraw=o elseif n==b.ONPRESS then self.callbacks.onPress=o elseif n==b.ONFAILEDPRESS then self.callbacks.onFailedPress=o elseif n==b.ONTIMEOUT then self.callbacks.onTimeout=o elseif n==b.ONCLOCK then self.callbacks.onClock=o elseif n==b.ONEVENT then self.callbacks.onEvent=o elseif n==b.ONFOCUS then self.callbacks.onFocus=o elseif n==b.ONKEY then self.callbacks.onKey=o elseif n==b.ONCHAR then self.callbacks.onChar=o elseif n==b.ONMOUSESCROLL then self.callbacks.onMouseScroll=o elseif n==b.ONCURSORCHANGE then self.callbacks.onCursorChange=o elseif n==b.ONWRITE then self.callbacks.onWrite=o elseif n==b.ONCONNECT then self.callbacks.onConnect=o elseif n==b.ONDISCONNECT then self.callbacks.onDisconnect=o elseif n==b.ONSEND then self.callbacks.onSend=o elseif n==b.ONRECEIVE then self.callbacks.onReceive=o elseif n==b.ONDRAG then self.callbacks.onDrag=o elseif n==b.ONRESIZE then self.callbacks.onResize=o elseif n==b.ONPASTE then self.callbacks.onPaste=o end end}dp.__index=dp;setmetatable(g.Vector2,dn)setmetatable(g.Vector3,dn)setmetatable(cR,dp)setmetatable(d1,dp)for d,cO in next,bM do setmetatable(cO,dp)end;setmetatable(da,dp)local dq={...}if dq[1]=="help"then local O={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,bR in next,O do l.better_print(term,bR.foreground,bR.background,bR.text)end elseif dq[1]=="info"then l.better_print(term,colors.red,nil,"Library Version: ",a.ver)l.better_print(term,colors.yellow,nil,"Library Author: ",a.author)l.better_print(term,colors.green,nil,"Library Website: ",a.website)l.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif dq[1]=="ver"then l.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif dq[1]=="copyright"then local dr={colors.red,colors.yellow,colors.green}local ds=f.split(a.copyright,"\n\n")for d,dt in next,ds do l.better_print(term,dr[d],nil,dt)if d<#ds then read("")end end elseif dq[1]=="setup"then if shell then local du="YAGUI_PATH"local X="/"..shell.getRunningProgram()k.set(du,X)l.better_print(term,colors.green,nil,"Lib path was set to \"",k.get(du),"\".")else l.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif dq[1]=="create"then if dq[2]then local X=shell.resolve(dq[2])if f.get_extension(X)~="lua"then X=X..".lua"end;if fs.exists(X)then l.better_print(term,colors.red,nil,"PATH: \"/",X,"\" already exists, please use another path or delete it.")else local d5=fs.open(X,"w")d5.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")d5.close()l.better_print(term,colors.green,nil,"New project was created at \"/",X,"\".")end else l.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif dq[1]then l.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",dq[1],"\"")l.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local dv={info=a,generic_utils=e,string_utils=f,math_utils=g,table_utils=h,color_utils=i,event_utils=j,setting_utils=k,monitor_utils=l,screen_buffer=bb,input=bI,WSS=cR,wireless_screen_share=cR,FT=d1,file_transfer=d1,gui_elements=bM,Loop=da}for d,H in next,b do dv[d]=H end;return dv