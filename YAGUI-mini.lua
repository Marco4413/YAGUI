--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.23.1",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",DELETED="DELETED",NONE="NONE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={__call=function(self,...)return self.new(...)end}e.__index=e;local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)if o==b.ONSTART then n.callbacks.onStart=p elseif o==b.ONSTOP then n.callbacks.onStop=p elseif o==b.ONDRAW then n.callbacks.onDraw=p elseif o==b.ONPRESS then n.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then n.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then n.callbacks.onTimeout=p elseif o==b.ONCLOCK then n.callbacks.onClock=p elseif o==b.ONEVENT then n.callbacks.onEvent=p elseif o==b.ONFOCUS then n.callbacks.onFocus=p elseif o==b.ONKEY then n.callbacks.onKey=p elseif o==b.ONCHAR then n.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then n.callbacks.onMouseScroll=p elseif o==b.ONCURSORCHANGE then n.callbacks.onCursorChange=p elseif o==b.ONWRITE then n.callbacks.onWrite=p elseif o==b.ONCONNECT then n.callbacks.onConnect=p elseif o==b.ONDISCONNECT then n.callbacks.onDisconnect=p end end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=r or"unknown"r=tostring(r)local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=x:gsub(t,", ")v=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",r,(w+1)/2,E,z)u=true;break end end;if u then error(v,3)return false end;return true end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(F,G)if not G then G=""end;local H=""for d=1,#F do local I=F[d]H=H..tostring(I)if d<#F then H=H..G end end;return H end,split=function(H,G)if not string.find(H,G)then return{H}end;local J={}local K="(.-)"..G.."()"local L;for M,N in string.gfind(H,K)do table.insert(J,M)L=N end;table.insert(J,string.sub(H,L))return J end,compare_versions=function(O,P)local Q=g.split(O,".")local R=g.split(P,".")local S=#Q;local T=#R;for w=1,math.min(S,T)do if tonumber(Q[w])>tonumber(R[w])then return 1 elseif tonumber(Q[w])<tonumber(R[w])then return-1 end end;if S>T then return 1 elseif S<T then return-1 end;return 0 end,escape_magic_characters=function(H)for d,U in next,g.magic_characters do H=H:gsub("[%"..U.."]",'%%%'..U)end;return H end,get_extension=function(V)local W,X=V:gsub(".*%.","")if X>0 then return W end;return""end,format_number=function(Y,Z)Y=tostring(Y)Z=Z or 0;local _=Y:gsub("(.*)%..*","%1")if Z<=0 then return _ end;local a0=#_+1;local a1=Y:sub(a0+1,a0+Z)a1=a1:reverse():gsub("0*(.*)","%1"):reverse()if#a1>0 then return _.."."..a1 end;return _ end,trim=function(H)return H:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a2,a3)local a4={x=a2 or 0,y=a3 or 0}setmetatable(a4,h.Vector2)return a4 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a5)return self.x*a5.x+self.y*a5.y end,cross=function(self,a5)return self.x*a5.y-self.y*a5.x end,rotate=function(self,a6)local a7=math.cos(a6)local a8=math.sin(a6)return h.Vector2.new(a7*self.x-a8*self.y,a8*self.x+a7*self.y)end,string=function(self,Z)if Z then return string.format("(%."..tostring(Z).."f; %."..tostring(Z).."f)",self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a5)return h.Vector2.new(self.x+a5.x,self.y+a5.y)end,__sub=function(self,a5)return h.Vector2.new(self.x-a5.x,self.y-a5.y)end,__mul=function(self,Y)if type(self)=="number"then return h.Vector2.new(Y.x*self,Y.y*self)else return h.Vector2.new(self.x*Y,self.y*Y)end end,__div=function(self,Y)return h.Vector2.new(self.x/Y,self.y/Y)end,__eq=function(self,a5)return self.x==a5.x and self.y==a5.y end,__lt=function(self,a5)return self:length_sq()<a5:length_sq()end,__le=function(self,a5)return self:length_sq()<=a5:length_sq()end},Vector3={new=function(a2,a3,a9)local aa={x=a2 or 0,y=a3 or 0,z=a9 or 0}setmetatable(aa,h.Vector3)return aa end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)+math.pow(self.z,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a5)return self.x*a5.x+self.y*a5.y+self.z*a5.z end,cross=function(self,a5)return h.Vector3.new(self.y*a5.z-self.z*a5.y,self.z*a5.x-self.x*a5.z,self.x*a5.y-self.y*a5.x)end,rotate=function(self,ab,a6)local a7=math.cos(a6)return a7*self+math.sin(a6)*ab:cross(self)+(1-a7)*ab:dot(self)*ab end,string=function(self,Z)if Z then return string.format("(%."..tostring(Z).."f; %."..tostring(Z).."f; %."..tostring(Z).."f)",self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a5)return h.Vector3.new(self.x+a5.x,self.y+a5.y,self.z+a5.z)end,__sub=function(self,a5)return h.Vector3.new(self.x-a5.x,self.y-a5.y,self.z-a5.z)end,__mul=function(self,Y)if type(self)=="number"then return h.Vector3.new(Y.x*self,Y.y*self,Y.z*self)else return h.Vector3.new(self.x*Y,self.y*Y,self.z*Y)end end,__div=function(self,Y)return h.Vector3.new(self.x/Y,self.y/Y,self.z/Y)end,__eq=function(self,a5)return self.x==a5.x and self.y==a5.y and self.z==a5.z end,__lt=function(self,a5)return self:length_sq()<a5:length_sq()end,__le=function(self,a5)return self:length_sq()<=a5:length_sq()end},map=function(I,ac,ad,ae,af,ag)local ah=(I-ac)/(ad-ac)*(af-ae)+ae;if ag then return h.constrain(ah,ae,af)end;return ah end,constrain=function(I,ai,aj)return math.min(aj,math.max(ai,I))end,round=function(Y)return math.floor(Y+0.5)end,round_numbers=function(...)local ak={...}local al={}for d,Y in next,ak do table.insert(al,h.round(Y))end;return table.unpack(al)end,floor_numbers=function(...)local ak={...}local am={}for d,Y in next,ak do table.insert(am,math.floor(Y))end;return table.unpack(am)end,ceil_numbers=function(...)local ak={...}local an={}for d,Y in next,ak do table.insert(an,math.ceil(Y))end;return table.unpack(an)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(F,I)for ao,ap in next,F do if ap==I then return true,ao end end;return false,nil end,has_key=function(F,d)if F[d]~=nil then return true,F[d]end;return false,nil end,serialise=function(F,aq,ar,as,at,au,av,aw,ax)local aq=aq or 0;local av=av or"  "local ay=0;local aw=aw or"\n"local ax=ax or" "if not ar then av,aw,ax="","",""end;local az={}local aA="root"local function aB(F,V)local aC=av:rep(ay+1)local aD="{"..aw;local function aE(F)for d,I in next,F do local aF=type(d)local aG;if aF=="string"then aG=string.format("%q",d)else aG=tostring(d)end;if not au and d=="__index"then I={}end;local aH=type(I)local aI=tostring(I)aD=aD..string.format("%s[%s]%s=%s",aC,aG,ax,ax)if aH=="table"then if not next(I)then aD=aD.."{}"elseif aq<=-1 or ay<aq then if az[aI]and not as then aD=aD..string.format("%q",az[aI])else local aJ=V.."."..tostring(d)az[aI]=aJ;ay=ay+1;aD=aD..aB(I,aJ)ay=ay-1 end else aD=aD.."{}"end elseif aH=="string"or aH=="function"then aD=aD..string.format("%q",aI)else aD=aD..string.format("%s",aI)end;if next(F,d)then aD=aD..","..aw else aD=aD..aw end end end;local aK=getmetatable(F)if at and aK then aE(aK)if next(F)then aD=aD:sub(1,#aD-#aw)..","..aD:sub(#aD-#aw+1)end end;aE(F)aD=aD..av:rep(ay).."}"return aD end;return aB(F,aA)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aL)return j.colors[aL]end,paint_to_color=function(aM)return j.paint[aM]end}for d,I in next,j.colors do j.paint[I]=d end;k={is_area_pressed=function(aN,aO,a2,a3,aP,aQ)if aN>=a2 and aN<a2+aP then if aO>=a3 and aO<a3+aQ then return true end end;return false end,format_event_table=function(aR)local aS=false;local o={}o.name=aR[1]if o.name=="timer"then o.name=b.TIMER;o.id=o[2]aS=true elseif o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=aR[2]o.x=aR[3]o.y=aR[4]aS=true elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=aR[2]o.button=1;o.x=aR[3]o.y=aR[4]aS=true elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=aR[2]o.x=aR[3]o.y=aR[4]aS=true elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=aR[2]o.x=aR[3]o.y=aR[4]aS=true elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=aR[2]o.x=aR[3]o.y=aR[4]aS=true elseif o.name=="char"then o.name=b.CHAR;o.char=aR[2]aS=true elseif o.name=="key"then o.name=b.KEY;o.key=aR[2]aS=true elseif o.name=="key_up"then o.name=b.KEYUP;o.key=aR[2]aS=true elseif o.name=="paste"then o.name=b.PASTE;o.paste=aR[2]aS=true elseif o.name=="rednet_message"then o.name=b.REDNET;o.from=aR[2]o.message=aR[3]local aT=aR[4]if type(aT)=="number"then o.distance=aT else o.protocol=tostring(aT)end;aS=true elseif o.name=="modem_message"then local aU=aR[5]o.name=b.MODEM;o.side=aR[2]o.from=aR[4]o.protocol=aU.sProtocol or""o.message=aU.message;aS=true end;if not aS then o.parameters={}for d=2,#aR do table.insert(o.parameters,aR[d])end end;o.raw=aR;return o end}l={_path="/.settings",set=function(aV,I)settings.set(aV,I)settings.save(l._path)end,unset=function(aV)settings.unset(aV)settings.save(l._path)end,get=function(aV)return settings.get(aV)end}m={get_monitors=function(aW)local aX={}for d,aY in next,aW do if aY=="terminal"then aX[aY]=term else if peripheral.getType(aY)=="monitor"then aX[aY]=peripheral.wrap(aY)end end end;return aX end,better_print=function(aZ,a_,b0,...)local b1=g.join({...},"")local b2=aZ.getTextColor()local b3=aZ.getBackgroundColor()if a_ then aZ.setTextColor(a_)end;if b0 then aZ.setBackgroundColor(b0)end;print(b1)aZ.setTextColor(b2)aZ.setBackgroundColor(b3)end,better_clear=function(aZ)aZ.clear()aZ.setCursorPos(1,1)end}local b4={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a2,a3)if self.pixels[a2]then if self.pixels[a2][a3]then return true end end;return false end,get_pixel=function(self,a2,a3)if self:is_pixel_custom(a2,a3)then return self.pixels[a2][a3]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,a2,a3,b5,a_,b0)local b6=self:get_pixel(a2,a3)if b5 and#b5==1 then b6.char=b5 end;b6.foreground=a_ or b6.background;b6.background=b0 or b6.background;if not self.pixels[a2]then self.pixels[a2]={}end;self.pixels[a2][a3]=b6 end,clear=function(self)self.pixels={}end},set_screens=function(self,b7)self.screens=m.get_monitors(b7)end,set_monitors=function(self,aW)self:set_screens(aW)end,clear=function(self)self.buffer:clear()end,draw=function(self)local b8=self.screens;local b9=self.buffer;for ba,bb in next,b8 do local bc,bd=bb.getCursorPos()local aP,aQ=bb.getSize()for a3=1,aQ do local be={text="",background="",foreground=""}for a2=1,aP do local b6=b9:get_pixel(a2,a3)be.text=be.text..b6.char;be.background=be.background..j.colors[b6.background]be.foreground=be.foreground..j.colors[b6.foreground]end;bb.setCursorPos(1,a3)bb.blit(be.text,be.foreground,be.background)end;bb.setCursorPos(bc,bd)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a2,a3,aL)self.buffer:set_pixel(a2,a3," ",aL,aL)end,write=function(self,a2,a3,bf,a_,b0)for bg=0,#bf-1 do local b5=bf:sub(bg+1,bg+1)self.buffer:set_pixel(a2+bg,a3,b5,a_,b0)end end,blit=function(self,a2,a3,bf,a_,b0)local bh=""local bi=""a_=a_ or""b0=b0 or""for bg=0,#bf-1 do local b5=bf:sub(bg+1,bg+1)local bj=a_:sub(bg+1,bg+1)bj=#bj>0 and bj or bh;local bk=b0:sub(bg+1,bg+1)bk=#bk>0 and bk or bi;self.buffer:set_pixel(a2+bg,a3,b5,j.paint[bj],j.paint[bk])bh=bj;bi=bk end end,rectangle=function(self,a2,a3,aP,aQ,aL)for bg=0,aP-1 do for bl=0,aQ-1 do self:point(a2+bg,a3+bl,aL)end end end,line=function(self,bm,bn,bo,bp,aL)local function bq(bm,bn,bo,bp)local br=1;if bm>bo then br=-1 end;local bs=bo-bm;local bt=bp-bn;local bu=1;if bt<0 then bu=-1;bt=-bt end;local bv=2*bt-bs;local a3=bn;for a2=bm,bo,br do self:point(a2,a3,aL)if bv>0 then a3=a3+bu;bv=bv-2*bs end;bv=bv+2*bt end end;local function bw(bm,bn,bo,bp)local br=1;if bn>bp then br=-1 end;local bs=bo-bm;local bt=bp-bn;local bx=1;if bs<0 then bx=-1;bs=-bs end;local bv=2*bs-bt;local a2=bm;for a3=bn,bp,br do self:point(a2,a3,aL)if bv>0 then a2=a2+bx;bv=bv-2*bt end;bv=bv+2*bs end end;if math.abs(bp-bn)<math.abs(bo-bm)then if bm>bo then bq(bo,bp,bm,bn)else bq(bm,bn,bo,bp)end else if bn>bp then bw(bo,bp,bm,bn)else bw(bm,bn,bo,bp)end end end,circle=function(self,by,bz,bA,aL)local bB=bA*bA;self:point(by,bz+bA,aL)self:point(by,bz-bA,aL)self:point(by+bA,bz,aL)self:point(by-bA,bz,aL)local a2=1;local a3=math.floor(math.sqrt(bB-1)+0.5)while a2<a3 do self:point(by+a2,bz+a3,aL)self:point(by+a2,bz-a3,aL)self:point(by-a2,bz+a3,aL)self:point(by-a2,bz-a3,aL)self:point(by+a3,bz+a2,aL)self:point(by+a3,bz-a2,aL)self:point(by-a3,bz+a2,aL)self:point(by-a3,bz-a2,aL)a2=a2+1;a3=math.floor(math.sqrt(bB-a2*a2)+0.5)end;if a2==a3 then self:point(by+a2,bz+a3,aL)self:point(by+a2,bz-a3,aL)self:point(by-a2,bz+a3,aL)self:point(by-a2,bz-a3,aL)end end}local bC={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,bD,d)if self.pressed_keys[d]then if bD then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,bE,...)local keys={...}if not(#keys>0)then return false end;for bF,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if bE then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for bF,d in next,keys do self:remove_key(d)end end,manage_event=function(self,bG)if bG.name==b.KEY then self:add_key(bG.key)elseif bG.name==b.KEYUP then self:remove_key(bG.key)end end}local bH={}bH={Clock={new=function(bI)local bJ={enabled=true,oneshot=false,clock=os.clock(),interval=bI,callbacks={onClock=function()end}}setmetatable(bJ,bH.Clock)return bJ end,event=function(self,bG)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,bG)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a2,a3,bf,a_,b0)local bK={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_CENTER,text=bf,pos=h.Vector2.new(a2,a3),colors={foreground=a_,background=b0},callbacks={onDraw=function()end}}setmetatable(bK,bH.Label)return bK end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bL=g.split(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,bM in next,bL do b4:write(self.pos.x,self.pos.y+d-1,bM,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then local bN=0;for d,bM in next,bL do if d==1 then bN=math.floor(#bM/2)b4:write(self.pos.x,self.pos.y,bM,self.colors.foreground,self.colors.background)else b4:write(self.pos.x+bN-math.floor(#bM/2),self.pos.y+d-1,bM,self.colors.foreground,self.colors.background)end end end end},Button={new=function(a2,a3,aP,aQ,bf,a_,bO,bP)local bQ={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bf,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),timed={enabled=false,clock=bH.Clock.new(0.5)},colors={foreground=a_,active_background=bO,unactive_background=bP},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}bQ.timed.clock.binded_button=bQ;bQ.timed.clock.oneshot=true;bQ.timed.clock:stop()f.set_callback(bQ.timed.clock,b.ONCLOCK,function(self,bG)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,bG)self.binded_button.callbacks.onTimeout(self.binded_button,bG)end)setmetatable(bQ,bH.Button)return bQ end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then b4:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else b4:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local bL=g.split(self.text,"\n")local bR=math.floor((self.size.y-#bL)/2)+self.pos.y;for bl=0,#bL-1 do local bM=bL[bl+1]local bS;if self.text_alignment==b.ALIGN_LEFT then bS=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then bS=math.floor((self.size.x-#bM)/2)+self.pos.x end;b4:write(bS,bR+bl,bM,self.colors.foreground)end end,event=function(self,bG)if self.hidden then return false end;if bG.name==b.TOUCH then if k.is_area_pressed(bG.x,bG.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(bG)return true else self.callbacks.onFailedPress(self,bG)end elseif bC:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(bG)end;if self.timed.enabled then self.timed.clock:event(bG)end end,press=function(self,bG)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,bG)end else self.active=not self.active;self.callbacks.onPress(self,bG)end end},Progressbar={new=function(a2,a3,aP,aQ,bT,ai,aj,a_,bU,bV)local bW={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),value={max=aj,min=ai,current=bT,draw_percentage=true,percentage_precision=2},colors={foreground=a_,filled_background=bU,unfilled_background=bV},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(bW,bH.Progressbar)return bW end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bX=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local bY=math.floor(self.size.x*bX)b4:rectangle(self.pos.x,self.pos.y,bY,self.size.y,self.colors.filled_background)b4:rectangle(self.pos.x+bY,self.pos.y,self.size.x-bY,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local bZ=g.format_number(bX*100,self.value.percentage_precision).."%"local b_=math.floor((self.size.x-#bZ)/2)+self.pos.x;local bR=math.floor((self.size.y-1)/2)+self.pos.y;b4:write(b_,bR,bZ,self.colors.foreground)end end,event=function(self,bG)if self.hidden then return false end;if bG.name==b.TOUCH then if k.is_area_pressed(bG.x,bG.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,bG)end end end,set=function(self,I)local c0=h.constrain(I,self.value.min,self.value.max)self.value.current=c0 end},Memo={new=function(a2,a3,aP,aQ,a_,b0)local c1={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=bH.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=a_,background=b0,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end}}c1.cursor.blink.binded_cursor=c1.cursor;f.set_callback(c1.cursor.blink,b.ONCLOCK,function(self,bG)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(c1,bH.Memo)return c1 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)b4:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local c2=self.cursor.pos.x-self.first_visible_char;local c3=self.cursor.pos.y-self.first_visible_line;for a3=1,self.size.y do local c4=a3+self.first_visible_line-1;local c5=self.rich_text[c4]or{}local bM=self.lines[c4]or""local c6=self.first_visible_char;local c7=self.first_visible_char+self.size.x-1;local c8=bM:sub(c6,c7)local c9=self.pos.y+a3-1;if c5.background then if type(c5.background)=="string"then local ca=c5.background:sub(c6,c7)ca=#ca>0 and ca or c5.background:sub(#c5.background)b4:blit(self.pos.x,c9,string.rep(" ",self.size.x),nil,ca)else b4:rectangle(self.pos.x,c9,self.size.x,1,c5.background)end end;if c5.foreground then if type(c5.foreground)=="string"then local cb=c5.foreground:sub(c6,c7)cb=#cb>0 and cb or c5.foreground:sub(#c5.foreground)b4:blit(self.pos.x,c9,c8,cb)else b4:write(self.pos.x,c9,c8,c5.foreground)end else b4:write(self.pos.x,c9,c8,self.colors.foreground)end end;if self.cursor.visible and c2>=0 and c2<self.size.x and c3>=0 and c3<self.size.y then b4:write(c2+self.pos.x,c3+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,bG)if self.hidden then return false end;if not self.editable then return false end;if bG.name==b.TOUCH then if k.is_area_pressed(bG.x,bG.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,bG)self:focus(true,bG)local a2=bG.x-self.pos.x;local a3=bG.y-self.pos.y;self:set_cursor(a2+self.first_visible_char,a3+self.first_visible_line)return true else self.callbacks.onFailedPress(self,bG)self:focus(false,bG)return false end elseif bG.name==b.DELETED then self:focus(false,bG)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,bG)if bG.name==b.PASTE then self:write(bG.paste)return true elseif bG.name==b.CHAR then if self.callbacks.onChar(self,bG)then return true end;self:write(bG.char)return true elseif bG.name==b.KEY then if self.callbacks.onKey(self,bG)then return true end;if bC:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cc=self.lines[self.cursor.pos.y-1]local cd=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bc=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(cd.."\n"..cc)self:set_cursor(bc,self.cursor.pos.y-1)end;return true elseif bC:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cd=self.lines[self.cursor.pos.y]local ce=self.lines[self.cursor.pos.y+1]if not ce then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bc=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(ce.."\n"..cd)self:set_cursor(bc,self.cursor.pos.y)return true elseif bG.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif bG.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif bG.key==b.KEY_RIGHT then local bM=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#bM+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif bG.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local cf=self.lines[self.cursor.pos.y-1]self:set_cursor(#cf+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif bG.key==b.KEY_BACKSPACE then local bM=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local cg=#self.lines[self.cursor.pos.y-1]+1;local ch=self.cursor.pos.y-1;self:set_cursor(cg,ch)self:write(bM)self:set_cursor(cg,ch)end else local aw=bM:sub(1,self.cursor.pos.x-2)..bM:sub(self.cursor.pos.x)self.lines[self.cursor.pos.y]=aw;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,aw,{aw})end;return true elseif bG.key==b.KEY_DELETE then local bM=self.lines[self.cursor.pos.y]local ci=bM:sub(self.cursor.pos.x)if#ci>0 then local aw=bM:sub(1,self.cursor.pos.x-1)..bM:sub(self.cursor.pos.x+1)self.lines[self.cursor.pos.y]=aw;self.callbacks.onWrite(self,aw,{aw})else local ce=self.lines[self.cursor.pos.y+1]if ce then local cg=self.cursor.pos.x;local ch=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(ce)self:set_cursor(cg,ch)end end;return true elseif bG.key==b.KEY_ENTER then local cj=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local ck=cj:gsub("(%s*).*","%1")self:write("\n"..ck)return true elseif bG.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif bG.key==b.KEY_HOME then local cj=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local ck=cj:gsub("(%s*).*","%1")self:set_cursor(#ck+1,self.cursor.pos.y)return true elseif bC:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local cl=self.lines[self.cursor.pos.y]local ck=cl:gsub("^(%s*).*$","%1")local cm=math.min(#self.tab_spaces,#ck)local aw=cl:sub(cm+1)self.lines[self.cursor.pos.y]=aw;self:set_cursor(self.cursor.pos.x-cm,self.cursor.pos.y)self.callbacks.onWrite(self,aw,{aw})return true elseif bG.key==b.KEY_TAB then local bc=self.cursor.pos.x;local cn=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local co=#self.lines[self.cursor.pos.y]-cn;self:set_cursor(bc+co,self.cursor.pos.y)return true end elseif bG.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,bG)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+bG.direction,1,#self.lines)return true end end end,focus=function(self,cp,bG)if cp then self.focussed=true;self.callbacks.onFocus(self,bG)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,bG)end end,set_cursor=function(self,cg,ch,cq)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then ch=h.constrain(ch,1,self.limits.y)end;if cq then for a3=#self.lines+1,ch do if not self.lines[a3]then self.lines[a3]=""end end else ch=h.constrain(ch,1,#self.lines)end;cg=h.constrain(cg,1,#self.lines[ch]+1)local c2=cg-self.first_visible_char;local c3=ch-self.first_visible_line;if c2>=self.size.x then self.first_visible_char=self.first_visible_char+c2-self.size.x+1 elseif c2<0 then self.first_visible_char=self.first_visible_char+c2 end;if c3>=self.size.y then self.first_visible_line=self.first_visible_line+c3-self.size.y+1 elseif c3<0 then self.first_visible_line=self.first_visible_line+c3 end;self.callbacks.onCursorChange(self,cg,ch)self.cursor.pos=h.Vector2.new(cg,ch)end,write=function(self,...)local bf=g.join({...},"")local bL=g.split(bf,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local K="[^"..g.escape_magic_characters(g.join(self.whitelist,"")).."]"for d,bM in next,bL do bL[d]=bM:gsub(K,"")end elseif#self.blacklist>0 then local K="["..g.escape_magic_characters(g.join(self.blacklist,"")).."]"for d,bM in next,bL do bL[d]=bM:gsub(K,"")end end;if self.limits.y>0 then for a3=1,#self.lines+#bL-1-self.limits.y do table.remove(bL)end;if#bL==0 then return end end;if#bL>1 then for cr,bM in next,bL do if cr==1 then local cs=self.lines[self.cursor.pos.y]local ct=cs:sub(1,self.cursor.pos.x-1)local ci=cs:sub(self.cursor.pos.x)local cu=bL[#bL]if self.limits.x>0 then bM=bM:sub(1,self.limits.x-#ct)cu=cu:sub(1,self.limits.x-#ci)end;self.lines[self.cursor.pos.y]=ct..bM;table.insert(self.lines,self.cursor.pos.y+1,cu..ci)self:set_cursor(#cu+1,self.cursor.pos.y+1)elseif cr==#bL then break else if self.limits.x>0 then bM=bM:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,bM)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cs=self.lines[self.cursor.pos.y]local ct=cs:sub(1,self.cursor.pos.x-1)local ci=cs:sub(self.cursor.pos.x)if self.limits.x>0 then bL[1]=bL[1]:sub(1,self.limits.x-(#ct+#ci))end;self.lines[self.cursor.pos.y]=ct..bL[1]..ci;self:set_cursor(self.cursor.pos.x+#bL[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bf,bL)end,print=function(self,...)local bf=g.join({...},"")local aw=#self.lines>0 and"\n"or""self:write(aw..bf)end,clear=function(self)self.lines={""}self:set_cursor(1,1)end},Window={new=function(a2,a3,aP,aQ,b0,cv)local cw={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),drag_options={enabled=true,from=h.Vector2.new(1,1)},shadow={enabled=cv,offset=h.Vector2.new(1,1)},elements={},colors={background=b0,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end}}setmetatable(cw,bH.Window)return cw end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then b4:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;b4:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,bG)if self.hidden then return false end;local cx=self:event_elements(bG)if not cx then if bG.name==b.TOUCH then if k.is_area_pressed(bG.x,bG.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=h.Vector2.new(bG.x,bG.y)self.focussed=true;self.callbacks.onPress(self,bG)self.callbacks.onFocus(self,bG)return true else self.focussed=false;self.callbacks.onFailedPress(self,bG)self.callbacks.onFocus(self,bG)end elseif bG.name==b.MOUSEDRAG and self.focussed then self:drag(bG.x,bG.y)return true elseif bG.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,bG)end else self.focussed=false;self.callbacks.onFocus(self,bG)end;return cx end,drag=function(self,a2,a3)if self.drag_options.enabled then local cy=h.Vector2.new(a2-self.drag_options.from.x,a3-self.drag_options.from.y)self.pos=self.pos+cy;for d,cz in next,self.elements do if cz.pos then cz.pos=cz.pos+cy end end;self.drag_options.from=h.Vector2.new(a2,a3)end end,set_elements=function(self,cA,cB)self.elements={}for d,cz in next,cA do if cB then cz.pos=self.pos+cz.pos-h.Vector2.ONE end;table.insert(self.elements,cz)end end,draw_elements=function(self)for d=#self.elements,1,-1 do local cz=self.elements[d]if cz.draw then cz:draw()end end end,event_elements=function(self,bG)local cx=false;for d,cz in next,self.elements do if cz.event then local cC=cz:event(bG)cx=cx or cC;if cC then bG={name=b.DELETED}end end end;return cx end}}bH.Clock.__index=bH.Clock;bH.Label.__index=bH.Label;bH.Button.__index=bH.Button;bH.Progressbar.__index=bH.Progressbar;bH.Memo.__index=bH.Memo;bH.Window.__index=bH.Window;local cD={}cD={new=function(cE)local cF={draw_priority=b.LOW_PRIORITY,hidden=false,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=bH.Clock.new(cE or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}cF.broadcast_clock.WSS=cF;f.set_callback(cF.broadcast_clock,b.ONCLOCK,function(self,bG)rednet.broadcast(b4.frame,self.WSS.protocol)end)setmetatable(cF,cD)return cF end,draw=function(self)if self.hidden then return false end;self.callbacks.onDraw(self)if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then b4.buffer.background=self.buffer.background;b4.buffer.pixels=self.buffer.pixels end end end,event=function(self,bG)if self.hidden then return false end;if self.callbacks.onEvent(self,bG)then return true end;local cG=false;if bG.name==b.REDNET then if bG.protocol==self.protocol then local aU=bG.message;if self.mode==b.HOST then if aU==b.CONNECTION_REQUEST then rednet.send(bG.from,b.OK,self.protocol)self.users[bG.from]=true;cG=true;self.callbacks.onConnect(self,bG)elseif aU==b.DISCONNECTED then self.users[bG.from]=nil;cG=true;self.callbacks.onDisconnect(self,bG)elseif self.events_whitelist[aU.name or"nil"]and self.users[bG.from]and type(aU)=="table"then if aU.raw then os.queueEvent(table.unpack(aU.raw))end;cG=true end elseif self.mode==b.USER then if bG.from==self.host_id then if aU==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;cG=true;self.callbacks.onDisconnect(self,bG)elseif type(aU)=="table"then self.buffer=aU;cG=true end end end end end;if self.mode==b.USER then if bG.name==b.TOUCH then cG=true end;if self.events_whitelist[tostring(bG.name)]then rednet.send(self.host_id,bG,self.protocol)cG=true end elseif self.mode==b.HOST then self.broadcast_clock:event(bG)end;return cG end,use_side=function(self,cH)self.side=cH end,connect=function(self,cI,cJ,cK)cJ=cJ or 2;cK=cK or 10;rednet.open(self.side)self.host_id=cI;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local cL=0;while true do cL=cL+1;local cM={rednet.receive(self.protocol,cJ)}if cM[1]==cI and cM[2]==b.OK and cM[3]==self.protocol then return b.OK elseif cL>=cK then local cN=string.format("Connection timed out on attempt %d after %d ms",cL,cJ*1000)if#cM>0 then cN=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",cL,cJ*1000)end;cD:close()error(cN,2)end end;self.callbacks.onConnect(self,cI)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}cD.__index=cD;local cO={}cO={new=function(cP,cQ)local cR={options={enabled=false,FPS_target=cP,EPS_target=cQ},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=bH.Clock.new(1/cP),stats_clock=bH.Clock.new(1),FPS_label=bH.Label.new(1,1,"1 FPS",colors.white),EPS_label=bH.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,cS)self.enabled=cS;self.elements.stats_clock.enabled=cS;self.elements.FPS_label.hidden=not cS;self.elements.EPS_label.hidden=not cS end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+h.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}cR.elements.loop.stats_clock.stats=cR.stats;cR.stats.elements=cR.elements.loop;f.set_callback(cR.elements.loop.stats_clock,b.ONCLOCK,function(self,bG)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)cR.stats:enable(false)setmetatable(cR,cO)return cR end,set_monitors=function(self,aW)self.monitors=m.get_monitors(aW)end,set_elements=function(self,cA)self.elements.high_priority={}self.elements.low_priority={}for d,I in next,cA do if I.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,I)else table.insert(self.elements.low_priority,I)end end end,draw_elements=function(self)local function cT(F)for d=#F,1,-1 do local cz=F[d]if cz.draw then cz:draw()end end end;self.callbacks.onDraw(self)local cU=b4.screens;b4.screens=self.monitors;cT(self.elements.low_priority)cT(self.elements.high_priority)for d,cz in next,self.elements.loop do if cz.draw then cz:draw()end end;b4:draw()b4.screens=cU;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,bG)local function aR(F)for d,cz in next,F do if cz.event then if cz:event(bG)then bG={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,bG)then bG={name=b.DELETED}end;if bG.name==b.TOUCH then local cV=false;for cW,aZ in next,self.monitors do if bG.from==cW then cV=true;break end end;if not cV then bG={name=b.DELETED}end end;aR(self.elements.loop)local cX={}for d,cz in next,self.elements.high_priority do if cz.event then local cY=cz:event(bG)if cY then bG={name=b.DELETED}if self.elements.high_priority~=cz then table.insert(cX,{element=cz,key=d})end end end end;if#cX>0 then for d,I in next,cX do table.insert(self.elements.high_priority,1,I.element)table.remove(self.elements.high_priority,I.key+#cX)end end;aR(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;bC:reset()f.set_callback(self.elements.loop.clock,b.ONCLOCK,function(cZ,bG)self.callbacks.onClock(self,bG)self:draw_elements()cZ.interval=1/self.options.FPS_target end)self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local c_=os.startTimer(1/self.options.EPS_target)local d0={os.pullEvent()}local bG=k.format_event_table(d0)bC:manage_event(bG)self:event_elements(bG)os.cancelTimer(c_)end;bC:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}cO.__index=cO;setmetatable(h.Vector2,e)setmetatable(h.Vector3,e)setmetatable(cD,e)for d,cz in next,bH do setmetatable(cz,e)end;setmetatable(cO,e)local d1={...}if d1[1]=="help"then local bL={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,bM in next,bL do m.better_print(term,bM.foreground,bM.background,bM.text)end elseif d1[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif d1[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif d1[1]=="copyright"then local d2={colors.red,colors.yellow,colors.green}local d3=g.split(a.copyright,"\n\n")for d,d4 in next,d3 do m.better_print(term,d2[d],nil,d4)if d<#d3 then read("")end end elseif d1[1]=="setup"then if shell then local d5="YAGUI_PATH"local V="/"..shell.getRunningProgram()l.set(d5,V)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(d5),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif d1[1]=="create"then if d1[2]then local V=shell.resolve(d1[2])if g.get_extension(V)~="lua"then V=V..".lua"end;if fs.exists(V)then m.better_print(term,colors.red,nil,"PATH: \"/",V,"\" already exists, please use another path or delete it.")else local d6=fs.open(V,"w")d6.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")d6.close()m.better_print(term,colors.green,nil,"New project was created at \"/",V,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif d1[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",d1[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local d7={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=b4,input=bC,WSS=cD,wireless_screen_share=cD,gui_elements=bH,Loop=cO}for d,I in next,b do d7[d]=I end;return d7