--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.2",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",CHAR="char",KEY="key",DELETED="DELETED",DISCONNECTED="DISCONNECTED",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONDRAW=3,ONPRESS=4,ONCLOCK=5,ONEVENT=6,ONFOCUS=7,KEY_UP_ARROW=200,KEY_DOWN_ARROW=208,KEY_RIGHT_ARROW=205,KEY_LEFT_ARROW=203,KEY_ENTER=28,KEY_BACKSPACE=14,KEY_DELETE=211,KEY_TAB=15,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3}local c={set_callback=function(d,e,f)if e==b.ONDRAW then d.callbacks.onDraw=f elseif e==b.ONPRESS then d.callbacks.onPress=f elseif e==b.ONCLOCK then d.callbacks.onClock=f elseif e==b.ONEVENT then d.callbacks.onEvent=f elseif e==b.ONFOCUS then d.callbacks.onFocus=f end end}local g={}g={join=function(h,i)if not i then i=""end;local j=""for k=1,#h do local l=h[k]j=j..tostring(l)if k<#h then j=j..i end end;return j end,split=function(j,i)local h={}while true do local m=j:find(i)if m then table.insert(h,j:sub(1,m-1))j=j:sub(m+1)else table.insert(h,j)break end end;return h end,compare_versions=function(n,o)local p=g.split(n,".")local q=g.split(o,".")local r=#p;local s=#q;for t=1,math.min(r,s)do if tonumber(p[t])>tonumber(q[t])then return 1 elseif tonumber(p[t])<tonumber(q[t])then return-1 end end;if r>s then return 1 elseif r<s then return-1 end;return 0 end}local u={}u={vector2=function(v,w)return{x=v,y=w}end,map=function(l,x,y,z,A,B)local C=(l-x)/(y-x)*(A-z)+z;if B then return u.constrain(C,z,A)end;return C end,constrain=function(l,D,E)return math.min(E,math.max(D,l))end}local F={is_area_pressed=function(G,H,v,w,I,J)if G>=v and G<v+I then if H>=w and H<w+J then return true end end;return false end,format_event_table=function(K)local e={}e.name=K[1]if e.name=="mouse_click"then e.name=b.TOUCH;e.from="terminal"e.button=K[2]e.x=K[3]e.y=K[4]return e elseif e.name=="monitor_touch"then e.name=b.TOUCH;e.from=K[2]e.button=1;e.x=K[3]e.y=K[4]return e elseif e.name=="char"then e.name=b.CHAR;e.char=K[2]return e elseif e.name=="key"then e.name=b.KEY;e.key=K[2]return e elseif e.name=="mouse_drag"then e.name=b.MOUSEDRAG;e.button=K[2]e.x=K[3]e.y=K[4]return e end;table.remove(K,1)e.parameters=K;return e end}local L={_path="/.settings",set=function(self,M,l)settings.set(M,l)settings.save(self._path)end,unset=function(self,M)settings.unset(M)settings.save(self._path)end,get=function(M)return settings.get(M)end}local N={get_monitors=function(O)local P={}for k,Q in pairs(O)do if Q=="terminal"then P[Q]=term else if peripheral.getType(Q)=="monitor"then P[Q]=peripheral.wrap(Q)end end end;return P end,better_print=function(R,S,T,...)local U=g.join({...},"")local V=R.getTextColor()local W=R.getBackgroundColor()if S then R.setTextColor(S)end;if T then R.setBackgroundColor(T)end;print(U)R.setTextColor(V)R.setBackgroundColor(W)end}local X={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,v,w)v=tostring(v)w=tostring(w)if self.pixels[v]then if self.pixels[v][w]then return true end end;return false end,get_pixel=function(self,v,w)v=tostring(v)w=tostring(w)if self:is_pixel_custom(v,w)then return self.pixels[v][w]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,v,w,char,S,T)v=tostring(v)w=tostring(w)local Y=self:get_pixel(v,w)if char and#char==1 then Y.char=char end;if S then Y.foreground=S end;if T then Y.background=T end;if not self.pixels[v]then self.pixels[v]={}end;self.pixels[v][w]=Y end,clear=function(self)self.pixels={}end},set_screens=function(self,Z)self.screens=N.get_monitors(Z)end,clear=function(self)self.buffer:clear()end,draw=function(self)local _=self.screens;local a0=self.buffer;for a1,a2 in pairs(_)do local a3=a2.getBackgroundColor()local a4=a2.getTextColor()local a5,a6=a2.getCursorPos()local I,J=a2.getSize()for v=1,I do for w=1,J do a2.setCursorPos(v,w)local Y=a0:get_pixel(v,w)a2.setBackgroundColor(Y.background)a2.setTextColor(Y.foreground)a2.write(Y.char)end end;a2.setBackgroundColor(a3)a2.setTextColor(a4)a2.setCursorPos(a5,a6)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,v,w,a7)self.buffer:set_pixel(v,w," ",a7,a7)end,write=function(self,v,w,a8,S,T)for a9=0,#a8-1 do char=a8:sub(a9+1,a9+1)self.buffer:set_pixel(v+a9,w,char,S,T)end end,rectangle=function(self,v,w,I,J,a7)for a9=0,I-1 do for aa=0,J-1 do self:point(v+a9,w+aa,a7)end end end,line=function(self,ab,ac,ad,ae,a7)local function af(ab,ac,ad,ae)local ag=1;if ab>ad then ag=-1 end;local ah=ad-ab;local ai=ae-ac;local aj=1;if ai<0 then aj=-1;ai=-ai end;local ak=2*ai-ah;local w=ac;for v=ab,ad,ag do self:point(v,w,a7)if ak>0 then w=w+aj;ak=ak-2*ah end;ak=ak+2*ai end end;local function al(ab,ac,ad,ae)local ag=1;if ac>ae then ag=-1 end;local ah=ad-ab;local ai=ae-ac;local am=1;if ah<0 then am=-1;ah=-ah end;local ak=2*ah-ai;local v=ab;for w=ac,ae,ag do self:point(v,w,a7)if ak>0 then v=v+am;ak=ak-2*ai end;ak=ak+2*ah end end;if math.abs(ae-ac)<math.abs(ad-ab)then if ab>ad then af(ad,ae,ab,ac)else af(ab,ac,ad,ae)end else if ac>ae then al(ad,ae,ab,ac)else al(ab,ac,ad,ae)end end end,circle=function(self,an,ao,ap,a7)local aq=ap*ap;self:point(an,ao+ap,a7)self:point(an,ao-ap,a7)self:point(an+ap,ao,a7)self:point(an-ap,ao,a7)local v=1;local w=math.floor(math.sqrt(aq-1)+0.5)while v<w do self:point(an+v,ao+w,a7)self:point(an+v,ao-w,a7)self:point(an-v,ao+w,a7)self:point(an-v,ao-w,a7)self:point(an+w,ao+v,a7)self:point(an+w,ao-v,a7)self:point(an-w,ao+v,a7)self:point(an-w,ao-v,a7)v=v+1;w=math.floor(math.sqrt(aq-v*v)+0.5)end;if v==w then self:point(an+v,ao+w,a7)self:point(an+v,ao-w,a7)self:point(an-v,ao+w,a7)self:point(an-v,ao-w,a7)end end}local ar={}ar={side=nil,protocol="YAGUI-"..a.ver.."_WSS",host_prefix="_Host:",default_timeout=0.5,open=function(self,as)rednet.open(as)self.side=as end,close=function(self)rednet.close(self.side)self.side=nil end,server={root={},servername=nil,hostname=nil,host=function(self,at)if not at then at=os.getComputerID()end;at=tostring(at)local au=self.root.protocol..self.root.host_prefix..at;if rednet.lookup(au,at)then return false end;rednet.host(au,at)self.servername=au;self.hostname=at;return true end,unhost=function(self)rednet.broadcast(b.DISCONNECTED,self.servername)rednet.unhost(self.servername,self.hostname)self.servername=nil;self.hostname=nil end,broadcast=function(self)rednet.broadcast(X.frame,self.servername)end},client={root={},servername=nil,host_id=nil,connect=function(self,at)at=tostring(at)local au=self.root.protocol..self.root.host_prefix..at;local av=rednet.lookup(au,at)if not av then return false end;self.servername=au;self.host_id=av;return true end,disconnect=function(self)self.servername=nil;self.host_id=nil end,listen=function(self,aw)if not aw then aw=self.root.default_timeout end;local ax={rednet.receive(self.servername,aw)}if ax[1]==self.host_id then local a0=ax[2]if not a0 then return false end;if a0==b.DISCONNECTED then return a0 end;X.buffer.background=a0.background;X.buffer.pixels=a0.pixels;return true end;return false end}}ar.server.root=ar;ar.client.root=ar;local ay={}ay={Clock={new=function(az)local aA={enabled=true,oneshot=false,clock=os.clock(),interval=az,callbacks={onClock=function()end}}setmetatable(aA,ay.Clock)return aA end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,formatted_event)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(v,w,a8,S,T)local aB={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text=a8,pos=u.vector2(v,w),colors={foreground=S,background=T},callbacks={onDraw=function()end,onPress=function()end}}setmetatable(aB,ay.Label)return aB end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)X:write(self.pos.x,self.pos.y,self.text,self.colors.foreground,self.colors.background)end,event=function(self,formatted_event)if formatted_event.name==b.TOUCH then if F.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,#self.text,1)then self.callbacks.onPress(self,formatted_event)end end end},Button={new=function(v,w,I,J,a8,S,aC,aD)local aE={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,text=a8,pos=u.vector2(v,w),size=u.vector2(I,J),timed={enabled=false,clock=ay.Clock.new(0.5)},colors={foreground=S,active_background=aC,unactive_background=aD},callbacks={onDraw=function()end,onPress=function()end}}aE.timed.clock.binded_button=aE;aE.timed.clock.oneshot=true;c.set_callback(aE.timed.clock,b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)end)setmetatable(aE,ay.Button)return aE end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then X:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else X:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local aF=g.split(self.text,"\n")local aG=math.floor((self.size.y-#aF)/2)+self.pos.y;for aa=0,#aF-1 do local l=aF[aa+1]local aH=math.floor((self.size.x-#l)/2)+self.pos.x;X:write(aH,aG+aa,l,self.colors.foreground)end end,event=function(self,formatted_event)if formatted_event.name==b.TOUCH then if F.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self:press()end;return true end end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self)self.active=not self.active;self.callbacks.onPress(self,formatted_event)end},Progressbar={new=function(v,w,I,J,aI,D,E,S,aJ,aK)local aL={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=u.vector2(v,w),size=u.vector2(I,J),value={max=E,min=D,current=aI,draw_percentage=true},colors={foreground=S,filled_background=aJ,unfilled_background=aK},callbacks={onDraw=function()end,onPress=function()end}}setmetatable(aL,ay.Progressbar)return aL end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local aM=u.map(self.value.current,self.value.min,self.value.max,0,1,true)local aN=math.floor(self.size.x*aM)X:rectangle(self.pos.x,self.pos.y,aN,self.size.y,self.colors.filled_background)X:rectangle(self.pos.x+aN,self.pos.y,self.size.x-aN,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local aO=tostring(aM*100).."%"local aP=math.floor((self.size.x-#aO)/2)+self.pos.x;local aG=math.floor((self.size.y-1)/2)+self.pos.y;X:write(aP,aG,aO,self.colors.foreground)end end,event=function(self,formatted_event)if formatted_event.name==b.TOUCH then if F.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,l)local aQ=u.constrain(l,self.value.min,self.value.max)self.value.current=aQ end},Memo={new=function(v,w,I,J,S,T)local aR={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=u.vector2(v,w),size=u.vector2(I,J),lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=ay.Clock.new(0.5),pos=u.vector2(1,1)},colors={foreground=S,background=T,cursor=colors.white},callbacks={onDraw=function()end,onFocus=function()end}}aR.cursor.blink.binded_cursor=aR.cursor;c.set_callback(aR.cursor.blink,b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(aR,ay.Memo)return aR end,draw=function(self)if self.hidden then return end;X:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local aS=self.cursor.pos.x-self.first_visible_char;local aT=self.cursor.pos.y-self.first_visible_line;if aS>=self.size.x then self.first_visible_char=self.first_visible_char+aS-self.size.x+1;aS=self.cursor.pos.x-self.first_visible_char-1 elseif aS<1 then self.first_visible_char=self.first_visible_char+aS;aS=0 end;if aT>=self.size.y then self.first_visible_line=self.first_visible_line+aT-self.size.y+1;aT=self.cursor.pos.y-self.first_visible_line-1 elseif aT<1 then self.first_visible_line=self.first_visible_line+aT;aT=0 end;for w=1,self.size.y do local aU=self.lines[w+self.first_visible_line-1]or""local aV=aU:sub(self.first_visible_char,self.first_visible_char+self.size.x-1)X:write(self.pos.x,self.pos.y+w-1,aV,self.colors.foreground)end;if self.cursor.visible then X:point(aS+self.pos.x,aT+self.pos.y,self.colors.cursor)end end,event=function(self,formatted_event)if formatted_event.name==b.TOUCH then if F.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.focussed=true;self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)return false end elseif formatted_event.name==b.DELETED then self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.CHAR then self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if formatted_event.key==b.KEY_UP_ARROW then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)elseif formatted_event.key==b.KEY_DOWN_ARROW then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)elseif formatted_event.key==b.KEY_RIGHT_ARROW then local aU=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#aU+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end elseif formatted_event.key==b.KEY_LEFT_ARROW then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local aW=self.lines[self.cursor.pos.y-1]self:set_cursor(#aW+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif formatted_event.key==b.KEY_BACKSPACE then local aU=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local aX=#self.lines[self.cursor.pos.y-1]+1;local aY=self.cursor.pos.y-1;self:set_cursor(aX,aY)self:write(aU)self:set_cursor(aX,aY)else self.lines[self.cursor.pos.y]=aU:sub(1,self.cursor.pos.x-2)..aU:sub(self.cursor.pos.x)self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif formatted_event.key==b.KEY_DELETE then local aU=self.lines[self.cursor.pos.y]local aZ=aU:sub(self.cursor.pos.x)if#aZ>0 then self.lines[self.cursor.pos.y]=aU:sub(1,self.cursor.pos.x-1)..aU:sub(self.cursor.pos.x+1)else local a_=self.lines[self.cursor.pos.y+1]if a_ then local aX=self.cursor.pos.x;local aY=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(a_)self:set_cursor(aX,aY)end end elseif formatted_event.key==b.KEY_ENTER then self:write("\n")elseif formatted_event.key==b.KEY_TAB then self:write("  ")end;return true end end end,set_cursor=function(self,aX,aY,b0)if b0 then for w=#self.lines+1,aY do if not self.lines[w]then self.lines[w]=""end end else aY=u.constrain(aY,1,#self.lines)end;aX=u.constrain(aX,1,#self.lines[aY]+1)self.cursor.pos=u.vector2(aX,aY)end,write=function(self,...)local a8=g.join({...},"")local b1=g.split(a8,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#b1>1 then for b2,aU in pairs(b1)do if b2<=1 then local b3=self.lines[self.cursor.pos.y]local b4=b3:sub(1,self.cursor.pos.x-1)local aZ=b3:sub(self.cursor.pos.x)local b5=b1[#b1]self.lines[self.cursor.pos.y]=b4 ..aU;self:set_cursor(1,self.cursor.pos.y+1,true)table.insert(self.lines,self.cursor.pos.y,b5 ..aZ)self:set_cursor(#b5+1,self.cursor.pos.y)elseif b2>=#b1 then break else table.insert(self.lines,self.cursor.pos.y,aU)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local b3=self.lines[self.cursor.pos.y]local b4=b3:sub(1,self.cursor.pos.x-1)local aZ=b3:sub(self.cursor.pos.x)self.lines[self.cursor.pos.y]=b4 ..a8 ..aZ;self:set_cursor(self.cursor.pos.x+#a8,self.cursor.pos.y)end end},Window={new=function(v,w,I,J,T,b6)local b7={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=u.vector2(v,w),size=u.vector2(I,J),drag_options={enabled=true,from=u.vector2(1,1)},shadow={enabled=b6,offset=u.vector2(1,1)},elements={},colors={background=T,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end}}setmetatable(b7,ay.Window)return b7 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow then X:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;X:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,formatted_event)local b8=false;if formatted_event.name==b.TOUCH then if F.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=u.vector2(formatted_event.x,formatted_event.y)b8=true;self.callbacks.onPress(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG then self:drag(formatted_event.x,formatted_event.y)b8=true end;local b9=self:event_elements(formatted_event)return b8 or b9 end,drag=function(self,v,w)if self.drag_options.enabled then local ba=u.vector2(v-self.drag_options.from.x,w-self.drag_options.from.y)self.pos=u.vector2(self.pos.x+ba.x,self.pos.y+ba.y)for k,bb in pairs(self.elements)do if bb.pos then bb.pos=u.vector2(bb.pos.x+ba.x,bb.pos.y+ba.y)end end;self.drag_options.from=u.vector2(v,w)end end,set_elements=function(self,bc)self.elements={}for k,l in pairs(bc)do table.insert(self.elements,l)end end,draw_elements=function(self)for k=#self.elements,1,-1 do local bb=self.elements[k]if bb.draw then bb:draw()end end end,event_elements=function(self,formatted_event)local b8=false;for k,bb in pairs(self.elements)do local bd=bb:event(formatted_event)b8=b8 or bd;if bd then formatted_event={name=b.DELETED}end end;return b8 end}}ay.Clock.__index=ay.Clock;ay.Label.__index=ay.Label;ay.Button.__index=ay.Button;ay.Progressbar.__index=ay.Progressbar;ay.Memo.__index=ay.Memo;ay.Window.__index=ay.Window;local be={}be={new=function(bf,bg)local bh={options={enabled=false,FPS_target=bf,EPS_target=bg},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=ay.Clock.new(1/bf),stats_clock=ay.Clock.new(1),FPS_label=ay.Label.new(1,1,"1 FPS",colors.white),EPS_label=ay.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=u.vector2(1,1),elements=nil,enabled=true,enable=function(self,bi)self.enabled=bi;self.elements.stats_clock.enabled=bi;self.elements.FPS_label.hidden=not bi;self.elements.EPS_label.hidden=not bi end,FPS=0,EPS=0},callbacks={onDraw=function()end,onClock=function()end,onEvent=function()end}}bh.elements.loop.stats_clock.stats=bh.stats;bh.stats.elements=bh.elements.loop;c.set_callback(bh.elements.loop.stats_clock,b.ONCLOCK,function(self,formatted_event)self.stats.elements.FPS_label.pos=self.stats.pos;self.stats.elements.EPS_label.pos=u.vector2(self.stats.pos.x,self.stats.pos.y+1)self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)bh.stats:enable(false)setmetatable(bh,be)return bh end,set_monitors=function(self,O)self.monitors=N.get_monitors(O)end,set_elements=function(self,bc)self.elements.high_priority={}self.elements.low_priority={}for k,l in pairs(bc)do if l.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,l)else table.insert(self.elements.low_priority,l)end end end,draw_elements=function(self)local function bj(h)for k=#h,1,-1 do local bb=h[k]if bb.draw then bb:draw()end end end;self.callbacks.onDraw(self)local bk=X.screens;X.screens=self.monitors;bj(self.elements.low_priority)bj(self.elements.high_priority)for k,bb in pairs(self.elements.loop)do if bb.draw then bb:draw()end end;X:draw()X.screens=bk;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,bl)local formatted_event=F.format_event_table(bl)local function K(h)for k,bb in pairs(h)do if bb:event(formatted_event)then formatted_event={name=b.DELETED}end end end;self.callbacks.onEvent(self,formatted_event)if formatted_event.name==b.TOUCH then local bm=false;for bn,R in pairs(self.monitors)do if formatted_event.from==bn then bm=true;break end end;if not bm then formatted_event={name=b.DELETED}end end;K(self.elements.loop)local bo={}for k,bb in pairs(self.elements.high_priority)do local bp=bb:event(formatted_event)if bp then formatted_event={name=b.DELETED}if self.elements.high_priority~=bb then table.insert(bo,{element=bb,key=k})end end end;if#bo>0 then for k,l in pairs(bo)do table.insert(self.elements.high_priority,1,l.element)table.remove(self.elements.high_priority,l.key+#bo)end end;K(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;c.set_callback(self.elements.loop.clock,b.ONCLOCK,function(bq,formatted_event)self.callbacks.onClock(self,formatted_event)self:draw_elements()bq.interval=1/self.options.FPS_target end)while self.enabled do local br=os.startTimer(1/self.options.EPS_target)local bl={os.pullEvent()}self:event_elements(bl)os.cancelTimer(br)end end,stop=function(self)self.enabled=false end}be.__index=be;local bs={...}if bs[1]=="help"then local b1={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil}}for k,aU in pairs(b1)do N.better_print(term,aU.foreground,aU.background,aU.text)end elseif bs[1]=="info"then N.better_print(term,colors.red,nil,"Library Version: ",a.ver)N.better_print(term,colors.yellow,nil,"Library Author: ",a.author)N.better_print(term,colors.green,nil,"Library Website: ",a.website)elseif bs[1]=="ver"then N.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif bs[1]=="copyright"then local bt={colors.red,colors.yellow,colors.green}local bu=g.split(a.copyright,"\n\n")for k,bv in pairs(bu)do N.better_print(term,bt[k],nil,bv)if k<#bu then read("")end end elseif bs[1]=="setup"then if shell then local bw="YAGUI_PATH"local bx="/"..shell.getRunningProgram()L:set(bw,bx)N.better_print(term,colors.green,nil,"Lib path was set to ",L.get(bw))else N.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE")end elseif bs[1]then N.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",bs[1],"\"")N.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local by={info=a,generic_utils=c,string_utils=g,math_utils=u,event_utils=F,setting_utils=L,monitor_utils=N,screen_buffer=X,WSS=ar,wireless_screen_share=ar,gui_elements=ay,Loop=be}for k,l in pairs(b)do by[k]=l end;return by