--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.34",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSEMOVE="mouse_move",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",TERMRESIZE="term_resize",DELETED="DELETED",NONE="NONE",ALL="ALL",SEND="SEND",RECEIVE="RECEIVE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,ONSEND=17,ONRECEIVE=18,ONDRAG=19,ONRESIZE=20,ONPASTE=21,ONHOVER=22,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2,ALIGN_RIGHT=3}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={TOP=string.char(131),BOTTOM=string.char(143),LEFT=string.char(149),RIGHT=string.char(149),MIDDLE=string.char(140),TOPLEFT=string.char(151),TOPRIGHT=string.char(148),BOTTOMLEFT=string.char(138),BOTTOMRIGHT=string.char(133),MIDDLELEFT=string.char(132),MIDDLERIGHT=string.char(136)}local f={BG=string.char(30),FG=string.char(31),UP_ARROW=string.char(24),DOWN_ARROW=string.char(25)}local g={}local h={}local i={}local j={}local k={}local l={}local m={}local n={}g={set_callback=function(o,p,q)o:set_callback(p,q)end,get_computer_type=function()local r=b.COMPUTER;if turtle then r=b.TURTLE elseif pocket then r=b.POCKET end;return r,term.isColor()end,expect=function(s,...)local t={...}local u="[/%.,]"s=s or"unknown"s=tostring(s)local v=false;local w;for x=1,#t,2 do local y=tostring(t[x])local z=true;local A;for B,C in next,h.split(y,u)do local D=t[x+1]local E=type(D)if E~=C then A=E else z=false;break end end;if z then local F=y:gsub(u,", ")w=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",s,(x+1)/2,F,A)v=true;break end end;if v then error(w,3)return false end;return true end}h={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=table.concat,split=function(G,H)if not string.find(G,H)then return{G}end;local I={}local J=table.concat({"(.-)",H,"()"})local K;for L,M in string.gfind(G,J)do table.insert(I,L)K=M end;table.insert(I,string.sub(G,K))return I end,split_by_char=function(G,N)local O={}local P=1;for x=1,#G do if G:sub(x,x)==N then table.insert(O,x==P and""or G:sub(P,x-1))P=x+1 end end;table.insert(O,G:sub(P,#G))return O end,compare_versions=function(Q,R)local S=h.split(Q,".")local T=h.split(R,".")local U=#S;local V=#T;for x=1,math.min(U,V)do if tonumber(S[x])>tonumber(T[x])then return 1 elseif tonumber(S[x])<tonumber(T[x])then return-1 end end;if U>V then return 1 elseif U<V then return-1 end;return 0 end,escape_magic_characters=function(G)for d,W in next,h.magic_characters do G=G:gsub(table.concat({"[%",W,"]"}),table.concat({"%%%",W}))end;return G end,get_extension=function(X)local Y,Z=X:gsub(".*%.","")if Z>0 then return Y end;return""end,format_number=function(_,a0)_=tostring(_)a0=a0 or 0;local a1=_:gsub("(.*)%..*","%1")if a0<=0 then return a1 end;local a2=#a1+1;local a3=_:sub(a2+1,a2+a0)a3=a3:reverse():gsub("0*(.*)","%1"):reverse()if#a3>0 then return table.concat({a1,".",a3})end;return a1 end,trim=function(G)return G:gsub("^%s*(.*)%s*$","%1")end}i={Vector2={new=function(a4,a5)local a6={x=a4 or 0,y=a5 or 0}setmetatable(a6,i.Vector2)return a6 end,duplicate=function(self)return i.Vector2.new(self.x,self.y)end,length_sq=function(self)return self.x*self.x+self.y*self.y end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y)end,unit=function(self)return self/self:length()end,dot=function(self,a7)return self.x*a7.x+self.y*a7.y end,cross=function(self,a7)return self.x*a7.y-self.y*a7.x end,rotate=function(self,a8)local a9=math.cos(a8)local aa=math.sin(a8)return i.Vector2.new(a9*self.x-aa*self.y,aa*self.x+a9*self.y)end,string=function(self,a0)if a0 then return string.format(table.concat({"(%.",a0,"f; %.",a0,"f)"}),self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a7)return i.Vector2.new(self.x+a7.x,self.y+a7.y)end,__sub=function(self,a7)return i.Vector2.new(self.x-a7.x,self.y-a7.y)end,__mul=function(self,_)if type(self)=="number"then return i.Vector2.new(_.x*self,_.y*self)else return i.Vector2.new(self.x*_,self.y*_)end end,__div=function(self,_)return i.Vector2.new(self.x/_,self.y/_)end,__eq=function(self,a7)return self.x==a7.x and self.y==a7.y end,__lt=function(self,a7)return self:length_sq()<a7:length_sq()end,__le=function(self,a7)return self:length_sq()<=a7:length_sq()end},Vector3={new=function(a4,a5,ab)local ac={x=a4 or 0,y=a5 or 0,z=ab or 0}setmetatable(ac,i.Vector3)return ac end,duplicate=function(self)return i.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return self.x*self.x+self.y*self.y+self.z*self.z end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y+self.z*self.z)end,unit=function(self)return self/self:length()end,dot=function(self,a7)return self.x*a7.x+self.y*a7.y+self.z*a7.z end,cross=function(self,a7)return i.Vector3.new(self.y*a7.z-self.z*a7.y,self.z*a7.x-self.x*a7.z,self.x*a7.y-self.y*a7.x)end,rotate=function(self,ad,a8)local a9=math.cos(a8)return a9*self+math.sin(a8)*ad:cross(self)+(1-a9)*ad:dot(self)*ad end,string=function(self,a0)if a0 then return string.format(table.concat({"(%.",a0,"f; %.",a0,"f; %.",a0,"f)"}),self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a7)return i.Vector3.new(self.x+a7.x,self.y+a7.y,self.z+a7.z)end,__sub=function(self,a7)return i.Vector3.new(self.x-a7.x,self.y-a7.y,self.z-a7.z)end,__mul=function(self,_)if type(self)=="number"then return i.Vector3.new(_.x*self,_.y*self,_.z*self)else return i.Vector3.new(self.x*_,self.y*_,self.z*_)end end,__div=function(self,_)return i.Vector3.new(self.x/_,self.y/_,self.z/_)end,__eq=function(self,a7)return self.x==a7.x and self.y==a7.y and self.z==a7.z end,__lt=function(self,a7)return self:length_sq()<a7:length_sq()end,__le=function(self,a7)return self:length_sq()<=a7:length_sq()end},map=function(ae,af,ag,ah,ai,aj)local ak=(ae-af)/(ag-af)*(ai-ah)+ah;if aj then return i.constrain(ak,ah,ai)end;return ak end,constrain=function(ae,al,am)return math.min(am,math.max(al,ae))end,round=function(_)return math.floor(_+0.5)end,round_numbers=function(...)local an={...}local ao={}for d,_ in next,an do table.insert(ao,i.round(_))end;return table.unpack(ao)end,floor_numbers=function(...)local an={...}local ap={}for d,_ in next,an do table.insert(ap,math.floor(_))end;return table.unpack(ap)end,ceil_numbers=function(...)local an={...}local aq={}for d,_ in next,an do table.insert(aq,math.ceil(_))end;return table.unpack(aq)end}i.Vector2.__index=i.Vector2;i.Vector3.__index=i.Vector3;i.Vector2.ONE=i.Vector2.new(1,1)i.Vector2.UP=i.Vector2.new(0,-1)i.Vector2.DOWN=i.Vector2.new(0,1)i.Vector2.LEFT=i.Vector2.new(-1,0)i.Vector2.RIGHT=i.Vector2.new(1,0)i.Vector2.ZERO=i.Vector2.new(0,0)i.Vector3.ONE=i.Vector3.new(1,1,1)i.Vector3.UP=i.Vector3.new(0,1,0)i.Vector3.DOWN=i.Vector3.new(0,-1,0)i.Vector3.LEFT=i.Vector3.new(-1,0,0)i.Vector3.RIGHT=i.Vector3.new(1,0,0)i.Vector3.FORWARD=i.Vector3.new(0,0,1)i.Vector3.BACK=i.Vector3.new(0,0,-1)i.Vector3.ZERO=i.Vector3.new(0,0,0)j={has_value=function(ar,ae)for as,at in next,ar do if at==ae then return true,as end end;return false,nil end,has_key=function(ar,d)if ar[d]~=nil then return true,ar[d]end;return false,nil end,serialise=function(ar,au,av,aw,ax,ay,az,aA,aB)local au=au or 0;local az=az or"  "local aC=0;local aA=aA or"\n"local aB=aB or" "if not av then az,aA,aB="","",""end;local aD="root"local aE={[ar]=aD}local function aF(ar,X)local aG=az:rep(aC+1)local aH=table.concat({"{",aA})local function aI(ar)local aJ=#ar;local aK=0;for d,ae in next,ar do local aL=type(d)local aM;if aL=="string"or aL=="table"then aM=string.format("%q",tostring(d))else aM=tostring(d)end;if not ay and d=="__index"then ae={}end;local aN=type(ae)if aL=="number"and d<=aJ and d==aK+1 then aK=d;aH=table.concat({aH,aG})else aH=table.concat({aH,string.format("%s[%s]%s=%s",aG,aM,aB,aB)})end;if aN=="table"then if not next(ae)then aH=table.concat({aH,"{}"})elseif au<=-1 or aC<au then if aE[ae]and not aw then aH=table.concat({aH,string.format("%q",aE[ae])})else local aO=table.concat({X,"[",aM,"]"})aE[ae]=aO;aC=aC+1;aH=table.concat({aH,aF(ae,aO)})aC=aC-1 end else aH=table.concat({aH,"{}"})end elseif aN=="string"or aN=="function"then aH=table.concat({aH,string.format("%q",tostring(ae))})else aH=table.concat({aH,string.format("%s",tostring(ae))})end;if next(ar,d)then aH=table.concat({aH,",",aA})else aH=table.concat({aH,aA})end end end;local aP=getmetatable(ar)if ax and aP then aI(aP)if next(ar)then aH=table.concat({aH:sub(1,#aH-#aA),",",aH:sub(#aH-#aA+1)})end end;aI(ar)aH=table.concat({aH,az:rep(aC),"}"})return aH end;return aF(ar,aD)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize,better_unpack=function(ar,x,aQ)x=x or 1;aQ=aQ or#ar;if x<=aQ then return ar[x],j.better_unpack(ar,x+1,aQ)end end,get=function(ar,...)local X={...}local aR=ar;for x=1,#X do aR=aR[X[x]]end;return aR end,set=function(ae,ar,...)local X={...}local aS=table.remove(X)local aT=j.get(ar,table.unpack(X))local aU=aT[aS]aT[aS]=ae;return aU end,better_remove=function(ar,...)local aV={...}local aW=0;for aX=1,#aV do local aY=aV[aX]-aW;ar[aY]=nil;for x=aY,aV[aX+1]and aV[aX+1]-aW+1 or#ar-1 do ar[x],ar[x+1]=ar[x+1]end;aW=aW+1 end end}j.serialize=j.serialise;k={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aZ)return k.colors[aZ]end,paint_to_color=function(a_)return k.paint[a_]end}for d,ae in next,k.colors do k.paint[ae]=d end;l={in_area=function(b0,b1,a4,a5,b2,b3)if b0>=a4 and b0<a4+b2 then if b1>=a5 and b1<a5+b3 then return true end end;return false end,format_event_table=function(b4)local p={}p.name=b4[1]if p.name=="timer"then p.name=b.TIMER;p.id=p[2]elseif p.name=="mouse_click"then p.name=b.TOUCH;p.from="terminal"p.button=b4[2]p.x=b4[3]p.y=b4[4]elseif p.name=="monitor_touch"then p.name=b.TOUCH;p.from=b4[2]p.button=1;p.x=b4[3]p.y=b4[4]elseif p.name=="mouse_drag"then p.name=b.MOUSEDRAG;p.button=b4[2]p.x=b4[3]p.y=b4[4]elseif p.name=="mouse_move"then p.name=b.MOUSEMOVE;p.button=b4[2]p.x=b4[3]p.y=b4[4]elseif p.name=="mouse_up"then p.name=b.MOUSEUP;p.button=b4[2]p.x=b4[3]p.y=b4[4]elseif p.name=="mouse_scroll"then p.name=b.MOUSESCROLL;p.direction=b4[2]p.x=b4[3]p.y=b4[4]elseif p.name=="char"then p.name=b.CHAR;p.char=b4[2]elseif p.name=="key"then p.name=b.KEY;p.key=b4[2]elseif p.name=="key_up"then p.name=b.KEYUP;p.key=b4[2]elseif p.name=="paste"then p.name=b.PASTE;p.paste=b4[2]elseif p.name=="rednet_message"then p.name=b.REDNET;p.from=b4[2]p.message=b4[3]local b5=b4[4]if type(b5)=="number"then p.distance=b5 else p.protocol=tostring(b5)end elseif p.name=="modem_message"then local b6=b4[5]p.name=b.MODEM;p.side=b4[2]p.from=b4[4]p.protocol=b6.sProtocol or""p.message=b6.message elseif p.name=="terminate"then p.name=b.TERMINATE elseif p.name=="term_resize"then p.name=b.TERMRESIZE else p.parameters={}for d=2,#b4 do table.insert(p.parameters,b4[d])end end;p.raw=b4;return p end}m={_path="/.settings",set=function(b7,ae)settings.set(b7,ae)settings.save(m._path)end,unset=function(b7)settings.unset(b7)settings.save(m._path)end,get=function(b7)return settings.get(b7)end}n={get_monitors=function(b8)local b9={}for d,ba in next,b8 do if ba=="terminal"then b9[ba]=term else if peripheral.getType(ba)=="monitor"then b9[ba]=peripheral.wrap(ba)end end end;return b9 end,better_print=function(bb,bc,bd,...)local be=table.concat({...})local bf=bb.getTextColor()local bg=bb.getBackgroundColor()if bc then bb.setTextColor(bc)end;if bd then bb.setBackgroundColor(bd)end;print(be)bb.setTextColor(bf)bb.setBackgroundColor(bg)end,better_clear=function(bb)bb.clear()bb.setCursorPos(1,1)end}local bh={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a4,a5)if self.pixels[a4]then if self.pixels[a4][a5]then return true end end;return false end,get_pixel=function(self,a4,a5)if self:is_pixel_custom(a4,a5)then return self.pixels[a4][a5]end;return{char=" ",foreground=self.background,background=self.background,inverted=false}end,set_pixel=function(self,a4,a5,N,bc,bd,bi)a4,a5=math.floor(a4),math.floor(a5)local bj=self:get_pixel(a4,a5)if N then bj.char=N:sub(1,1)end;if bi then bj.foreground,bj.background=bd or bj.foreground,bc or bj.background else if bj.inverted then bj.foreground,bj.background=bc or bj.background,bd or bj.foreground else bj.foreground,bj.background=bc or bj.foreground,bd or bj.background end end;bj.inverted=bi;if not self.pixels[a4]then self.pixels[a4]={}end;self.pixels[a4][a5]=bj end,clear=function(self)self.pixels={}end},set_screens=function(self,bk)self.screens=n.get_monitors(bk)end,set_monitors=function(self,b8)self:set_screens(b8)end,clear=function(self)self.buffer:clear()end,draw=function(self)local bl=self.screens;local bm=self.buffer;for bn,bo in next,bl do local bp,bq=bo.getCursorPos()local b2,b3=bo.getSize()for a5=1,b3 do local br,bs,bt={},{},{}for a4=1,b2 do local bj=bm:get_pixel(a4,a5)br[#br+1]=bj.char;bs[#bs+1]=k.colors[bj.foreground]bt[#bt+1]=k.colors[bj.background]end;bo.setCursorPos(1,a5)bo.blit(table.concat(br),table.concat(bs),table.concat(bt))end;bo.setCursorPos(bp,bq)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a4,a5,aZ)self.buffer:set_pixel(a4,a5," ",aZ,aZ)end,write=function(self,a4,a5,bu,bc,bd)for bv=0,#bu-1 do local N=bu:sub(bv+1,bv+1)self.buffer:set_pixel(a4+bv,a5,N,bc,bd)end end,blit=function(self,a4,a5,bu,bc,bd)local bw=""local bx=""bc=bc or""bd=bd or""for bv=0,#bu-1 do local N=bu:sub(bv+1,bv+1)local by=bc:sub(bv+1,bv+1)by=#by>0 and by or bw;local bz=bd:sub(bv+1,bv+1)bz=#bz>0 and bz or bx;self.buffer:set_pixel(a4+bv,a5,N,k.paint[by],k.paint[bz])bw=by;bx=bz end end,rectangle=function(self,a4,a5,b2,b3,aZ,bA,bB)if bA then for bv=0,b2-1 do for bC=0,b3-1 do if b3==1 then if b2==1 then self.buffer:set_pixel(a4+bv,a5+bC,e.MIDDLE,bB,aZ,true)else if bv==0 then self.buffer:set_pixel(a4+bv,a5+bC,e.MIDDLERIGHT,bB,aZ,true)elseif bv==b2-1 then self.buffer:set_pixel(a4+bv,a5+bC,e.MIDDLELEFT,bB,aZ,true)else self.buffer:set_pixel(a4+bv,a5+bC,e.MIDDLE,bB,aZ,true)end end elseif bC==0 then if bv==0 then self.buffer:set_pixel(a4+bv,a5+bC,e.TOPLEFT,bB,aZ)elseif bv==b2-1 then self.buffer:set_pixel(a4+bv,a5+bC,e.TOPRIGHT,bB,aZ,true)else self.buffer:set_pixel(a4+bv,a5+bC,e.TOP,bB,aZ)end elseif bC==b3-1 then if bv==0 then self.buffer:set_pixel(a4+bv,a5+bC,e.BOTTOMLEFT,bB,aZ,true)elseif bv==b2-1 then self.buffer:set_pixel(a4+bv,a5+bC,e.BOTTOMRIGHT,bB,aZ,true)else self.buffer:set_pixel(a4+bv,a5+bC,e.BOTTOM,bB,aZ,true)end elseif bv==0 then self.buffer:set_pixel(a4+bv,a5+bC,e.LEFT,bB,aZ)elseif bv==b2-1 then self.buffer:set_pixel(a4+bv,a5+bC,e.RIGHT,bB,aZ,true)else self.buffer:set_pixel(a4+bv,a5+bC," ",aZ,aZ)end end end else for bv=0,b2-1 do for bC=0,b3-1 do self.buffer:set_pixel(a4+bv,a5+bC," ",aZ,aZ)end end end end,nfp_image=function(self,a4,a5,bD,bE,bF,bG,bH)bE,bF=bE or 1,bF or 1;local bv,bC=1,1;for x=1,#bD do if bH and bC>=bH+bF then break end;local N=bD:sub(x,x)if N=="\n"then bv,bC=1,bC+1 else if bC>=bF and bv>=bE and(not bG or bv<bG+bE)then local aZ=k.paint[N]if aZ then self.buffer:set_pixel(a4+bv-bE,a5+bC-bF," ",aZ,aZ)end end;bv=bv+1 end end end,nft_image=function(self,a4,a5,bD,bE,bF,bG,bH)bE,bF=bE or 1,bF or 1;local bv,bC,bI,bJ,bK,bL=1,1;for x=1,#bD do if bH and bC>=bH+bF then break end;local N=bD:sub(x,x)if bI then bK=k.paint[N]bI=false elseif bJ then bL=k.paint[N]bJ=false elseif N==f.BG then bI=true elseif N==f.FG then bJ=true elseif N=="\n"then bv,bC,bI,bJ,bK,bL=1,bC+1 else if bC>=bF and bv>=bE and(not bG or bv<bG+bE)then self.buffer:set_pixel(a4+bv-bE,a5+bC-bF,N,bL,bK)end;bv=bv+1 end end end,frame_to_nfp=function(self,a4,a5,b2,b3)local bM={}for bC=1,b3 do local bN={}for bv=1,b2 do local bj=self.frame.pixels[a4]and self.frame.pixels[a4+bv-1][a5+bC-1]or{background=self.frame.background}bN[#bN+1]=k.colors[bj.inverted and bj.foreground or bj.background]end;bM[#bM+1]=table.concat(bN)end;return table.concat(bM,"\n")end,frame_to_nft=function(self,a4,a5,b2,b3)local bM={}for bC=1,b3 do local bN={}local bx,bw;for bv=1,b2 do local bj=self.frame.pixels[a4]and self.frame.pixels[a4+bv-1][a5+bC-1]or{char=" ",foreground=self.frame.background,background=self.frame.background}if bj.background~=bx then bN[#bN+1]=f.BG;bN[#bN+1]=k.colors[bj.background]bx=bj.background end;if bj.foreground~=bw then bN[#bN+1]=f.FG;bN[#bN+1]=k.colors[bj.foreground]bw=bj.foreground end;bN[#bN+1]=bj.char==f.BG and f.UP_ARROW or bj.char==f.FG and f.DOWN_ARROW or bj.char end;bM[#bM+1]=table.concat(bN)end;return table.concat(bM,"\n")end,line=function(self,bO,bP,bQ,bR,aZ)local function bS(bO,bP,bQ,bR)local bT=1;if bO>bQ then bT=-1 end;local bU=bQ-bO;local bV=bR-bP;local bW=1;if bV<0 then bW=-1;bV=-bV end;local bX=2*bV-bU;local a5=bP;for a4=bO,bQ,bT do self:point(a4,a5,aZ)if bX>0 then a5=a5+bW;bX=bX-2*bU end;bX=bX+2*bV end end;local function bY(bO,bP,bQ,bR)local bT=1;if bP>bR then bT=-1 end;local bU=bQ-bO;local bV=bR-bP;local bZ=1;if bU<0 then bZ=-1;bU=-bU end;local bX=2*bU-bV;local a4=bO;for a5=bP,bR,bT do self:point(a4,a5,aZ)if bX>0 then a4=a4+bZ;bX=bX-2*bV end;bX=bX+2*bU end end;if math.abs(bR-bP)<math.abs(bQ-bO)then if bO>bQ then bS(bQ,bR,bO,bP)else bS(bO,bP,bQ,bR)end else if bP>bR then bY(bQ,bR,bO,bP)else bY(bO,bP,bQ,bR)end end end,circle=function(self,b_,c0,c1,aZ)local c2=c1*c1;self:point(b_,c0+c1,aZ)self:point(b_,c0-c1,aZ)self:point(b_+c1,c0,aZ)self:point(b_-c1,c0,aZ)local a4=1;local a5=math.floor(math.sqrt(c2-1)+0.5)while a4<a5 do self:point(b_+a4,c0+a5,aZ)self:point(b_+a4,c0-a5,aZ)self:point(b_-a4,c0+a5,aZ)self:point(b_-a4,c0-a5,aZ)self:point(b_+a5,c0+a4,aZ)self:point(b_+a5,c0-a4,aZ)self:point(b_-a5,c0+a4,aZ)self:point(b_-a5,c0-a4,aZ)a4=a4+1;a5=math.floor(math.sqrt(c2-a4*a4)+0.5)end;if a4==a5 then self:point(b_+a4,c0+a5,aZ)self:point(b_+a4,c0-a5,aZ)self:point(b_-a4,c0+a5,aZ)self:point(b_-a4,c0-a5,aZ)end end}local c3={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,c4,d)if self.pressed_keys[d]then if c4 then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,c5,...)local keys={...}if not(#keys>0)then return false end;for c6,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if c5 then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for c6,d in next,keys do self:remove_key(d)end end,manage_event=function(self,formatted_event)if formatted_event.name==b.KEY then self:add_key(formatted_event.key)elseif formatted_event.name==b.KEYUP then self:remove_key(formatted_event.key)end end}local c7={}c7={Clock={new=function(c8)local c9={enabled=true,oneshot=false,clock=os.clock(),interval=c8,callbacks={onClock=function()end}}setmetatable(c9,c7.Clock)return c9 end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;local ca=os.clock()if ca>=self.clock+self.interval then local cb=ca-self.clock;self:reset_timer()self.callbacks.onClock(self,formatted_event,cb)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a4,a5,bu,bc,bd)local cc={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_LEFT,text=bu,pos=i.Vector2.new(a4,a5),colors={foreground=bc,background=bd},callbacks={onDraw=function()end}}setmetatable(cc,c7.Label)return cc end,draw=function(self,cb)if self.hidden then return end;self.callbacks.onDraw(self,cb)local O=h.split_by_char(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,cd in next,O do bh:write(self.pos.x,self.pos.y+d-1,cd,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then for d,cd in next,O do bh:write(self.pos.x-#cd/2+1,self.pos.y+d-1,cd,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_RIGHT then for d,cd in next,O do bh:write(self.pos.x-#cd+1,self.pos.y+d-1,cd,self.colors.foreground,self.colors.background)end end end},Button={new=function(a4,a5,b2,b3,bu,bc,ce,cf,cg)local ch={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,hoverable=cg and true or false,active=false,hovered=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bu,pos=i.Vector2.new(a4,a5),size=i.Vector2.new(b2,b3),border=false,timed={enabled=false,clock=c7.Clock.new(0.5)},colors={foreground=bc,hover_background=cg,active_background=ce,unactive_background=cf,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end,onHover=function()end}}ch.timed.clock.binded_button=ch;ch.timed.clock.oneshot=true;ch.timed.clock:stop()ch.timed.clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)self.binded_button.callbacks.onTimeout(self.binded_button,formatted_event)end)setmetatable(ch,c7.Button)return ch end,draw=function(self,cb)if self.hidden then return end;self.callbacks.onDraw(self,cb)if self.active then bh:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background,self.border,self.colors.border_color)elseif self.hovered then bh:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.hover_background,self.border,self.colors.border_color)else bh:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background,self.border,self.colors.border_color)end;local O=h.split_by_char(self.text,"\n")local ci=(self.size.y-#O)/2+self.pos.y;for bC=0,#O-1 do local cd=O[bC+1]local cj;if self.text_alignment==b.ALIGN_LEFT then cj=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then cj=(self.size.x-#cd)/2+self.pos.x elseif self.text_alignment==b.ALIGN_RIGHT then cj=self.pos.x+self.size.x-#cd end;bh:write(cj,ci+bC,cd,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if l.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(formatted_event)return true else self.callbacks.onFailedPress(self,formatted_event)end elseif c3:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(formatted_event)elseif self.hoverable then if formatted_event.name==b.MOUSEMOVE or formatted_event.name==b.MOUSEDRAG then if not formatted_event.x or not formatted_event.y then if self.hovered then self.hovered=false;self.callbacks.onHover(self,formatted_event)end elseif l.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then if not self.hovered then self.hovered=true;self.callbacks.onHover(self,formatted_event)end;return true elseif self.hovered then self.hovered=false;self.callbacks.onHover(self,formatted_event)end elseif self.hovered and formatted_event.name==b.DELETED then self.hovered=false;self.callbacks.onHover(self,formatted_event)end end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self,formatted_event)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self.active=not self.active;self.callbacks.onPress(self,formatted_event)end end},Progressbar={new=function(a4,a5,b2,b3,aR,al,am,bc,ck,cl)local cm={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=i.Vector2.new(a4,a5),size=i.Vector2.new(b2,b3),value={max=am,min=al,current=aR,draw_percentage=true,percentage_precision=2},colors={foreground=bc,filled_background=ck,unfilled_background=cl},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(cm,c7.Progressbar)return cm end,draw=function(self,cb)if self.hidden then return end;self.callbacks.onDraw(self,cb)local cn=i.map(self.value.current,self.value.min,self.value.max,0,1,true)local co=self.size.x*cn;bh:rectangle(self.pos.x,self.pos.y,co,self.size.y,self.colors.filled_background)bh:rectangle(self.pos.x+co,self.pos.y,self.size.x-co,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local cp=table.concat({h.format_number(cn*100,self.value.percentage_precision),"%"})local cq=(self.size.x-#cp)/2+self.pos.x;local ci=(self.size.y-1)/2+self.pos.y;bh:write(cq,ci,cp,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if l.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,ae)local cr=i.constrain(ae,self.value.min,self.value.max)self.value.current=cr end},Memo={new=function(a4,a5,b2,b3,bc,bd)local cs={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=i.Vector2.new(a4,a5),size=i.Vector2.new(b2,b3),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=c7.Clock.new(0.5),pos=i.Vector2.new(1,1)},limits=i.Vector2.new(0,0),whitelist={},blacklist={},border=false,colors={foreground=bc,background=bd,cursor=colors.white,cursor_text=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end,onPaste=function()end}}cs.cursor.blink.binded_cursor=cs.cursor;cs.cursor.blink:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(cs,c7.Memo)return cs end,draw=function(self,cb)if self.hidden then return end;self.callbacks.onDraw(self,cb)bh:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)local ct=self.pos.x;local cu=self.pos.y;local cv=self.size.x;local cw=self.size.y;if self.border then ct=ct+1;cu=cu+1;cv=cv-2;cw=cw-2 end;local cx=self.cursor.pos.x-self.first_visible_char;local cy=self.cursor.pos.y-self.first_visible_line;for a5=1,cw do local cz=a5+self.first_visible_line-1;local cA=self.rich_text[cz]or{}local cd=self.lines[cz]or""local cB=self.first_visible_char;local cC=self.first_visible_char+cv-1;local cD=cd:sub(cB,cC)local cE=cu+a5-1;if cA.background then if type(cA.background)=="string"then local bK=cA.background:sub(cB,cC)bK=#bK>0 and bK or cA.background:sub(#cA.background)bh:blit(ct,cE,string.rep(" ",cv),nil,bK)else bh:rectangle(ct,cE,cv,1,cA.background)end end;if cA.foreground then if type(cA.foreground)=="string"then local bL=cA.foreground:sub(cB,cC)bL=#bL>0 and bL or cA.foreground:sub(#cA.foreground)bh:blit(ct,cE,cD,bL)else bh:write(ct,cE,cD,cA.foreground)end else bh:write(ct,cE,cD,self.colors.foreground)end end;if self.cursor.visible and cx>=0 and cx<cv and cy>=0 and cy<cw then bh:write(cx+ct,cy+cu,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if self.hidden then return false end;if not self.editable then return false end;if formatted_event.name==b.TOUCH then if l.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)self:focus(true,formatted_event)local a4=formatted_event.x-self.pos.x;local a5=formatted_event.y-self.pos.y;if self.border then if l.in_area(formatted_event.x,formatted_event.y,self.pos.x+1,self.pos.y+1,self.size.x-2,self.size.y-2)then self:set_cursor(a4+self.first_visible_char-1,a5+self.first_visible_line-1)end else self:set_cursor(a4+self.first_visible_char,a5+self.first_visible_line)end;return true else self.callbacks.onFailedPress(self,formatted_event)self:focus(false,formatted_event)return false end elseif formatted_event.name==b.DELETED then self:focus(false,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.PASTE then if self.callbacks.onPaste(self,formatted_event)then return true end;self:write(formatted_event.paste)return true elseif formatted_event.name==b.CHAR then if self.callbacks.onChar(self,formatted_event)then return true end;self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if self.callbacks.onKey(self,formatted_event)then return true end;if c3:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cF=self.lines[self.cursor.pos.y-1]local cG=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bp=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(table.concat({cG,"\n",cF}))self:set_cursor(bp,self.cursor.pos.y-1)end;return true elseif c3:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cG=self.lines[self.cursor.pos.y]local cH=self.lines[self.cursor.pos.y+1]if not cH then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bp=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(table.concat({cH,"\n",cG}))self:set_cursor(bp,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif formatted_event.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif formatted_event.key==b.KEY_RIGHT then local cd=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#cd+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local cI=self.lines[self.cursor.pos.y-1]self:set_cursor(#cI+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_BACKSPACE then local cd=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local cJ=#self.lines[self.cursor.pos.y-1]+1;local cK=self.cursor.pos.y-1;self:set_cursor(cJ,cK)self:write(cd)self:set_cursor(cJ,cK)end else local aA=table.concat({cd:sub(1,self.cursor.pos.x-2),cd:sub(self.cursor.pos.x)})self.lines[self.cursor.pos.y]=aA;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,aA,{aA})end;return true elseif formatted_event.key==b.KEY_DELETE then local cd=self.lines[self.cursor.pos.y]local cL=cd:sub(self.cursor.pos.x)if#cL>0 then local aA=table.concat({cd:sub(1,self.cursor.pos.x-1),cd:sub(self.cursor.pos.x+1)})self.lines[self.cursor.pos.y]=aA;self.callbacks.onWrite(self,aA,{aA})else local cH=self.lines[self.cursor.pos.y+1]if cH then local cJ=self.cursor.pos.x;local cK=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(cH)self:set_cursor(cJ,cK)end end;return true elseif formatted_event.key==b.KEY_ENTER then local cM=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cN=cM:gsub("(%s*).*","%1")self:write(table.concat({"\n",cN}))return true elseif formatted_event.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_HOME then local cM=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cN=cM:gsub("(%s*).*","%1")self:set_cursor(#cN+1,self.cursor.pos.y)return true elseif c3:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local cO=self.lines[self.cursor.pos.y]local cN=cO:gsub("^(%s*).*$","%1")local cP=math.min(#self.tab_spaces,#cN)local aA=cO:sub(cP+1)self.lines[self.cursor.pos.y]=aA;self:set_cursor(self.cursor.pos.x-cP,self.cursor.pos.y)self.callbacks.onWrite(self,aA,{aA})return true elseif formatted_event.key==b.KEY_TAB then local bp=self.cursor.pos.x;local cQ=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cR=#self.lines[self.cursor.pos.y]-cQ;self:set_cursor(bp+cR,self.cursor.pos.y)return true end elseif formatted_event.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,formatted_event)then return true end;self.first_visible_line=i.constrain(self.first_visible_line+formatted_event.direction,1,#self.lines)return true end end end,focus=function(self,cS,formatted_event)if cS then self.focussed=true;self.callbacks.onFocus(self,formatted_event)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)end end,set_cursor=function(self,cJ,cK,cT)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then cK=i.constrain(cK,1,self.limits.y)end;if cT then for a5=#self.lines+1,cK do if not self.lines[a5]then self.lines[a5]=""end end else cK=i.constrain(cK,1,#self.lines)end;cJ=i.constrain(cJ,1,#self.lines[cK]+1)local cx=cJ-self.first_visible_char;local cy=cK-self.first_visible_line;local cv=self.size.x;local cw=self.size.y;if self.border then cv=cv-2;cw=cw-2 end;if cx>=cv then self.first_visible_char=self.first_visible_char+cx-cv+1 elseif cx<0 then self.first_visible_char=self.first_visible_char+cx end;if cy>=cw then self.first_visible_line=self.first_visible_line+cy-cw+1 elseif cy<0 then self.first_visible_line=self.first_visible_line+cy end;self.callbacks.onCursorChange(self,cJ,cK)self.cursor.pos=i.Vector2.new(cJ,cK)end,write=function(self,...)local bu=table.concat({...})local O=h.split_by_char(bu,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local J=table.concat({"[^",h.escape_magic_characters(table.concat(self.whitelist)),"]"})for d,cd in next,O do O[d]=cd:gsub(J,"")end elseif#self.blacklist>0 then local J=table.concat({"[",h.escape_magic_characters(table.concat(self.blacklist)),"]"})for d,cd in next,O do O[d]=cd:gsub(J,"")end end;if self.limits.y>0 then for a5=1,#self.lines+#O-1-self.limits.y do table.remove(O)end;if#O==0 then return end end;if#O>1 then for cU,cd in next,O do if cU==1 then local cV=self.lines[self.cursor.pos.y]local cW=cV:sub(1,self.cursor.pos.x-1)local cL=cV:sub(self.cursor.pos.x)local cX=O[#O]if self.limits.x>0 then cd=cd:sub(1,self.limits.x-#cW)cX=cX:sub(1,self.limits.x-#cL)end;self.lines[self.cursor.pos.y]=table.concat({cW,cd})table.insert(self.lines,self.cursor.pos.y+1,table.concat({cX,cL}))self:set_cursor(#cX+1,self.cursor.pos.y+1)elseif cU==#O then break else if self.limits.x>0 then cd=cd:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,cd)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cV=self.lines[self.cursor.pos.y]local cW=cV:sub(1,self.cursor.pos.x-1)local cL=cV:sub(self.cursor.pos.x)if self.limits.x>0 then O[1]=O[1]:sub(1,self.limits.x-(#cW+#cL))end;self.lines[self.cursor.pos.y]=table.concat({cW,O[1],cL})self:set_cursor(self.cursor.pos.x+#O[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bu,O)end,print=function(self,...)local bu=table.concat({...})local aA=#self.lines>0 and"\n"or""self:write(table.concat({aA,bu}))end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=i.Vector2.new(1,1)end},Window={new=function(a4,a5,b2,b3,bd,cY)local cZ={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=i.Vector2.new(a4,a5),size=i.Vector2.new(b2,b3),can_drag=false,border=false,dragging={enabled=true,from=i.Vector2.new(1,1)},resizing={enabled=true,corner=i.Vector2.new(-1,1),enabled_directions={[-1]={[1]=true,[0]=true,[-1]=true},[0]={[1]=true,[0]=false,[-1]=true},[1]={[1]=true,[0]=true,[-1]=true}},pinned={x=false,y=false},min_size=i.Vector2.new(b2,b3),max_size=i.Vector2.new(b2,b3)*2},shadow={enabled=cY,offset=i.Vector2.new(1,1)},elements={},colors={background=bd,shadow=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onDrag=function()end,onResize=function()end}}setmetatable(cZ,c7.Window)return cZ end,draw=function(self,cb)if self.hidden then return end;self.callbacks.onDraw(self,cb)if self.shadow.enabled then bh:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;bh:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)self:draw_elements(cb)end,event=function(self,formatted_event)if self.hidden then return false end;local c_=self:event_elements(formatted_event)if not c_ then if formatted_event.name==b.TOUCH then if l.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.can_drag=false;if self.resizing.enabled then local d0=true;local d1=formatted_event.y==self.pos.y+self.size.y-1;local d2=formatted_event.y==self.pos.y;if formatted_event.x==self.pos.x+self.size.x-1 then if self.resizing.enabled_directions[1][1]and d1 then self.resizing.corner=self.pos.ONE:duplicate()self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][-1]and d2 then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][0]and not(d1 or d2)then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=true else d0=false end elseif formatted_event.x==self.pos.x then if self.resizing.enabled_directions[-1][1]and d1 then self.resizing.corner=self.pos.DOWN+self.pos.LEFT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][-1]and d2 then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][0]and not(d1 or d2)then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=true else d0=false end elseif self.resizing.enabled_directions[0][1]and d1 then self.resizing.corner=self.pos.DOWN+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[0][-1]and d2 then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false else d0=false end;if not d0 then self.resizing.corner=self.pos.ZERO:duplicate()self.dragging.from=i.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end else self.dragging.from=i.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end;self.focussed=true;self.callbacks.onPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.callbacks.onFailedPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG and self.focussed then if self.can_drag then self:drag(formatted_event.x,formatted_event.y)else self:resize(formatted_event.x,formatted_event.y,self.resizing.pinned.x,self.resizing.pinned.y)end;return true elseif formatted_event.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,formatted_event)end else self.focussed=false;self.callbacks.onFocus(self,formatted_event)end;return c_ end,drag=function(self,a4,a5)if self.dragging.enabled then local d3=self.pos:duplicate()self.pos=self.pos+i.Vector2.new(a4-self.dragging.from.x,a5-self.dragging.from.y)self.dragging.from=i.Vector2.new(a4,a5)self.callbacks.onDrag(self,d3.x,d3.y)end end,resize=function(self,a4,a5,d4,d5)if self.resizing.enabled and self.resizing.corner~=self.pos.ZERO then local function d6()self.size.x=i.constrain(self.size.x,self.resizing.min_size.x,self.resizing.max_size.x)self.size.y=i.constrain(self.size.y,self.resizing.min_size.y,self.resizing.max_size.y)end;local d7=i.Vector2.new(a4,a5)local d3=self.pos:duplicate()local d8=self.size:duplicate()if self.resizing.corner==self.pos.ONE then self.size.x=d7.x-self.pos.x+1;self.size.y=d7.y-self.pos.y+1;d6()elseif self.resizing.corner==self.pos.ONE*-1 then self.size.x=self.size.x+self.pos.x-d7.x;self.size.y=self.size.y+self.pos.y-d7.y;d6()local d9=d8-self.size;self.pos=self.pos+d9 elseif self.resizing.corner==self.pos.UP+self.pos.RIGHT then self.size.x=d7.x-self.pos.x+1;self.size.y=self.size.y+self.pos.y-d7.y;d6()local da=d8.y-self.size.y;self.pos.y=self.pos.y+da elseif self.resizing.corner==self.pos.DOWN+self.pos.LEFT then self.size.x=self.size.x+self.pos.x-d7.x;self.size.y=d7.y-self.pos.y+1;d6()local cR=d8.x-self.size.x;self.pos.x=self.pos.x+cR end;if d4 then self.size.x=d8.x;self.pos.x=d3.x end;if d5 then self.size.y=d8.y;self.pos.y=d3.y end;self.callbacks.onResize(self,d3.x,d3.y,d8.x,d8.y)end end,set_elements=function(self,db)self.elements={}for d,dc in next,db do table.insert(self.elements,dc)end end,draw_elements=function(self,cb)for d=#self.elements,1,-1 do local dc=self.elements[d]if dc.draw then dc.pos=dc.pos+self.pos-self.pos.ONE;dc:draw(cb)dc.pos=dc.pos-self.pos+self.pos.ONE end end end,event_elements=function(self,formatted_event)local dd=formatted_event;if dd.x and dd.y then dd=l.format_event_table(dd.raw)dd.x,dd.y=dd.x-self.pos.x+1,dd.y-self.pos.y+1 end;local c_=false;for d,dc in next,self.elements do if dc.event then local de=dc:event(dd)c_=c_ or de;if de then dd={name=b.DELETED,deleted=formatted_event}end end end;return c_ end}}c7.Clock.__index=c7.Clock;c7.Label.__index=c7.Label;c7.Button.__index=c7.Button;c7.Progressbar.__index=c7.Progressbar;c7.Memo.__index=c7.Memo;c7.Window.__index=c7.Window;local df={}df={new=function(dg)local dh={draw_priority=b.LOW_PRIORITY,enabled=true,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=c7.Clock.new(dg or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}dh.broadcast_clock.WSS=dh;dh.broadcast_clock:set_callback(b.ONCLOCK,function(self,formatted_event)rednet.broadcast(bh.frame,self.WSS.protocol)end)setmetatable(dh,df)return dh end,draw=function(self,cb)if not self.enabled then return false end;self.callbacks.onDraw(self,cb)if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then bh.buffer.background=self.buffer.background;bh.buffer.pixels=self.buffer.pixels end end end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local di=false;if formatted_event.name==b.REDNET then if formatted_event.protocol==self.protocol then local b6=formatted_event.message;if self.mode==b.HOST then if b6==b.CONNECTION_REQUEST then rednet.send(formatted_event.from,b.OK,self.protocol)self.users[formatted_event.from]=true;di=true;self.callbacks.onConnect(self,formatted_event)elseif b6==b.DISCONNECTED then self.users[formatted_event.from]=nil;di=true;self.callbacks.onDisconnect(self,formatted_event)elseif self.events_whitelist[b6.name or"nil"]and self.users[formatted_event.from]and type(b6)=="table"then if b6.raw then os.queueEvent(table.unpack(b6.raw))end;di=true end elseif self.mode==b.USER then if formatted_event.from==self.host_id then if b6==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;di=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(b6)=="table"then self.buffer=b6;di=true end end end end end;if self.mode==b.USER then if formatted_event.name==b.TOUCH then di=true end;if self.events_whitelist[tostring(formatted_event.name)]then rednet.send(self.host_id,formatted_event,self.protocol)di=true end elseif self.mode==b.HOST then self.broadcast_clock:event(formatted_event)end;return di end,use_side=function(self,dj)self.side=dj end,connect=function(self,dk,dl,dm)dl=dl or 2;dm=dm or 10;rednet.open(self.side)self.host_id=dk;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local dn=0;while true do dn=dn+1;local dp={rednet.receive(self.protocol,dl)}if dp[1]==dk and dp[2]==b.OK and dp[3]==self.protocol then return b.OK elseif dn>=dm then local dq=string.format("Connection timed out on attempt %d after %d ms",dn,dl*1000)if#dp>0 then dq=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",dn,dl*1000)end;df:close()error(dq,2)end end;self.callbacks.onConnect(self,dk)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}df.__index=df;local dr={}dr={new=function(ds)local dt={enabled=true,computer_whitelist={},side=b.NONE,mode=b.ALL,password=ds or b.NONE,protocol="YAGUI-"..a.ver.."_FT",save_dir="/FT",callbacks={onEvent=function()end,onConnect=function()end,onSend=function()end,onReceive=function()end}}setmetatable(dt,dr)return dt end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;if formatted_event.name==b.REDNET and formatted_event.protocol==self.protocol then if self.mode==b.ALL or self.mode==b.RECEIVE then local dk=formatted_event.from;if self.computer_whitelist[dk]or self.callbacks.onConnect(self,formatted_event)then local b6=formatted_event.message;if type(b6)=="table"and b6.name and b6.content then if b6.psw==self.password then local b7=fs.getName(tostring(b6.name))local X=fs.combine(self.save_dir,b7)if fs.exists(X)then rednet.send(dk,b.NO,self.protocol)else local du=tostring(b6.content)if self.callbacks.onReceive(self,formatted_event,dk,b7,X,du)then return true end;local dv=fs.open(X,"w")if dv then dv.write(du)dv.close()rednet.send(dk,b.OK,self.protocol)else rednet.send(dk,b.ERROR,self.protocol)end end else rednet.send(dk,b.NO,self.protocol)end else rednet.send(dk,b.ERROR,self.protocol)end else rednet.send(dk,b.NO,self.protocol)end end end end,send=function(self,dw,dx,dy,dz)if self.mode==b.ALL or self.mode==b.SEND then dz=dz or fs.getName(dy)dx=dx or b.NONE;local dv=fs.open(dy,"r")local du=dv.readAll()dv.close()local b6={psw=dx,name=dz,content=du}if self.callbacks.onSend(self,formatted_event,b6)then return true end;rednet.send(dw,b6,self.protocol)end end,open=function(self,dj)self.side=dj;rednet.open(dj)end,close=function(self)if rednet.isOpen()then rednet.close(self.side)end end}dr.__index=dr;local dA={}dA={new=function(dB,dC)local dD={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=dB,EPS_target=dC},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=c7.Clock.new(1/dB),stats_clock=c7.Clock.new(1),FPS_label=c7.Label.new(1,1,"1 FPS",colors.white),EPS_label=c7.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=i.Vector2.new(1,1),show=function(self,dE)self.FPS_label.hidden=not dE;self.EPS_label.hidden=not dE end,update_pos=function(self)self.FPS_label.pos=self.pos;self.EPS_label.pos=self.pos+i.Vector2.DOWN end,Events=0,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onEvent=function()end}}dD.elements.loop.stats_clock.stats=dD.stats;dD.stats.FPS_label=dD.elements.loop.FPS_label;dD.stats.EPS_label=dD.elements.loop.EPS_label;dD.elements.loop.stats_clock:set_callback(b.ONCLOCK,function(self,formatted_event,cb)self.stats:update_pos()self.stats.FPS_label.text=table.concat({math.floor(self.stats.FPS+0.5)," FPS"})self.stats.EPS_label.text=table.concat({math.floor(self.stats.EPS+0.5)," EPS"})end)dD.stats:show(false)dD.elements.loop.clock.Loop=dD;dD.elements.loop.clock:set_callback(b.ONCLOCK,function(self,formatted_event,cb,dF)self.Loop.stats.FPS=1/cb;self.Loop.stats.EPS=self.Loop.stats.Events/cb;self.Loop.stats.Events=0;self.Loop:draw_elements(cb)self.interval=1/self.Loop.options.FPS_target end)setmetatable(dD,dA)return dD end,set_monitors=function(self,b8)self.monitors=n.get_monitors(b8)end,set_elements=function(self,db)self.elements.high_priority={}self.elements.low_priority={}for d,ae in next,db do if ae.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,ae)else table.insert(self.elements.low_priority,ae)end end end,draw_elements=function(self,cb)local function dG(ar)for d=#ar,1,-1 do local dc=ar[d]if dc.draw then dc:draw(cb)end end end;self.callbacks.onDraw(self,cb)local dH=bh.screens;bh.screens=self.monitors;dG(self.elements.low_priority)dG(self.elements.high_priority)for d,dc in next,self.elements.loop do if dc.draw then dc:draw(cb)end end;bh:draw()bh.screens=dH end,event_elements=function(self,formatted_event)local function b4(ar)for d,dc in next,ar do if dc.event then if dc:event(formatted_event)then formatted_event={name=b.DELETED,deleted=formatted_event}end end end end;if self.callbacks.onEvent(self,formatted_event)then formatted_event={name=b.DELETED,deleted=formatted_event}end;if self.options.stop_on_terminate and formatted_event.name==b.TERMINATE then self:stop()return end;if formatted_event.name==b.TOUCH then local dI=false;for dJ,bb in next,self.monitors do if formatted_event.from==dJ then dI=true;break end end;if not dI then formatted_event={name=b.DELETED,deleted=formatted_event}end end;b4(self.elements.loop)local dK={}for d,dc in next,self.elements.high_priority do if dc.event then local dL=dc:event(formatted_event)if dL then formatted_event={name=b.DELETED,deleted=formatted_event}if self.elements.high_priority~=dc then table.insert(dK,{element=dc,key=d})end end end end;if#dK>0 then for d,ae in next,dK do table.insert(self.elements.high_priority,1,ae.element)table.remove(self.elements.high_priority,ae.key+#dK)end end;b4(self.elements.low_priority)end,start=function(self)self.enabled=true;c3:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local dM=os.startTimer(1/self.options.EPS_target)local dN;if self.options.raw_mode then dN={os.pullEventRaw()}else dN={os.pullEvent()}end;local formatted_event=l.format_event_table(dN)c3:manage_event(formatted_event)self:event_elements(formatted_event)self.stats.Events=self.stats.Events+1;os.cancelTimer(dM)end;c3:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}dA.__index=dA;local dO={__call=function(self,...)return self.new(...)end}dO.__index=dO;local dP={__call=function(self,...)return self.new(...)end,set_callback=function(self,p,q)if p==b.ONSTART then self.callbacks.onStart=q elseif p==b.ONSTOP then self.callbacks.onStop=q elseif p==b.ONDRAW then self.callbacks.onDraw=q elseif p==b.ONPRESS then self.callbacks.onPress=q elseif p==b.ONFAILEDPRESS then self.callbacks.onFailedPress=q elseif p==b.ONTIMEOUT then self.callbacks.onTimeout=q elseif p==b.ONCLOCK then self.callbacks.onClock=q elseif p==b.ONEVENT then self.callbacks.onEvent=q elseif p==b.ONFOCUS then self.callbacks.onFocus=q elseif p==b.ONKEY then self.callbacks.onKey=q elseif p==b.ONCHAR then self.callbacks.onChar=q elseif p==b.ONMOUSESCROLL then self.callbacks.onMouseScroll=q elseif p==b.ONCURSORCHANGE then self.callbacks.onCursorChange=q elseif p==b.ONWRITE then self.callbacks.onWrite=q elseif p==b.ONCONNECT then self.callbacks.onConnect=q elseif p==b.ONDISCONNECT then self.callbacks.onDisconnect=q elseif p==b.ONSEND then self.callbacks.onSend=q elseif p==b.ONRECEIVE then self.callbacks.onReceive=q elseif p==b.ONDRAG then self.callbacks.onDrag=q elseif p==b.ONRESIZE then self.callbacks.onResize=q elseif p==b.ONPASTE then self.callbacks.onPaste=q elseif p==b.ONHOVER then self.callbacks.onHover=q end end}dP.__index=dP;setmetatable(i.Vector2,dO)setmetatable(i.Vector3,dO)setmetatable(df,dP)setmetatable(dr,dP)for d,dc in next,c7 do setmetatable(dc,dP)end;setmetatable(dA,dP)local dQ={...}if dQ[1]=="help"then local O={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,cd in next,O do n.better_print(term,cd.foreground,cd.background,cd.text)end elseif dQ[1]=="info"then n.better_print(term,colors.red,nil,"Library Version: ",a.ver)n.better_print(term,colors.yellow,nil,"Library Author: ",a.author)n.better_print(term,colors.green,nil,"Library Website: ",a.website)n.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif dQ[1]=="ver"then n.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif dQ[1]=="copyright"then local dR={colors.red,colors.yellow,colors.green}local dS=h.split(a.copyright,"\n\n")for d,dT in next,dS do n.better_print(term,dR[d],nil,dT)if d<#dS then read("")end end elseif dQ[1]=="setup"then if shell then local dU="YAGUI_PATH"local X="/"..shell.getRunningProgram()m.set(dU,X)n.better_print(term,colors.green,nil,"Lib path was set to \"",m.get(dU),"\".")else n.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif dQ[1]=="create"then if dQ[2]then local X=shell.resolve(dQ[2])if h.get_extension(X)~="lua"then X=X..".lua"end;if fs.exists(X)then n.better_print(term,colors.red,nil,"PATH: \"/",X,"\" already exists, please use another path or delete it.")else local dv=fs.open(X,"w")dv.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")dv.close()n.better_print(term,colors.green,nil,"New project was created at \"/",X,"\".")end else n.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif dQ[1]then n.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",dQ[1],"\"")n.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local dV={info=a,generic_utils=g,string_utils=h,math_utils=i,table_utils=j,color_utils=k,event_utils=l,setting_utils=m,monitor_utils=n,screen_buffer=bh,input=c3,WSS=df,wireless_screen_share=df,FT=dr,file_transfer=dr,gui_elements=c7,Loop=dA}for d,ae in next,b do dV[d]=ae end;return dV