--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.38.1",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",nfp="1.0.0",nft="1.0.0"}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSEMOVE="mouse_move",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",TERMRESIZE="term_resize",COROUTINE="coroutine",DELETED="DELETED",NONE="NONE",ALL="ALL",SEND="SEND",RECEIVE="RECEIVE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,ONSEND=17,ONRECEIVE=18,ONDRAG=19,ONRESIZE=20,ONPASTE=21,ONHOVER=22,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2,ALIGN_RIGHT=3}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={TOP=string.char(131),BOTTOM=string.char(143),LEFT=string.char(149),RIGHT=string.char(149),MIDDLE=string.char(140),TOPLEFT=string.char(151),TOPRIGHT=string.char(148),BOTTOMLEFT=string.char(138),BOTTOMRIGHT=string.char(133),MIDDLELEFT=string.char(132),MIDDLERIGHT=string.char(136)}local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)n:set_callback(o,p)end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=r or"unknown"r=tostring(r)local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=x:gsub(t,", ")v=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",r,(w+1)/2,E,z)u=true;break end end;if u then error(v,3)return false end;return true end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=table.concat,split=function(F,G)if not string.find(F,G)then return{F}end;local H={}local I=table.concat({"(.-)",G,"()"})local J;for K,L in string.gfind(F,I)do table.insert(H,K)J=L end;table.insert(H,string.sub(F,J))return H end,split_by_char=function(F,M)local N={}local O=1;for w=1,#F do if F:sub(w,w)==M then table.insert(N,w==O and""or F:sub(O,w-1))O=w+1 end end;table.insert(N,F:sub(O,#F))return N end,compare_versions=function(P,Q)local R=g.split(P,".")local S=g.split(Q,".")local T=#R;local U=#S;for w=1,math.min(T,U)do if tonumber(R[w])>tonumber(S[w])then return 1 elseif tonumber(R[w])<tonumber(S[w])then return-1 end end;if T>U then return 1 elseif T<U then return-1 end;return 0 end,escape_magic_characters=function(F)for d,V in next,g.magic_characters do F=F:gsub(table.concat({"[%",V,"]"}),table.concat({"%%%",V}))end;return F end,get_extension=function(W)local X,Y=W:gsub(".*%.","")if Y>0 then return X end;return""end,format_number=function(Z,_)Z=tostring(Z)_=_ or 0;local a0=Z:gsub("(.*)%..*","%1")if _<=0 then return a0 end;local a1=#a0+1;local a2=Z:sub(a1+1,a1+_)a2=a2:reverse():gsub("0*(.*)","%1"):reverse()if#a2>0 then return table.concat({a0,".",a2})end;return a0 end,trim=function(F)return F:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a3,a4)local a5={x=a3 or 0,y=a4 or 0}setmetatable(a5,h.Vector2)return a5 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return self.x*self.x+self.y*self.y end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y)end,unit=function(self)return self/self:length()end,dot=function(self,a6)return self.x*a6.x+self.y*a6.y end,cross=function(self,a6)return self.x*a6.y-self.y*a6.x end,rotate=function(self,a7)local a8=math.cos(a7)local a9=math.sin(a7)return h.Vector2.new(a8*self.x-a9*self.y,a9*self.x+a8*self.y)end,string=function(self,_)if _ then return string.format(table.concat({"(%.",_,"f; %.",_,"f)"}),self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a6)return h.Vector2.new(self.x+a6.x,self.y+a6.y)end,__sub=function(self,a6)return h.Vector2.new(self.x-a6.x,self.y-a6.y)end,__mul=function(self,Z)if type(self)=="number"then return h.Vector2.new(Z.x*self,Z.y*self)else return h.Vector2.new(self.x*Z,self.y*Z)end end,__div=function(self,Z)return h.Vector2.new(self.x/Z,self.y/Z)end,__eq=function(self,a6)return self.x==a6.x and self.y==a6.y end,__lt=function(self,a6)return self:length_sq()<a6:length_sq()end,__le=function(self,a6)return self:length_sq()<=a6:length_sq()end},Vector3={new=function(a3,a4,aa)local ab={x=a3 or 0,y=a4 or 0,z=aa or 0}setmetatable(ab,h.Vector3)return ab end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return self.x*self.x+self.y*self.y+self.z*self.z end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y+self.z*self.z)end,unit=function(self)return self/self:length()end,dot=function(self,a6)return self.x*a6.x+self.y*a6.y+self.z*a6.z end,cross=function(self,a6)return h.Vector3.new(self.y*a6.z-self.z*a6.y,self.z*a6.x-self.x*a6.z,self.x*a6.y-self.y*a6.x)end,rotate=function(self,ac,a7)local a8=math.cos(a7)return a8*self+math.sin(a7)*ac:cross(self)+(1-a8)*ac:dot(self)*ac end,string=function(self,_)if _ then return string.format(table.concat({"(%.",_,"f; %.",_,"f; %.",_,"f)"}),self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a6)return h.Vector3.new(self.x+a6.x,self.y+a6.y,self.z+a6.z)end,__sub=function(self,a6)return h.Vector3.new(self.x-a6.x,self.y-a6.y,self.z-a6.z)end,__mul=function(self,Z)if type(self)=="number"then return h.Vector3.new(Z.x*self,Z.y*self,Z.z*self)else return h.Vector3.new(self.x*Z,self.y*Z,self.z*Z)end end,__div=function(self,Z)return h.Vector3.new(self.x/Z,self.y/Z,self.z/Z)end,__eq=function(self,a6)return self.x==a6.x and self.y==a6.y and self.z==a6.z end,__lt=function(self,a6)return self:length_sq()<a6:length_sq()end,__le=function(self,a6)return self:length_sq()<=a6:length_sq()end},map=function(ad,ae,af,ag,ah,ai)local aj=(ad-ae)/(af-ae)*(ah-ag)+ag;if ai then return h.constrain(aj,ag,ah)end;return aj end,constrain=function(ad,ak,al)return math.min(al,math.max(ak,ad))end,round=function(Z)return math.floor(Z+0.5)end,round_numbers=function(...)local am={...}local an={}for d,Z in next,am do table.insert(an,h.round(Z))end;return table.unpack(an)end,floor_numbers=function(...)local am={...}local ao={}for d,Z in next,am do table.insert(ao,math.floor(Z))end;return table.unpack(ao)end,ceil_numbers=function(...)local am={...}local ap={}for d,Z in next,am do table.insert(ap,math.ceil(Z))end;return table.unpack(ap)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(aq,ad)for ar,as in next,aq do if as==ad then return true,ar end end;return false,nil end,has_key=function(aq,d)if aq[d]~=nil then return true,aq[d]end;return false,nil end,serialise=function(aq,at,au,av,aw,ax,ay,az,aA)local at=at or 0;local ay=ay or"  "local aB=0;local az=az or"\n"local aA=aA or" "if not au then ay,az,aA="","",""end;local aC="root"local aD={[aq]=aC}local function aE(aq,W)local aF=ay:rep(aB+1)local aG=table.concat({"{",az})local function aH(aq)local aI=#aq;local aJ=0;for d,ad in next,aq do local aK=type(d)local aL;if aK=="number"or aK=="boolean"or aK=="nil"then aL=tostring(d)else aL=string.format("%q",tostring(d))end;if not ax and d=="__index"then ad={}end;local aM=type(ad)if aK=="number"and d<=aI and d==aJ+1 then aJ=d;aG=table.concat({aG,aF})else aG=table.concat({aG,string.format("%s[%s]%s=%s",aF,aL,aA,aA)})end;if aM=="table"then if not next(ad)then aG=table.concat({aG,"{}"})elseif at<=-1 or aB<at then if aD[ad]and not av then aG=table.concat({aG,string.format("%q",aD[ad])})else local aN=table.concat({W,"[",aL,"]"})aD[ad]=aN;aB=aB+1;aG=table.concat({aG,aE(ad,aN)})aB=aB-1 end else aG=table.concat({aG,"{}"})end elseif aM=="number"or aM=="boolean"or aM=="nil"then aG=table.concat({aG,string.format("%s",tostring(ad))})else aG=table.concat({aG,string.format("%q",tostring(ad))})end;if next(aq,d)then aG=table.concat({aG,",",az})else aG=table.concat({aG,az})end end end;local aO=getmetatable(aq)if aw and aO then aH(aO)if next(aq)then aG=table.concat({aG:sub(1,#aG-#az),",",aG:sub(#aG-#az+1)})end end;aH(aq)aG=table.concat({aG,ay:rep(aB),"}"})return aG end;return aE(aq,aC)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize,better_unpack=function(aq,w,aP)w=w or 1;aP=aP or#aq;if w<=aP then return aq[w],i.better_unpack(aq,w+1,aP)end end,get=function(aq,...)local W={...}local aQ=aq;for w=1,#W do aQ=aQ[W[w]]end;return aQ end,set=function(ad,aq,...)local W={...}local aR=table.remove(W)local aS=i.get(aq,table.unpack(W))local aT=aS[aR]aS[aR]=ad;return aT end,better_remove=function(aq,...)local aU={...}local aV=#aU;for w=1,#aU do aq[aU[w]]=nil end;local aW,aX=1,{}for w=1,#aq+aV do if aq[w]==nil then aX[#aX+1]=w elseif#aX>0 then aq[aX[aW]],aX[#aX+1],aq[w]=aq[w],w;aW=aW+1 end end end}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aY)return j.colors[aY]end,paint_to_color=function(aZ)return j.paint[aZ]end}for d,ad in next,j.colors do j.paint[ad]=d end;k={in_area=function(a_,b0,a3,a4,b1,b2)if a_>=a3 and a_<a3+b1 then if b0>=a4 and b0<a4+b2 then return true end end;return false end,format_event_table=function(b3)local o={}o.name=b3[1]if o.name=="timer"then o.name=b.TIMER;o.id=o[2]elseif o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=b3[2]o.x=b3[3]o.y=b3[4]elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=b3[2]o.button=1;o.x=b3[3]o.y=b3[4]elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=b3[2]o.x=b3[3]o.y=b3[4]elseif o.name=="mouse_move"then o.name=b.MOUSEMOVE;o.button=b3[2]o.x=b3[3]o.y=b3[4]elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=b3[2]o.x=b3[3]o.y=b3[4]elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=b3[2]o.x=b3[3]o.y=b3[4]elseif o.name=="char"then o.name=b.CHAR;o.char=b3[2]elseif o.name=="key"then o.name=b.KEY;o.key=b3[2]elseif o.name=="key_up"then o.name=b.KEYUP;o.key=b3[2]elseif o.name=="paste"then o.name=b.PASTE;o.paste=b3[2]elseif o.name=="rednet_message"then o.name=b.REDNET;o.from=b3[2]o.message=b3[3]local b4=b3[4]if type(b4)=="number"then o.distance=b4 else o.protocol=tostring(b4)end elseif o.name=="modem_message"then local b5=b3[5]o.name=b.MODEM;o.side=b3[2]o.from=b3[4]o.protocol=b5.sProtocol or""o.message=b5.message elseif o.name=="terminate"then o.name=b.TERMINATE elseif o.name=="term_resize"then o.name=b.TERMRESIZE elseif o.name=="coroutine"then o.name=b.COROUTINE;o.thread=b3[2]o.status=b3[3]o.ok=b3[4]local w=5;if not o.ok then o.error=b3[5]w=w+1 end;o.returned={}for w=w,#b3 do o.returned[#o.returned+1]=b3[w]end else o.parameters={}for d=2,#b3 do table.insert(o.parameters,b3[d])end end;o.raw=b3;return o end}l={_path="/.settings",set=function(b6,ad)settings.set(b6,ad)settings.save(l._path)end,unset=function(b6)settings.unset(b6)settings.save(l._path)end,get=function(b6)return settings.get(b6)end}m={get_monitors=function(b7)local b8={}for d,b9 in next,b7 do if b9=="terminal"then b8[b9]=term else if peripheral.getType(b9)=="monitor"then b8[b9]=peripheral.wrap(b9)end end end;return b8 end,better_print=function(ba,bb,bc,...)local bd=table.concat({...})local be=ba.getTextColor()local bf=ba.getBackgroundColor()if bb then ba.setTextColor(bb)end;if bc then ba.setBackgroundColor(bc)end;print(bd)ba.setTextColor(be)ba.setBackgroundColor(bf)end,better_clear=function(ba)ba.clear()ba.setCursorPos(1,1)end}local bg={lineLow=function(bh,bi,bj,bk,bl,aY)local bm=1;if bi>bk then bm=-1 end;local bn=bk-bi;local bo=bl-bj;local bp=1;if bo<0 then bp=-1;bo=-bo end;local bq=2*bo-bn;local a4=bj;for a3=bi,bk,bm do bh.buffer:set_pixel(a3,a4," ",aY,aY)if bq>0 then a4=a4+bp;bq=bq-2*bn end;bq=bq+2*bo end end,lineHigh=function(bh,bi,bj,bk,bl,aY)local bm=1;if bj>bl then bm=-1 end;local bn=bk-bi;local bo=bl-bj;local br=1;if bn<0 then br=-1;bn=-bn end;local bq=2*bn-bo;local a3=bi;for a4=bj,bl,bm do bh.buffer:set_pixel(a3,a4," ",aY,aY)if bq>0 then a3=a3+br;bq=bq-2*bo end;bq=bq+2*bn end end,get_rect_char=function(a3,a4,bs,bt)if bt==1 then if bs==1 then return e.MIDDLE,true else if a3==1 then return e.MIDDLERIGHT,true elseif a3==bs then return e.MIDDLELEFT,true else return e.MIDDLE,true end end elseif a4==1 then if a3==1 then return e.TOPLEFT,false elseif a3==bs then return e.TOPRIGHT,true else return e.TOP,false end elseif a4==bt then if a3==1 then return e.BOTTOMLEFT,true elseif a3==bs then return e.BOTTOMRIGHT,true else return e.BOTTOM,true end elseif a3==1 then return e.LEFT,false elseif a3==bs then return e.RIGHT,true else return" ",false end end,buffer={is_pixel_custom=function(self,a3,a4)if self.pixels[a3]then if self.pixels[a3][a4]then return true end end;return false end,get_pixel=function(self,a3,a4)if self:is_pixel_custom(a3,a4)then return self.pixels[a3][a4]end;return{char=" ",foreground=self.background,background=self.background,inverted=false}end,set_pixel=function(self,a3,a4,M,bb,bc,bu)a3,a4=math.floor(a3),math.floor(a4)local bv=self:get_pixel(a3,a4)if M then bv.char=M:sub(1,1)end;if bu then bv.foreground,bv.background=bc or bv.foreground,bb or bv.background else if bv.inverted then bv.foreground,bv.background=bb or bv.background,bc or bv.foreground else bv.foreground,bv.background=bb or bv.foreground,bc or bv.background end end;bv.inverted=bu;if not self.pixels[a3]then self.pixels[a3]={}end;self.pixels[a3][a4]=bv end,remove_pixel=function(self,a3,a4)if self:is_pixel_custom(a3,a4)then self.pixels[a3][a4]=nil end end,clear=function(self)self.pixels={}end}}local bw={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black},set_screens=function(self,bx)self.screens=m.get_monitors(bx)end,set_monitors=function(self,b7)self:set_screens(b7)end,clear=function(self)self.buffer:clear()end,draw=function(self)local by={}for bz,bA in next,self.screens do local bB,bC=bA.getCursorPos()local b1,b2=bA.getSize()for a4=1,b2 do local bD,bE,bF={},{},{}for a3=by[a4]and#by[a4].text+1 or 1,b1 do local bv=self.buffer:get_pixel(a3,a4)bD[#bD+1]=bv.char;bE[#bE+1]=j.colors[bv.foreground]bF[#bF+1]=j.colors[bv.background]end;by[a4]={text=table.concat({by[a4]and by[a4].text or"",table.concat(bD)}),fg=table.concat({by[a4]and by[a4].fg or"",table.concat(bE)}),bg=table.concat({by[a4]and by[a4].bg or"",table.concat(bF)})}bA.setCursorPos(1,a4)bA.blit(by[a4].text:sub(0,b1),by[a4].fg:sub(0,b1),by[a4].bg:sub(0,b1))end;bA.setCursorPos(bB,bC)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a3,a4,aY)self.buffer:set_pixel(a3,a4," ",aY,aY)end,write=function(self,a3,a4,bG,bb,bc)for bH=0,#bG-1 do local M=bG:sub(bH+1,bH+1)self.buffer:set_pixel(a3+bH,a4,M,bb,bc)end end,blit=function(self,a3,a4,bG,bb,bc)local bI=""local bJ=""bb=bb or""bc=bc or""for bH=0,#bG-1 do local M=bG:sub(bH+1,bH+1)local bK=bb:sub(bH+1,bH+1)bK=#bK>0 and bK or bI;local bL=bc:sub(bH+1,bH+1)bL=#bL>0 and bL or bJ;self.buffer:set_pixel(a3+bH,a4,M,j.paint[bK],j.paint[bL])bI=bK;bJ=bL end end,rectangle=function(self,a3,a4,b1,b2,aY,bM,bN,bO)if bO then for bP=1,b1 do if bM then local M,bu=bg.get_rect_char(bP,1,b1,b2)self.buffer:set_pixel(a3+bP-1,a4,M,bN,aY,bu)M,bu=bg.get_rect_char(bP,b2,b1,b2)self.buffer:set_pixel(a3+bP-1,a4+b2-1,M,bN,aY,bu)else self.buffer:set_pixel(a3+bP-1,a4," ",aY,aY)self.buffer:set_pixel(a3+bP-1,a4+b2-1," ",aY,aY)end end;for bQ=2,b2-1 do if bM then local M,bu=bg.get_rect_char(1,bQ,b1,b2)self.buffer:set_pixel(a3,a4+bQ-1,M,bN,aY,bu)M,bu=bg.get_rect_char(b1,bQ,b1,b2)self.buffer:set_pixel(a3+b1-1,a4+bQ-1,M,bN,aY,bu)else self.buffer:set_pixel(a3,a4+bQ-1," ",aY,aY)self.buffer:set_pixel(a3+b1-1,a4+bQ-1," ",aY,aY)end end else for bP=1,b1 do for bQ=1,b2 do if bM then local M,bu=bg.get_rect_char(bP,bQ,b1,b2)self.buffer:set_pixel(a3+bP-1,a4+bQ-1,M,bN,aY,bu)else self.buffer:set_pixel(a3+bP-1,a4+bQ-1," ",aY,aY)end end end end end,nfp_image=function(self,a3,a4,bR,bS,bT,bU,bV)bS,bT=bS or 1,bT or 1;local bH,bW=1,1;for w=1,#bR do if bV and bW>=bV+bT then break end;local M=bR:sub(w,w)if M=="\n"then bH,bW=1,bW+1 else if bW>=bT and bH>=bS and(not bU or bH<bU+bS)then local aY=j.paint[M]if aY then self.buffer:set_pixel(a3+bH-bS,a4+bW-bT," ",aY,aY)end end;bH=bH+1 end end end,nft_image=function(self,a3,a4,bR,bS,bT,bU,bV)bS,bT=bS or 1,bT or 1;local bH,bW,bX,bY,bZ,b_=1,1;for w=1,#bR do if bV and bW>=bV+bT then break end;local M=bR:sub(w,w)if bX then bZ=j.paint[M]bX=false elseif bY then b_=j.paint[M]bY=false elseif M=="\30"then bX=true elseif M=="\31"then bY=true elseif M=="\n"then bH,bW,bX,bY,bZ,b_=1,bW+1 else if bW>=bT and bH>=bS and(not bU or bH<bU+bS)then self.buffer:set_pixel(a3+bH-bS,a4+bW-bT,M,b_,bZ)end;bH=bH+1 end end end,frame_to_nfp=function(self,c0,a3,a4,b1,b2)local c1={}local c2,c3,c4,c5=1,1,1,1;if not(a3 and a4 and b1 and b2)then for a3 in next,self.frame.pixels do c2=math.min(c2,a3)c4=math.max(c4,a3)for a4 in next,self.frame.pixels[a3]do c3=math.min(c3,a4)c5=math.max(c5,a4)end end end;a3,a4=a3 or c2,a4 or c3;for a4=a4,b2 and a4+b2-1 or c5 do local c6={}local w,c7=1,0;for a3=a3,b1 and a3+b1-1 or c4 do local bv=c0 and not self.frame:is_pixel_custom(a3,a4)and{}or self.frame:get_pixel(a3,a4)local aY=j.colors[bv.background]or" "c6[#c6+1]=aY;if aY~=" "then c7=w end;w=w+1 end;c1[#c1+1]=table.concat(c6):sub(0,c7)end;return table.concat(c1,"\n")end,frame_to_nft=function(self,a3,a4,b1,b2)local c1={}for bW=1,b2 do local c6={}local bJ,bI;for bH=1,b1 do local bv=self.frame.pixels[a3+bH-1]and self.frame.pixels[a3+bH-1][a4+bW-1]or{char=" ",foreground=self.frame.background,background=self.frame.background}if bv.background~=bJ then c6[#c6+1]="\30"c6[#c6+1]=j.colors[bv.background]bJ=bv.background end;if bv.foreground~=bI then c6[#c6+1]="\31"c6[#c6+1]=j.colors[bv.foreground]bI=bv.foreground end;c6[#c6+1]=bv.char=="\30"and"\24"or bv.char=="\31"and"\25"or bv.char end;c1[#c1+1]=table.concat(c6)end;return table.concat(c1,"\n")end,line=function(self,bi,bj,bk,bl,aY)if math.abs(bl-bj)<math.abs(bk-bi)then if bi>bk then bg.lineLow(self,bk,bl,bi,bj,aY)else bg.lineLow(self,bi,bj,bk,bl,aY)end else if bj>bl then bg.lineHigh(self,bk,bl,bi,bj,aY)else bg.lineHigh(self,bi,bj,bk,bl,aY)end end end,circle=function(self,c8,c9,ca,aY,bO)local cb=ca*ca;if bO then self.buffer:set_pixel(c8,c9+ca," ",aY,aY)self.buffer:set_pixel(c8,c9-ca," ",aY,aY)self.buffer:set_pixel(c8+ca,c9," ",aY,aY)self.buffer:set_pixel(c8-ca,c9," ",aY,aY)else self:line(c8,c9+ca,c8,c9-ca,aY)self:line(c8+ca,c9,c8-ca,c9,aY)end;local a3=1;local a4=math.floor(math.sqrt(cb-1)+0.5)while a3<a4 do if bO then self.buffer:set_pixel(c8+a3,c9+a4," ",aY,aY)self.buffer:set_pixel(c8+a3,c9-a4," ",aY,aY)self.buffer:set_pixel(c8-a3,c9+a4," ",aY,aY)self.buffer:set_pixel(c8-a3,c9-a4," ",aY,aY)self.buffer:set_pixel(c8+a4,c9+a3," ",aY,aY)self.buffer:set_pixel(c8+a4,c9-a3," ",aY,aY)self.buffer:set_pixel(c8-a4,c9+a3," ",aY,aY)self.buffer:set_pixel(c8-a4,c9-a3," ",aY,aY)else self:line(c8+a3,c9+a4,c8+a3,c9-a4,aY)self:line(c8-a3,c9+a4,c8-a3,c9-a4,aY)self:line(c8+a4,c9+a3,c8+a4,c9-a3,aY)self:line(c8-a4,c9+a3,c8-a4,c9-a3,aY)end;a3=a3+1;a4=math.floor(math.sqrt(cb-a3*a3)+0.5)end;if a3==a4 then if bO then self.buffer:set_pixel(c8+a3,c9+a4," ",aY,aY)self.buffer:set_pixel(c8+a3,c9-a4," ",aY,aY)self.buffer:set_pixel(c8-a3,c9+a4," ",aY,aY)self.buffer:set_pixel(c8-a3,c9-a4," ",aY,aY)else self:line(c8+a3,c9+a4,c8+a3,c9-a4,aY)self:line(c8-a3,c9+a4,c8-a3,c9-a4,aY)end end end}bw.buffer.__index=bg.buffer;setmetatable(bw.buffer,bw.buffer)setmetatable(bw.frame,bw.buffer)local cc={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,cd,d)if self.pressed_keys[d]then if cd then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,ce,...)local keys={...}if not(#keys>0)then return false end;for cf,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if ce then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for cf,d in next,keys do self:remove_key(d)end end,manage_event=function(self,formatted_event)if formatted_event.name==b.KEY then self:add_key(formatted_event.key)elseif formatted_event.name==b.KEYUP then self:remove_key(formatted_event.key)end end}local cg={}cg={Clock={new=function(ch)local ci={enabled=true,oneshot=false,clock=os.clock(),interval=ch,callbacks={onClock=function()end}}setmetatable(ci,cg.Clock)return ci end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;local cj=os.clock()if cj>=self.clock+self.interval then local delta_time=cj-self.clock;self:reset_timer()self.callbacks.onClock(self,formatted_event,delta_time)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a3,a4,bG,bb,bc)local ck={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_LEFT,text=bG,pos=h.Vector2.new(a3,a4),colors={foreground=bb,background=bc},callbacks={onDraw=function()end}}setmetatable(ck,cg.Label)return ck end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;local N=g.split_by_char(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,cl in next,N do bw:write(self.pos.x,self.pos.y+d-1,cl,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then for d,cl in next,N do bw:write(self.pos.x-#cl/2+1,self.pos.y+d-1,cl,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_RIGHT then for d,cl in next,N do bw:write(self.pos.x-#cl+1,self.pos.y+d-1,cl,self.colors.foreground,self.colors.background)end end end},Button={new=function(a3,a4,b1,b2,bG,bb,cm,cn,co)local cp={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,hoverable=co and true or false,active=false,hovered=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bG,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(b1,b2),border=false,timed={enabled=false,clock=cg.Clock.new(0.5)},colors={foreground=bb,hover_background=co,active_background=cm,unactive_background=cn,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end,onHover=function()end}}cp.timed.clock.binded_button=cp;cp.timed.clock.oneshot=true;cp.timed.clock:stop()cp.timed.clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)self.binded_button.callbacks.onTimeout(self.binded_button,formatted_event)end)setmetatable(cp,cg.Button)return cp end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;if self.active then bw:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background,self.border,self.colors.border_color)elseif self.hovered then bw:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.hover_background,self.border,self.colors.border_color)else bw:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background,self.border,self.colors.border_color)end;local N=g.split_by_char(self.text,"\n")local cq=(self.size.y-#N)/2+self.pos.y;for bW=0,#N-1 do local cl=N[bW+1]local cr;if self.text_alignment==b.ALIGN_LEFT then cr=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then cr=(self.size.x-#cl)/2+self.pos.x elseif self.text_alignment==b.ALIGN_RIGHT then cr=self.pos.x+self.size.x-#cl end;bw:write(cr,cq+bW,cl,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(formatted_event)return true else self.callbacks.onFailedPress(self,formatted_event)end elseif cc:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(formatted_event)elseif self.hoverable then if formatted_event.name==b.MOUSEMOVE or formatted_event.name==b.MOUSEDRAG then if not formatted_event.x or not formatted_event.y then if self.hovered then self.hovered=false;self.callbacks.onHover(self,formatted_event)end elseif k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then if not self.hovered then self.hovered=true;self.callbacks.onHover(self,formatted_event)end;return true elseif self.hovered then self.hovered=false;self.callbacks.onHover(self,formatted_event)end elseif self.hovered and formatted_event.name==b.DELETED then self.hovered=false;self.callbacks.onHover(self,formatted_event)end end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self,formatted_event)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self.active=not self.active;self.callbacks.onPress(self,formatted_event)end end},Progressbar={new=function(a3,a4,b1,b2,aQ,ak,al,bb,cs,ct)local cu={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(b1,b2),value={max=al,min=ak,current=aQ,draw_percentage=true,percentage_precision=2},colors={foreground=bb,filled_background=cs,unfilled_background=ct},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(cu,cg.Progressbar)return cu end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;local cv=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local cw=self.size.x*cv;bw:rectangle(self.pos.x,self.pos.y,cw,self.size.y,self.colors.filled_background)bw:rectangle(self.pos.x+cw,self.pos.y,self.size.x-cw,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local cx=table.concat({g.format_number(cv*100,self.value.percentage_precision),"%"})local cy=(self.size.x-#cx)/2+self.pos.x;local cq=(self.size.y-1)/2+self.pos.y;bw:write(cy,cq,cx,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,ad)local cz=h.constrain(ad,self.value.min,self.value.max)self.value.current=cz end},Memo={new=function(a3,a4,b1,b2,bb,bc)local cA={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(b1,b2),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=cg.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},border=false,colors={foreground=bb,background=bc,cursor=colors.white,cursor_text=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end,onPaste=function()end}}cA.cursor.blink.binded_cursor=cA.cursor;cA.cursor.blink:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(cA,cg.Memo)return cA end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;bw:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)local cB=self.pos.x;local cC=self.pos.y;local cD=self.size.x;local cE=self.size.y;if self.border then cB=cB+1;cC=cC+1;cD=cD-2;cE=cE-2 end;local cF=self.cursor.pos.x-self.first_visible_char;local cG=self.cursor.pos.y-self.first_visible_line;for a4=1,cE do local cH=a4+self.first_visible_line-1;local cI=self.rich_text[cH]or{}local cl=self.lines[cH]or""local cJ=self.first_visible_char;local cK=self.first_visible_char+cD-1;local cL=cl:sub(cJ,cK)local cM=cC+a4-1;if cI.background then if type(cI.background)=="string"then local bZ=cI.background:sub(cJ,cK)bZ=#bZ>0 and bZ or cI.background:sub(#cI.background)bw:blit(cB,cM,string.rep(" ",cD),nil,bZ)else bw:rectangle(cB,cM,cD,1,cI.background)end end;if cI.foreground then if type(cI.foreground)=="string"then local b_=cI.foreground:sub(cJ,cK)b_=#b_>0 and b_ or cI.foreground:sub(#cI.foreground)bw:blit(cB,cM,cL,b_)else bw:write(cB,cM,cL,cI.foreground)end else bw:write(cB,cM,cL,self.colors.foreground)end end;if self.cursor.visible and cF>=0 and cF<cD and cG>=0 and cG<cE then bw:write(cF+cB,cG+cC,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if self.hidden then return false end;if not self.editable then return false end;if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)self:focus(true,formatted_event)local a3=formatted_event.x-self.pos.x;local a4=formatted_event.y-self.pos.y;if self.border then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x+1,self.pos.y+1,self.size.x-2,self.size.y-2)then self:set_cursor(a3+self.first_visible_char-1,a4+self.first_visible_line-1)end else self:set_cursor(a3+self.first_visible_char,a4+self.first_visible_line)end;return true else self.callbacks.onFailedPress(self,formatted_event)self:focus(false,formatted_event)return false end elseif formatted_event.name==b.DELETED then self:focus(false,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.PASTE then if self.callbacks.onPaste(self,formatted_event)then return true end;self:write(formatted_event.paste)return true elseif formatted_event.name==b.CHAR then if self.callbacks.onChar(self,formatted_event)then return true end;self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if self.callbacks.onKey(self,formatted_event)then return true end;if cc:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cN=self.lines[self.cursor.pos.y-1]local cO=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bB=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(table.concat({cO,"\n",cN}))self:set_cursor(bB,self.cursor.pos.y-1)end;return true elseif cc:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cO=self.lines[self.cursor.pos.y]local cP=self.lines[self.cursor.pos.y+1]if not cP then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bB=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(table.concat({cP,"\n",cO}))self:set_cursor(bB,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif formatted_event.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif formatted_event.key==b.KEY_RIGHT then local cl=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#cl+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local cQ=self.lines[self.cursor.pos.y-1]self:set_cursor(#cQ+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_BACKSPACE then local cl=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local cR=#self.lines[self.cursor.pos.y-1]+1;local cS=self.cursor.pos.y-1;self:set_cursor(cR,cS)self:write(cl)self:set_cursor(cR,cS)end else local az=table.concat({cl:sub(1,self.cursor.pos.x-2),cl:sub(self.cursor.pos.x)})self.lines[self.cursor.pos.y]=az;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,az,{az})end;return true elseif formatted_event.key==b.KEY_DELETE then local cl=self.lines[self.cursor.pos.y]local cT=cl:sub(self.cursor.pos.x)if#cT>0 then local az=table.concat({cl:sub(1,self.cursor.pos.x-1),cl:sub(self.cursor.pos.x+1)})self.lines[self.cursor.pos.y]=az;self.callbacks.onWrite(self,az,{az})else local cP=self.lines[self.cursor.pos.y+1]if cP then local cR=self.cursor.pos.x;local cS=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(cP)self:set_cursor(cR,cS)end end;return true elseif formatted_event.key==b.KEY_ENTER then local cU=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cV=cU:gsub("(%s*).*","%1")self:write(table.concat({"\n",cV}))return true elseif formatted_event.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_HOME then local cU=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cV=cU:gsub("(%s*).*","%1")self:set_cursor(#cV+1,self.cursor.pos.y)return true elseif cc:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local cW=self.lines[self.cursor.pos.y]local cV=cW:gsub("^(%s*).*$","%1")local cX=math.min(#self.tab_spaces,#cV)local az=cW:sub(cX+1)self.lines[self.cursor.pos.y]=az;self:set_cursor(self.cursor.pos.x-cX,self.cursor.pos.y)self.callbacks.onWrite(self,az,{az})return true elseif formatted_event.key==b.KEY_TAB then local bB=self.cursor.pos.x;local cY=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cZ=#self.lines[self.cursor.pos.y]-cY;self:set_cursor(bB+cZ,self.cursor.pos.y)return true end elseif formatted_event.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,formatted_event)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+formatted_event.direction,1,#self.lines)return true end end end,focus=function(self,c_,formatted_event)if c_ then self.focussed=true;self.callbacks.onFocus(self,formatted_event)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)end end,set_cursor=function(self,cR,cS,d0)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then cS=h.constrain(cS,1,self.limits.y)end;if d0 then for a4=#self.lines+1,cS do if not self.lines[a4]then self.lines[a4]=""end end else cS=h.constrain(cS,1,#self.lines)end;cR=h.constrain(cR,1,#self.lines[cS]+1)local cF=cR-self.first_visible_char;local cG=cS-self.first_visible_line;local cD=self.size.x;local cE=self.size.y;if self.border then cD=cD-2;cE=cE-2 end;if cF>=cD then self.first_visible_char=self.first_visible_char+cF-cD+1 elseif cF<0 then self.first_visible_char=self.first_visible_char+cF end;if cG>=cE then self.first_visible_line=self.first_visible_line+cG-cE+1 elseif cG<0 then self.first_visible_line=self.first_visible_line+cG end;self.callbacks.onCursorChange(self,cR,cS)self.cursor.pos=h.Vector2.new(cR,cS)end,write=function(self,...)local bG=table.concat({...})local N=g.split_by_char(bG,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local I=table.concat({"[^",g.escape_magic_characters(table.concat(self.whitelist)),"]"})for d,cl in next,N do N[d]=cl:gsub(I,"")end elseif#self.blacklist>0 then local I=table.concat({"[",g.escape_magic_characters(table.concat(self.blacklist)),"]"})for d,cl in next,N do N[d]=cl:gsub(I,"")end end;if self.limits.y>0 then for a4=1,#self.lines+#N-1-self.limits.y do table.remove(N)end;if#N==0 then return end end;if#N>1 then for d1,cl in next,N do if d1==1 then local d2=self.lines[self.cursor.pos.y]local d3=d2:sub(1,self.cursor.pos.x-1)local cT=d2:sub(self.cursor.pos.x)local d4=N[#N]if self.limits.x>0 then cl=cl:sub(1,self.limits.x-#d3)d4=d4:sub(1,self.limits.x-#cT)end;self.lines[self.cursor.pos.y]=table.concat({d3,cl})table.insert(self.lines,self.cursor.pos.y+1,table.concat({d4,cT}))self:set_cursor(#d4+1,self.cursor.pos.y+1)elseif d1==#N then break else if self.limits.x>0 then cl=cl:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,cl)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local d2=self.lines[self.cursor.pos.y]local d3=d2:sub(1,self.cursor.pos.x-1)local cT=d2:sub(self.cursor.pos.x)if self.limits.x>0 then N[1]=N[1]:sub(1,self.limits.x-(#d3+#cT))end;self.lines[self.cursor.pos.y]=table.concat({d3,N[1],cT})self:set_cursor(self.cursor.pos.x+#N[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bG,N)end,print=function(self,...)local bG=table.concat({...})local az=#self.lines>0 and"\n"or""self:write(table.concat({az,bG}))end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=h.Vector2.new(1,1)end},Window={new=function(a3,a4,b1,b2,bc,d5)local d6={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(b1,b2),can_drag=false,border=false,dragging={enabled=true,from=h.Vector2.new(1,1)},resizing={enabled=true,corner=h.Vector2.new(-1,1),enabled_directions={[-1]={[1]=true,[0]=true,[-1]=true},[0]={[1]=true,[0]=false,[-1]=true},[1]={[1]=true,[0]=true,[-1]=true}},pinned={x=false,y=false},min_size=h.Vector2.new(b1,b2),max_size=h.Vector2.new(b1,b2)*2},shadow={enabled=d5,offset=h.Vector2.new(1,1)},elements={},colors={background=bc,shadow=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onEvent=function()end,onFocus=function()end,onDrag=function()end,onResize=function()end}}setmetatable(d6,cg.Window)return d6 end,draw=function(self,delta_time)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;if self.shadow.enabled then bw:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;bw:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)self:draw_elements(delta_time)end,event=function(self,formatted_event)if self.hidden then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local d7=self:event_elements(formatted_event)if not d7 then if formatted_event.name==b.TOUCH then if k.in_area(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.can_drag=false;if self.resizing.enabled then local d8=true;local d9=formatted_event.y==self.pos.y+self.size.y-1;local da=formatted_event.y==self.pos.y;if formatted_event.x==self.pos.x+self.size.x-1 then if self.resizing.enabled_directions[1][1]and d9 then self.resizing.corner=self.pos.ONE:duplicate()self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][-1]and da then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][0]and not(d9 or da)then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=true else d8=false end elseif formatted_event.x==self.pos.x then if self.resizing.enabled_directions[-1][1]and d9 then self.resizing.corner=self.pos.DOWN+self.pos.LEFT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][-1]and da then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][0]and not(d9 or da)then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=true else d8=false end elseif self.resizing.enabled_directions[0][1]and d9 then self.resizing.corner=self.pos.DOWN+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[0][-1]and da then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false else d8=false end;if not d8 then self.resizing.corner=self.pos.ZERO:duplicate()self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end else self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end;self.focussed=true;self.callbacks.onPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.callbacks.onFailedPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG and self.focussed then if self.can_drag then self:drag(formatted_event.x,formatted_event.y)else self:resize(formatted_event.x,formatted_event.y,self.resizing.pinned.x,self.resizing.pinned.y)end;return true elseif formatted_event.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,formatted_event)end else self.focussed=false;self.callbacks.onFocus(self,formatted_event)end;return d7 end,drag=function(self,a3,a4)if self.dragging.enabled then local db=self.pos:duplicate()self.pos=self.pos+h.Vector2.new(a3-self.dragging.from.x,a4-self.dragging.from.y)self.dragging.from=h.Vector2.new(a3,a4)self.callbacks.onDrag(self,db.x,db.y)end end,resize=function(self,a3,a4,dc,dd)if self.resizing.enabled and self.resizing.corner~=self.pos.ZERO then local function de()self.size.x=h.constrain(self.size.x,self.resizing.min_size.x,self.resizing.max_size.x)self.size.y=h.constrain(self.size.y,self.resizing.min_size.y,self.resizing.max_size.y)end;local df=h.Vector2.new(a3,a4)local db=self.pos:duplicate()local dg=self.size:duplicate()if self.resizing.corner==self.pos.ONE then self.size.x=df.x-self.pos.x+1;self.size.y=df.y-self.pos.y+1;de()elseif self.resizing.corner==self.pos.ONE*-1 then self.size.x=self.size.x+self.pos.x-df.x;self.size.y=self.size.y+self.pos.y-df.y;de()local dh=dg-self.size;self.pos=self.pos+dh elseif self.resizing.corner==self.pos.UP+self.pos.RIGHT then self.size.x=df.x-self.pos.x+1;self.size.y=self.size.y+self.pos.y-df.y;de()local di=dg.y-self.size.y;self.pos.y=self.pos.y+di elseif self.resizing.corner==self.pos.DOWN+self.pos.LEFT then self.size.x=self.size.x+self.pos.x-df.x;self.size.y=df.y-self.pos.y+1;de()local cZ=dg.x-self.size.x;self.pos.x=self.pos.x+cZ end;if dc then self.size.x=dg.x;self.pos.x=db.x end;if dd then self.size.y=dg.y;self.pos.y=db.y end;self.callbacks.onResize(self,db.x,db.y,dg.x,dg.y)end end,set_elements=function(self,dj)self.elements={}for d,dk in next,dj do table.insert(self.elements,dk)end end,draw_elements=function(self,delta_time)for d=#self.elements,1,-1 do local dk=self.elements[d]if dk.draw then dk.pos=dk.pos+self.pos-self.pos.ONE;dk:draw(delta_time)dk.pos=dk.pos-self.pos+self.pos.ONE end end end,event_elements=function(self,formatted_event)local dl=formatted_event;if dl.x and dl.y then dl=k.format_event_table(dl.raw)dl.x,dl.y=dl.x-self.pos.x+1,dl.y-self.pos.y+1 end;local d7=false;for d,dk in next,self.elements do if dk.event then local dm=dk:event(dl)d7=d7 or dm;if dm then dl={name=b.DELETED,deleted=formatted_event}end end end;return d7 end},Canvas={new=function(a3,a4,b1,b2)local dn={draw_priority=b.LOW_PRIORITY,hidden=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(b1,b2),transparent=false,buffer={background=colors.black,pixels={}},callbacks={onDraw=function()end}}setmetatable(dn.buffer,bw.buffer)setmetatable(dn,cg.Canvas)return dn end,draw=function(self)if self.hidden then return end;if self.callbacks.onDraw(self,delta_time)then return end;self:cast(bw)end,cast=function(self,a6)if self.transparent then for a3=1,self.size.x do if self.buffer.pixels[a3]then for a4=1,self.size.y do local bv=self.buffer.pixels[a3][a4]if bv then if bv.inverted then a6.buffer:set_pixel(self.pos.x+a3-1,self.pos.y+a4-1,bv.char,bv.background,bv.foreground,true)else a6.buffer:set_pixel(self.pos.x+a3-1,self.pos.y+a4-1,bv.char,bv.foreground,bv.background)end end end end end else for a4=1,self.size.y do for a3=1,self.size.x do local bv=self.buffer:get_pixel(a3,a4)if bv.inverted then a6.buffer:set_pixel(self.pos.x+a3-1,self.pos.y+a4-1,bv.char,bv.background,bv.foreground,true)else a6.buffer:set_pixel(self.pos.x+a3-1,self.pos.y+a4-1,bv.char,bv.foreground,bv.background)end end end end end,to_nfp=function(self,...)return bw.frame_to_nfp({frame=self.buffer},...)end,to_nft=function(self,...)return bw.frame_to_nft({frame=self.buffer},...)end}}cg.Clock.__index=cg.Clock;cg.Label.__index=cg.Label;cg.Button.__index=cg.Button;cg.Progressbar.__index=cg.Progressbar;cg.Memo.__index=cg.Memo;cg.Window.__index=cg.Window;for d,dp in next,bw do if type(dp)=="function"and not cg.Canvas[d]and not d:find("set_")and not d:find("frame")then cg.Canvas[d]=dp end end;cg.Canvas.__index=cg.Canvas;local dq={}dq={new=function(dr)local ds={draw_priority=b.LOW_PRIORITY,enabled=true,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=cg.Clock.new(dr or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}ds.broadcast_clock.WSS=ds;ds.broadcast_clock:set_callback(b.ONCLOCK,function(self,formatted_event)rednet.broadcast(bw.frame,self.WSS.protocol)end)setmetatable(ds,dq)return ds end,draw=function(self,delta_time)if not self.enabled then return false end;if self.callbacks.onDraw(self,delta_time)then return end;if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then bw.buffer.background=self.buffer.background;bw.buffer.pixels=self.buffer.pixels end end end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local dt=false;if formatted_event.name==b.REDNET then if formatted_event.protocol==self.protocol then local b5=formatted_event.message;if self.mode==b.HOST then if b5==b.CONNECTION_REQUEST then rednet.send(formatted_event.from,b.OK,self.protocol)self.users[formatted_event.from]=true;dt=true;self.callbacks.onConnect(self,formatted_event)elseif b5==b.DISCONNECTED then self.users[formatted_event.from]=nil;dt=true;self.callbacks.onDisconnect(self,formatted_event)elseif self.events_whitelist[b5.name or"nil"]and self.users[formatted_event.from]and type(b5)=="table"then if b5.raw then os.queueEvent(table.unpack(b5.raw))end;dt=true end elseif self.mode==b.USER then if formatted_event.from==self.host_id then if b5==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;dt=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(b5)=="table"then self.buffer=b5;dt=true end end end end end;if self.mode==b.USER then if formatted_event.name==b.TOUCH then dt=true end;if self.events_whitelist[tostring(formatted_event.name)]then rednet.send(self.host_id,formatted_event,self.protocol)dt=true end elseif self.mode==b.HOST then self.broadcast_clock:event(formatted_event)end;return dt end,use_side=function(self,du)self.side=du end,connect=function(self,dv,dw,dx)dw=dw or 2;dx=dx or 10;rednet.open(self.side)self.host_id=dv;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local dy=0;while true do dy=dy+1;local dz={rednet.receive(self.protocol,dw)}if dz[1]==dv and dz[2]==b.OK and dz[3]==self.protocol then return b.OK elseif dy>=dx then local dA=string.format("Connection timed out on attempt %d after %d ms",dy,dw*1000)if#dz>0 then dA=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",dy,dw*1000)end;dq:close()error(dA,2)end end;self.callbacks.onConnect(self,dv)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}dq.__index=dq;local dB={}dB={new=function(dC)local dD={enabled=true,computer_whitelist={},side=b.NONE,mode=b.ALL,password=dC or b.NONE,protocol="YAGUI-"..a.ver.."_FT",save_dir="/FT",callbacks={onEvent=function()end,onConnect=function()end,onSend=function()end,onReceive=function()end}}setmetatable(dD,dB)return dD end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;if formatted_event.name==b.REDNET and formatted_event.protocol==self.protocol then if self.mode==b.ALL or self.mode==b.RECEIVE then local dv=formatted_event.from;if self.computer_whitelist[dv]or self.callbacks.onConnect(self,formatted_event)then local b5=formatted_event.message;if type(b5)=="table"and b5.name and b5.content then if b5.psw==self.password then local b6=fs.getName(tostring(b5.name))local W=fs.combine(self.save_dir,b6)if fs.exists(W)then rednet.send(dv,b.NO,self.protocol)else local dE=tostring(b5.content)if self.callbacks.onReceive(self,formatted_event,dv,b6,W,dE)then return true end;local dF=fs.open(W,"w")if dF then dF.write(dE)dF.close()rednet.send(dv,b.OK,self.protocol)else rednet.send(dv,b.ERROR,self.protocol)end end else rednet.send(dv,b.NO,self.protocol)end else rednet.send(dv,b.ERROR,self.protocol)end else rednet.send(dv,b.NO,self.protocol)end end end end,send=function(self,dG,dH,dI,dJ)if self.mode==b.ALL or self.mode==b.SEND then dJ=dJ or fs.getName(dI)dH=dH or b.NONE;local dF=fs.open(dI,"r")local dE=dF.readAll()dF.close()local b5={psw=dH,name=dJ,content=dE}if self.callbacks.onSend(self,formatted_event,b5)then return true end;rednet.send(dG,b5,self.protocol)end end,open=function(self,du)self.side=du;rednet.open(du)end,close=function(self)if rednet.isOpen()then rednet.close(self.side)end end}dB.__index=dB;local dK={}dK={new=function(dL,dM)local dN={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=dL,EPS_target=dM},monitors={terminal=term},threads={},elements={high_priority={},low_priority={},loop={clock=cg.Clock.new(1/dL),stats_clock=cg.Clock.new(1),FPS_label=cg.Label.new(1,1,"1 FPS",colors.white),EPS_label=cg.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),show=function(self,dO)self.FPS_label.hidden=not dO;self.EPS_label.hidden=not dO end,update_pos=function(self)self.FPS_label.pos=self.pos;self.EPS_label.pos=self.pos+h.Vector2.DOWN end,Events=0,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onEvent=function()end}}dN.elements.loop.stats_clock.stats=dN.stats;dN.stats.FPS_label=dN.elements.loop.FPS_label;dN.stats.EPS_label=dN.elements.loop.EPS_label;dN.elements.loop.stats_clock:set_callback(b.ONCLOCK,function(self,formatted_event,delta_time)self.stats:update_pos()self.stats.FPS_label.text=table.concat({math.floor(self.stats.FPS+0.5)," FPS"})self.stats.EPS_label.text=table.concat({math.floor(self.stats.EPS+0.5)," EPS"})end)dN.stats:show(false)dN.elements.loop.clock.Loop=dN;dN.elements.loop.clock:set_callback(b.ONCLOCK,function(self,formatted_event,delta_time)self.Loop.stats.FPS=1/delta_time;self.Loop.stats.EPS=self.Loop.stats.Events/delta_time;self.Loop.stats.Events=0;if#self.Loop.threads>0 then local dP={}for w=1,#self.Loop.threads do local dQ=self.Loop.threads[w]if coroutine.status(dQ)=="dead"then dP[#dP+1]=w else local dR={coroutine.resume(dQ,self.Loop,delta_time)}os.queueEvent("coroutine",dQ,coroutine.status(dQ),table.unpack(dR))end end;if#dP>0 then i.better_remove(self.Loop.threads,table.unpack(dP))end end;self.Loop:draw_elements(delta_time)self.interval=1/self.Loop.options.FPS_target end)setmetatable(dN,dK)return dN end,set_monitors=function(self,b7)self.monitors=m.get_monitors(b7)end,set_elements=function(self,dj)self.elements.high_priority={}self.elements.low_priority={}for d,ad in next,dj do if ad.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,ad)else table.insert(self.elements.low_priority,ad)end end end,draw_elements=function(self,delta_time)local function dS(aq)for d=#aq,1,-1 do local dk=aq[d]if dk.draw then dk:draw(delta_time)end end end;if self.callbacks.onDraw(self,delta_time)then return end;local dT=bw.screens;bw.screens=self.monitors;dS(self.elements.low_priority)dS(self.elements.high_priority)for d,dk in next,self.elements.loop do if dk.draw then dk:draw(delta_time)end end;bw:draw()bw.screens=dT end,event_elements=function(self,formatted_event)local function b3(aq)for d,dk in next,aq do if dk.event then if dk:event(formatted_event)then formatted_event={name=b.DELETED,deleted=formatted_event}end end end end;if self.callbacks.onEvent(self,formatted_event)then formatted_event={name=b.DELETED,deleted=formatted_event}end;if self.options.stop_on_terminate and formatted_event.name==b.TERMINATE then self:stop()return end;if formatted_event.name==b.TOUCH then local dU=false;for dV,ba in next,self.monitors do if formatted_event.from==dV then dU=true;break end end;if not dU then formatted_event={name=b.DELETED,deleted=formatted_event}end end;b3(self.elements.loop)local dW={}for d,dk in next,self.elements.high_priority do if dk.event then local dX=dk:event(formatted_event)if dX then formatted_event={name=b.DELETED,deleted=formatted_event}if self.elements.high_priority~=dk then table.insert(dW,{element=dk,key=d})end end end end;if#dW>0 then for d,ad in next,dW do table.insert(self.elements.high_priority,1,ad.element)table.remove(self.elements.high_priority,ad.key+#dW)end end;b3(self.elements.low_priority)end,start=function(self)self.enabled=true;cc:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local dY=os.startTimer(1/self.options.EPS_target)local dZ;if self.options.raw_mode then dZ={os.pullEventRaw()}else dZ={os.pullEvent()}end;local formatted_event=k.format_event_table(dZ)cc:manage_event(formatted_event)self:event_elements(formatted_event)self.stats.Events=self.stats.Events+1;os.cancelTimer(dY)end;cc:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}dK.__index=dK;local d_={__call=function(self,...)return self.new(...)end}d_.__index=d_;local e0={__call=function(self,...)return self.new(...)end,set_callback=function(self,o,p)if o==b.ONSTART then self.callbacks.onStart=p elseif o==b.ONSTOP then self.callbacks.onStop=p elseif o==b.ONDRAW then self.callbacks.onDraw=p elseif o==b.ONPRESS then self.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then self.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then self.callbacks.onTimeout=p elseif o==b.ONCLOCK then self.callbacks.onClock=p elseif o==b.ONEVENT then self.callbacks.onEvent=p elseif o==b.ONFOCUS then self.callbacks.onFocus=p elseif o==b.ONKEY then self.callbacks.onKey=p elseif o==b.ONCHAR then self.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then self.callbacks.onMouseScroll=p elseif o==b.ONCURSORCHANGE then self.callbacks.onCursorChange=p elseif o==b.ONWRITE then self.callbacks.onWrite=p elseif o==b.ONCONNECT then self.callbacks.onConnect=p elseif o==b.ONDISCONNECT then self.callbacks.onDisconnect=p elseif o==b.ONSEND then self.callbacks.onSend=p elseif o==b.ONRECEIVE then self.callbacks.onReceive=p elseif o==b.ONDRAG then self.callbacks.onDrag=p elseif o==b.ONRESIZE then self.callbacks.onResize=p elseif o==b.ONPASTE then self.callbacks.onPaste=p elseif o==b.ONHOVER then self.callbacks.onHover=p end end}e0.__index=e0;setmetatable(h.Vector2,d_)setmetatable(h.Vector3,d_)setmetatable(dq,e0)setmetatable(dB,e0)for d,dk in next,cg do setmetatable(dk,e0)end;setmetatable(dK,e0)local e1={...}if e1[1]=="help"then local N={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,cl in next,N do m.better_print(term,cl.foreground,cl.background,cl.text)end elseif e1[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif e1[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif e1[1]=="copyright"then local e2={colors.red,colors.yellow,colors.green}local e3=g.split(a.copyright,"\n\n")for d,e4 in next,e3 do m.better_print(term,e2[d],nil,e4)if d<#e3 then read("")end end elseif e1[1]=="setup"then if shell then local e5="YAGUI_PATH"local W="/"..shell.getRunningProgram()l.set(e5,W)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(e5),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif e1[1]=="create"then if e1[2]then local W=shell.resolve(e1[2])if g.get_extension(W)~="lua"then W=W..".lua"end;if fs.exists(W)then m.better_print(term,colors.red,nil,"PATH: \"/",W,"\" already exists, please use another path or delete it.")else local dF=fs.open(W,"w")dF.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")dF.close()m.better_print(term,colors.green,nil,"New project was created at \"/",W,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif e1[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",e1[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local e6={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=bw,input=cc,WSS=dq,wireless_screen_share=dq,FT=dB,file_transfer=dB,gui_elements=cg,Loop=dK}for d,ad in next,b do e6[d]=ad end;return e6