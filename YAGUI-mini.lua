--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.22",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",DELETED="DELETED",DISCONNECTED="DISCONNECTED",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={__call=function(self,...)return self.new(...)end}e.__index=e;local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)if o==b.ONSTART then n.callbacks.onStart=p elseif o==b.ONSTOP then n.callbacks.onStop=p elseif o==b.ONDRAW then n.callbacks.onDraw=p elseif o==b.ONPRESS then n.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then n.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then n.callbacks.onTimeout=p elseif o==b.ONCLOCK then n.callbacks.onClock=p elseif o==b.ONEVENT then n.callbacks.onEvent=p elseif o==b.ONFOCUS then n.callbacks.onFocus=p elseif o==b.ONKEY then n.callbacks.onKey=p elseif o==b.ONCHAR then n.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then n.callbacks.onMouseScroll=p elseif o==b.ONCURSORCHANGE then n.callbacks.onCursorChange=p elseif o==b.ONWRITE then n.callbacks.onWrite=p end end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=r or"unknown"r=tostring(r)local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=x:gsub(t,", ")v=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",r,(w+1)/2,E,z)u=true;break end end;if u then error(v,3)return false end;return true end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(F,G)if not G then G=""end;local H=""for d=1,#F do local I=F[d]H=H..tostring(I)if d<#F then H=H..G end end;return H end,split=function(H,G)if not string.find(H,G)then return{H}end;local J={}local K="(.-)"..G.."()"local L;for M,N in string.gfind(H,K)do table.insert(J,M)L=N end;table.insert(J,string.sub(H,L))return J end,compare_versions=function(O,P)local Q=g.split(O,".")local R=g.split(P,".")local S=#Q;local T=#R;for w=1,math.min(S,T)do if tonumber(Q[w])>tonumber(R[w])then return 1 elseif tonumber(Q[w])<tonumber(R[w])then return-1 end end;if S>T then return 1 elseif S<T then return-1 end;return 0 end,escape_magic_characters=function(H)for d,U in next,g.magic_characters do H=H:gsub("[%"..U.."]",'%%%'..U)end;return H end,get_extension=function(V)local W,X=V:gsub(".*%.","")if X>0 then return W end;return""end,format_number=function(Y,Z)Y=tostring(Y)Z=Z or 0;local _=Y:gsub("(.*)%..*","%1")if Z<=0 then return _ end;local a0=#_+1;local a1=Y:sub(a0+1,a0+Z)a1=a1:reverse():gsub("0*(.*)","%1"):reverse()if#a1>0 then return _.."."..a1 end;return _ end,trim=function(H)return H:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a2,a3)local a4={x=a2 or 0,y=a3 or 0}setmetatable(a4,h.Vector2)return a4 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a5)return self.x*a5.x+self.y*a5.y end,cross=function(self,a5)return self.x*a5.y-self.y*a5.x end,rotate=function(self,a6)local a7=math.cos(a6)local a8=math.sin(a6)return h.Vector2.new(a7*self.x-a8*self.y,a8*self.x+a7*self.y)end,string=function(self,Z)if Z then return string.format("(%."..tostring(Z).."f; %."..tostring(Z).."f)",self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a5)return h.Vector2.new(self.x+a5.x,self.y+a5.y)end,__sub=function(self,a5)return h.Vector2.new(self.x-a5.x,self.y-a5.y)end,__mul=function(self,Y)if type(self)=="number"then return h.Vector2.new(Y.x*self,Y.y*self)else return h.Vector2.new(self.x*Y,self.y*Y)end end,__div=function(self,Y)return h.Vector2.new(self.x/Y,self.y/Y)end,__eq=function(self,a5)return self.x==a5.x and self.y==a5.y end,__lt=function(self,a5)return self:length_sq()<a5:length_sq()end,__le=function(self,a5)return self:length_sq()<=a5:length_sq()end},Vector3={new=function(a2,a3,a9)local aa={x=a2 or 0,y=a3 or 0,z=a9 or 0}setmetatable(aa,h.Vector3)return aa end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)+math.pow(self.z,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a5)return self.x*a5.x+self.y*a5.y+self.z*a5.z end,cross=function(self,a5)return h.Vector3.new(self.y*a5.z-self.z*a5.y,self.z*a5.x-self.x*a5.z,self.x*a5.y-self.y*a5.x)end,rotate=function(self,ab,a6)local a7=math.cos(a6)return a7*self+math.sin(a6)*ab:cross(self)+(1-a7)*ab:dot(self)*ab end,string=function(self,Z)if Z then return string.format("(%."..tostring(Z).."f; %."..tostring(Z).."f; %."..tostring(Z).."f)",self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a5)return h.Vector3.new(self.x+a5.x,self.y+a5.y,self.z+a5.z)end,__sub=function(self,a5)return h.Vector3.new(self.x-a5.x,self.y-a5.y,self.z-a5.z)end,__mul=function(self,Y)if type(self)=="number"then return h.Vector3.new(Y.x*self,Y.y*self,Y.z*self)else return h.Vector3.new(self.x*Y,self.y*Y,self.z*Y)end end,__div=function(self,Y)return h.Vector3.new(self.x/Y,self.y/Y,self.z/Y)end,__eq=function(self,a5)return self.x==a5.x and self.y==a5.y and self.z==a5.z end,__lt=function(self,a5)return self:length_sq()<a5:length_sq()end,__le=function(self,a5)return self:length_sq()<=a5:length_sq()end},map=function(I,ac,ad,ae,af,ag)local ah=(I-ac)/(ad-ac)*(af-ae)+ae;if ag then return h.constrain(ah,ae,af)end;return ah end,constrain=function(I,ai,aj)return math.min(aj,math.max(ai,I))end,round=function(Y)return math.floor(Y+0.5)end,round_numbers=function(...)local ak={...}local al={}for d,Y in next,ak do table.insert(al,h.round(Y))end;return table.unpack(al)end,floor_numbers=function(...)local ak={...}local am={}for d,Y in next,ak do table.insert(am,math.floor(Y))end;return table.unpack(am)end,ceil_numbers=function(...)local ak={...}local an={}for d,Y in next,ak do table.insert(an,math.ceil(Y))end;return table.unpack(an)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(F,I)for ao,ap in next,F do if ap==I then return true,ao end end;return false,nil end,has_key=function(F,d)if F[d]~=nil then return true,F[d]end;return false,nil end,serialise=function(F,aq,ar,as,at,au,av,aw,ax)local aq=aq or 0;local av=av or"  "local ay=0;local aw=aw or"\n"local ax=ax or" "if not ar then av,aw,ax="","",""end;local az={}local aA="root"local function aB(F,V)local aC=av:rep(ay+1)local aD="{"..aw;local function aE(F)for d,I in next,F do local aF=type(d)local aG;if aF=="string"then aG=string.format("%q",d)else aG=tostring(d)end;if not au and d=="__index"then I={}end;local aH=type(I)local aI=tostring(I)aD=aD..string.format("%s[%s]%s=%s",aC,aG,ax,ax)if aH=="table"then if not next(I)then aD=aD.."{}"elseif aq<=-1 or ay<aq then if az[aI]and not as then aD=aD..string.format("%q",az[aI])else local aJ=V.."."..tostring(d)az[aI]=aJ;ay=ay+1;aD=aD..aB(I,aJ)ay=ay-1 end else aD=aD.."{}"end elseif aH=="string"or aH=="function"then aD=aD..string.format("%q",aI)else aD=aD..string.format("%s",aI)end;if next(F,d)then aD=aD..","..aw else aD=aD..aw end end end;local aK=getmetatable(F)if at and aK then aE(aK)if next(F)then aD=aD:sub(1,#aD-#aw)..","..aD:sub(#aD-#aw+1)end end;aE(F)aD=aD..av:rep(ay).."}"return aD end;return aB(F,aA)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aL)return j.colors[aL]end,paint_to_color=function(aM)return j.paint[aM]end}for d,I in next,j.colors do j.paint[I]=d end;k={is_area_pressed=function(aN,aO,a2,a3,aP,aQ)if aN>=a2 and aN<a2+aP then if aO>=a3 and aO<a3+aQ then return true end end;return false end,format_event_table=function(aR)local o={}o.name=aR[1]if o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=aR[2]o.x=aR[3]o.y=aR[4]return o elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=aR[2]o.button=1;o.x=aR[3]o.y=aR[4]return o elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=aR[2]o.x=aR[3]o.y=aR[4]return o elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=aR[2]o.x=aR[3]o.y=aR[4]return o elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=aR[2]o.x=aR[3]o.y=aR[4]return o elseif o.name=="char"then o.name=b.CHAR;o.char=aR[2]return o elseif o.name=="key"then o.name=b.KEY;o.key=aR[2]return o elseif o.name=="key_up"then o.name=b.KEYUP;o.key=aR[2]return o elseif o.name=="paste"then o.name=b.PASTE;o.paste=aR[2]return o end;table.remove(aR,1)o.parameters=aR;return o end}l={_path="/.settings",set=function(aS,I)settings.set(aS,I)settings.save(l._path)end,unset=function(aS)settings.unset(aS)settings.save(l._path)end,get=function(aS)return settings.get(aS)end}m={get_monitors=function(aT)local aU={}for d,aV in next,aT do if aV=="terminal"then aU[aV]=term else if peripheral.getType(aV)=="monitor"then aU[aV]=peripheral.wrap(aV)end end end;return aU end,better_print=function(aW,aX,aY,...)local aZ=g.join({...},"")local a_=aW.getTextColor()local b0=aW.getBackgroundColor()if aX then aW.setTextColor(aX)end;if aY then aW.setBackgroundColor(aY)end;print(aZ)aW.setTextColor(a_)aW.setBackgroundColor(b0)end,better_clear=function(aW)aW.clear()aW.setCursorPos(1,1)end}local b1={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a2,a3)if self.pixels[a2]then if self.pixels[a2][a3]then return true end end;return false end,get_pixel=function(self,a2,a3)if self:is_pixel_custom(a2,a3)then return self.pixels[a2][a3]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,a2,a3,b2,aX,aY)local b3=self:get_pixel(a2,a3)if b2 and#b2==1 then b3.char=b2 end;b3.foreground=aX or b3.background;b3.background=aY or b3.background;if not self.pixels[a2]then self.pixels[a2]={}end;self.pixels[a2][a3]=b3 end,clear=function(self)self.pixels={}end},set_screens=function(self,b4)self.screens=m.get_monitors(b4)end,set_monitors=function(self,aT)self:set_screens(aT)end,clear=function(self)self.buffer:clear()end,draw=function(self)local b5=self.screens;local b6=self.buffer;for b7,b8 in next,b5 do local b9,ba=b8.getCursorPos()local aP,aQ=b8.getSize()for a3=1,aQ do local bb={text="",background="",foreground=""}for a2=1,aP do local b3=b6:get_pixel(a2,a3)bb.text=bb.text..b3.char;bb.background=bb.background..j.colors[b3.background]bb.foreground=bb.foreground..j.colors[b3.foreground]end;b8.setCursorPos(1,a3)b8.blit(bb.text,bb.foreground,bb.background)end;b8.setCursorPos(b9,ba)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a2,a3,aL)self.buffer:set_pixel(a2,a3," ",aL,aL)end,write=function(self,a2,a3,bc,aX,aY)for bd=0,#bc-1 do local b2=bc:sub(bd+1,bd+1)self.buffer:set_pixel(a2+bd,a3,b2,aX,aY)end end,blit=function(self,a2,a3,bc,aX,aY)local be=""local bf=""aX=aX or""aY=aY or""for bd=0,#bc-1 do local b2=bc:sub(bd+1,bd+1)local bg=aX:sub(bd+1,bd+1)bg=#bg>0 and bg or be;local bh=aY:sub(bd+1,bd+1)bh=#bh>0 and bh or bf;self.buffer:set_pixel(a2+bd,a3,b2,j.paint[bg],j.paint[bh])be=bg;bf=bh end end,rectangle=function(self,a2,a3,aP,aQ,aL)for bd=0,aP-1 do for bi=0,aQ-1 do self:point(a2+bd,a3+bi,aL)end end end,line=function(self,bj,bk,bl,bm,aL)local function bn(bj,bk,bl,bm)local bo=1;if bj>bl then bo=-1 end;local bp=bl-bj;local bq=bm-bk;local br=1;if bq<0 then br=-1;bq=-bq end;local bs=2*bq-bp;local a3=bk;for a2=bj,bl,bo do self:point(a2,a3,aL)if bs>0 then a3=a3+br;bs=bs-2*bp end;bs=bs+2*bq end end;local function bt(bj,bk,bl,bm)local bo=1;if bk>bm then bo=-1 end;local bp=bl-bj;local bq=bm-bk;local bu=1;if bp<0 then bu=-1;bp=-bp end;local bs=2*bp-bq;local a2=bj;for a3=bk,bm,bo do self:point(a2,a3,aL)if bs>0 then a2=a2+bu;bs=bs-2*bq end;bs=bs+2*bp end end;if math.abs(bm-bk)<math.abs(bl-bj)then if bj>bl then bn(bl,bm,bj,bk)else bn(bj,bk,bl,bm)end else if bk>bm then bt(bl,bm,bj,bk)else bt(bj,bk,bl,bm)end end end,circle=function(self,bv,bw,bx,aL)local by=bx*bx;self:point(bv,bw+bx,aL)self:point(bv,bw-bx,aL)self:point(bv+bx,bw,aL)self:point(bv-bx,bw,aL)local a2=1;local a3=math.floor(math.sqrt(by-1)+0.5)while a2<a3 do self:point(bv+a2,bw+a3,aL)self:point(bv+a2,bw-a3,aL)self:point(bv-a2,bw+a3,aL)self:point(bv-a2,bw-a3,aL)self:point(bv+a3,bw+a2,aL)self:point(bv+a3,bw-a2,aL)self:point(bv-a3,bw+a2,aL)self:point(bv-a3,bw-a2,aL)a2=a2+1;a3=math.floor(math.sqrt(by-a2*a2)+0.5)end;if a2==a3 then self:point(bv+a2,bw+a3,aL)self:point(bv+a2,bw-a3,aL)self:point(bv-a2,bw+a3,aL)self:point(bv-a2,bw-a3,aL)end end}local bz={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,bA,d)if self.pressed_keys[d]then if bA then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,bB,...)local keys={...}if not(#keys>0)then return false end;for bC,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if bB then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for bC,d in next,keys do self:remove_key(d)end end,manage_event=function(self,bD)if bD.name==b.KEY then self:add_key(bD.key)elseif bD.name==b.KEYUP then self:remove_key(bD.key)end end}local bE={}bE={side=nil,protocol="YAGUI-"..a.ver.."_WSS",host_prefix="_Host:",default_timeout=0.5,open=function(self,bF)rednet.open(bF)self.side=bF end,close=function(self)rednet.close(self.side)self.side=nil end,server={root={},servername=nil,hostname=nil,host=function(self,bG)if not bG then bG=os.getComputerID()end;bG=tostring(bG)local bH=self.root.protocol..self.root.host_prefix..bG;if rednet.lookup(bH,bG)then return false,bG end;rednet.host(bH,bG)self.servername=bH;self.hostname=bG;return true,bG end,unhost=function(self)rednet.broadcast(b.DISCONNECTED,self.servername)rednet.unhost(self.servername,self.hostname)self.servername=nil;self.hostname=nil end,broadcast=function(self)rednet.broadcast(b1.frame,self.servername)end},client={root={},servername=nil,host_id=nil,connect=function(self,bG)bG=tostring(bG)local bH=self.root.protocol..self.root.host_prefix..bG;local bI=rednet.lookup(bH,bG)if not bI then return false,bG end;self.servername=bH;self.host_id=bI;return true,bG end,disconnect=function(self)self.servername=nil;self.host_id=nil end,listen=function(self,bJ)if not bJ then bJ=self.root.default_timeout end;local bK={rednet.receive(self.servername,bJ)}if bK[1]==self.host_id then local b6=bK[2]if not b6 then return false end;if b6==b.DISCONNECTED then return b6 end;b1.buffer.background=b6.background;b1.buffer.pixels=b6.pixels;return true end;return false end}}bE.server.root=bE;bE.client.root=bE;local bL={}bL={Clock={new=function(bM)local bN={enabled=true,oneshot=false,clock=os.clock(),interval=bM,callbacks={onClock=function()end}}setmetatable(bN,bL.Clock)return bN end,event=function(self,bD)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,bD)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a2,a3,bc,aX,aY)local bO={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_CENTER,text=bc,pos=h.Vector2.new(a2,a3),colors={foreground=aX,background=aY},callbacks={onDraw=function()end}}setmetatable(bO,bL.Label)return bO end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bP=g.split(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,bQ in next,bP do b1:write(self.pos.x,self.pos.y+d-1,bQ,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then local bR=0;for d,bQ in next,bP do if d==1 then bR=math.floor(#bQ/2)b1:write(self.pos.x,self.pos.y,bQ,self.colors.foreground,self.colors.background)else b1:write(self.pos.x+bR-math.floor(#bQ/2),self.pos.y+d-1,bQ,self.colors.foreground,self.colors.background)end end end end},Button={new=function(a2,a3,aP,aQ,bc,aX,bS,bT)local bU={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bc,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),timed={enabled=false,clock=bL.Clock.new(0.5)},colors={foreground=aX,active_background=bS,unactive_background=bT},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}bU.timed.clock.binded_button=bU;bU.timed.clock.oneshot=true;bU.timed.clock:stop()f.set_callback(bU.timed.clock,b.ONCLOCK,function(self,bD)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,bD)self.binded_button.callbacks.onTimeout(self.binded_button,bD)end)setmetatable(bU,bL.Button)return bU end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then b1:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else b1:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local bP=g.split(self.text,"\n")local bV=math.floor((self.size.y-#bP)/2)+self.pos.y;for bi=0,#bP-1 do local bQ=bP[bi+1]local bW;if self.text_alignment==b.ALIGN_LEFT then bW=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then bW=math.floor((self.size.x-#bQ)/2)+self.pos.x end;b1:write(bW,bV+bi,bQ,self.colors.foreground)end end,event=function(self,bD)if self.hidden then return false end;if bD.name==b.TOUCH then if k.is_area_pressed(bD.x,bD.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(bD)return true else self.callbacks.onFailedPress(self,bD)end elseif bz:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(bD)end;if self.timed.enabled then self.timed.clock:event(bD)end end,press=function(self,bD)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,bD)end else self.active=not self.active;self.callbacks.onPress(self,bD)end end},Progressbar={new=function(a2,a3,aP,aQ,bX,ai,aj,aX,bY,bZ)local b_={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),value={max=aj,min=ai,current=bX,draw_percentage=true,percentage_precision=2},colors={foreground=aX,filled_background=bY,unfilled_background=bZ},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(b_,bL.Progressbar)return b_ end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local c0=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local c1=math.floor(self.size.x*c0)b1:rectangle(self.pos.x,self.pos.y,c1,self.size.y,self.colors.filled_background)b1:rectangle(self.pos.x+c1,self.pos.y,self.size.x-c1,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local c2=g.format_number(c0*100,self.value.percentage_precision).."%"local c3=math.floor((self.size.x-#c2)/2)+self.pos.x;local bV=math.floor((self.size.y-1)/2)+self.pos.y;b1:write(c3,bV,c2,self.colors.foreground)end end,event=function(self,bD)if self.hidden then return false end;if bD.name==b.TOUCH then if k.is_area_pressed(bD.x,bD.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,bD)end end end,set=function(self,I)local c4=h.constrain(I,self.value.min,self.value.max)self.value.current=c4 end},Memo={new=function(a2,a3,aP,aQ,aX,aY)local c5={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=bL.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=aX,background=aY,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end}}c5.cursor.blink.binded_cursor=c5.cursor;f.set_callback(c5.cursor.blink,b.ONCLOCK,function(self,bD)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(c5,bL.Memo)return c5 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)b1:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local c6=self.cursor.pos.x-self.first_visible_char;local c7=self.cursor.pos.y-self.first_visible_line;for a3=1,self.size.y do local c8=a3+self.first_visible_line-1;local c9=self.rich_text[c8]or{}local bQ=self.lines[c8]or""local ca=self.first_visible_char;local cb=self.first_visible_char+self.size.x-1;local cc=bQ:sub(ca,cb)local cd=self.pos.y+a3-1;if c9.background then if type(c9.background)=="string"then local ce=c9.background:sub(ca,cb)ce=#ce>0 and ce or c9.background:sub(#c9.background)b1:blit(self.pos.x,cd,string.rep(" ",self.size.x),nil,ce)else b1:rectangle(self.pos.x,cd,self.size.x,1,c9.background)end end;if c9.foreground then if type(c9.foreground)=="string"then local cf=c9.foreground:sub(ca,cb)cf=#cf>0 and cf or c9.foreground:sub(#c9.foreground)b1:blit(self.pos.x,cd,cc,cf)else b1:write(self.pos.x,cd,cc,c9.foreground)end else b1:write(self.pos.x,cd,cc,self.colors.foreground)end end;if self.cursor.visible and c6>=0 and c6<self.size.x and c7>=0 and c7<self.size.y then b1:write(c6+self.pos.x,c7+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,bD)if self.hidden then return false end;if not self.editable then return false end;if bD.name==b.TOUCH then if k.is_area_pressed(bD.x,bD.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,bD)self:focus(true,bD)local a2=bD.x-self.pos.x;local a3=bD.y-self.pos.y;self:set_cursor(a2+self.first_visible_char,a3+self.first_visible_line)return true else self.callbacks.onFailedPress(self,bD)self:focus(false,bD)return false end elseif bD.name==b.DELETED then self:focus(false,bD)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,bD)if bD.name==b.PASTE then self:write(bD.paste)elseif bD.name==b.CHAR then if self.callbacks.onChar(self,bD)then return true end;self:write(bD.char)elseif bD.name==b.KEY then if self.callbacks.onKey(self,bD)then return true end;if bz:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cg=self.lines[self.cursor.pos.y-1]local ch=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local b9=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(ch.."\n"..cg)self:set_cursor(b9,self.cursor.pos.y-1)end elseif bz:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local ch=self.lines[self.cursor.pos.y]local ci=self.lines[self.cursor.pos.y+1]if not ci then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local b9=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(ci.."\n"..ch)self:set_cursor(b9,self.cursor.pos.y)elseif bD.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)elseif bD.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)elseif bD.key==b.KEY_RIGHT then local bQ=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#bQ+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end elseif bD.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local cj=self.lines[self.cursor.pos.y-1]self:set_cursor(#cj+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif bD.key==b.KEY_BACKSPACE then local bQ=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local ck=#self.lines[self.cursor.pos.y-1]+1;local cl=self.cursor.pos.y-1;self:set_cursor(ck,cl)self:write(bQ)self:set_cursor(ck,cl)end else local aw=bQ:sub(1,self.cursor.pos.x-2)..bQ:sub(self.cursor.pos.x)self.lines[self.cursor.pos.y]=aw;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,aw,{aw})end elseif bD.key==b.KEY_DELETE then local bQ=self.lines[self.cursor.pos.y]local cm=bQ:sub(self.cursor.pos.x)if#cm>0 then local aw=bQ:sub(1,self.cursor.pos.x-1)..bQ:sub(self.cursor.pos.x+1)self.lines[self.cursor.pos.y]=aw;self.callbacks.onWrite(self,aw,{aw})else local ci=self.lines[self.cursor.pos.y+1]if ci then local ck=self.cursor.pos.x;local cl=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(ci)self:set_cursor(ck,cl)end end elseif bD.key==b.KEY_ENTER then local cn=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local co=cn:gsub("(%s*).*","%1")self:write("\n"..co)elseif bD.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)elseif bD.key==b.KEY_HOME then local cn=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local co=cn:gsub("(%s*).*","%1")self:set_cursor(#co+1,self.cursor.pos.y)elseif bz:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local cp=self.lines[self.cursor.pos.y]local co=cp:gsub("^(%s*).*$","%1")local cq=math.min(#self.tab_spaces,#co)local aw=cp:sub(cq+1)self.lines[self.cursor.pos.y]=aw;self:set_cursor(self.cursor.pos.x-cq,self.cursor.pos.y)self.callbacks.onWrite(self,aw,{aw})elseif bD.key==b.KEY_TAB then local b9=self.cursor.pos.x;local cr=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cs=#self.lines[self.cursor.pos.y]-cr;self:set_cursor(b9+cs,self.cursor.pos.y)end elseif bD.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,bD)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+bD.direction,1,#self.lines)end;return true end end,focus=function(self,ct,bD)if ct then self.focussed=true;self.callbacks.onFocus(self,bD)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,bD)end end,set_cursor=function(self,ck,cl,cu)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then cl=h.constrain(cl,1,self.limits.y)end;if cu then for a3=#self.lines+1,cl do if not self.lines[a3]then self.lines[a3]=""end end else cl=h.constrain(cl,1,#self.lines)end;ck=h.constrain(ck,1,#self.lines[cl]+1)local c6=ck-self.first_visible_char;local c7=cl-self.first_visible_line;if c6>=self.size.x then self.first_visible_char=self.first_visible_char+c6-self.size.x+1 elseif c6<0 then self.first_visible_char=self.first_visible_char+c6 end;if c7>=self.size.y then self.first_visible_line=self.first_visible_line+c7-self.size.y+1 elseif c7<0 then self.first_visible_line=self.first_visible_line+c7 end;self.callbacks.onCursorChange(self,ck,cl)self.cursor.pos=h.Vector2.new(ck,cl)end,write=function(self,...)local bc=g.join({...},"")local bP=g.split(bc,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local K="[^"..g.escape_magic_characters(g.join(self.whitelist,"")).."]"for d,bQ in next,bP do bP[d]=bQ:gsub(K,"")end elseif#self.blacklist>0 then local K="["..g.escape_magic_characters(g.join(self.blacklist,"")).."]"for d,bQ in next,bP do bP[d]=bQ:gsub(K,"")end end;if self.limits.y>0 then for a3=1,#self.lines+#bP-1-self.limits.y do table.remove(bP)end;if#bP==0 then return end end;if#bP>1 then for cv,bQ in next,bP do if cv==1 then local cw=self.lines[self.cursor.pos.y]local cx=cw:sub(1,self.cursor.pos.x-1)local cm=cw:sub(self.cursor.pos.x)local cy=bP[#bP]if self.limits.x>0 then bQ=bQ:sub(1,self.limits.x-#cx)cy=cy:sub(1,self.limits.x-#cm)end;self.lines[self.cursor.pos.y]=cx..bQ;table.insert(self.lines,self.cursor.pos.y+1,cy..cm)self:set_cursor(#cy+1,self.cursor.pos.y+1)elseif cv==#bP then break else if self.limits.x>0 then bQ=bQ:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,bQ)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cw=self.lines[self.cursor.pos.y]local cx=cw:sub(1,self.cursor.pos.x-1)local cm=cw:sub(self.cursor.pos.x)if self.limits.x>0 then bP[1]=bP[1]:sub(1,self.limits.x-(#cx+#cm))end;self.lines[self.cursor.pos.y]=cx..bP[1]..cm;self:set_cursor(self.cursor.pos.x+#bP[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bc,bP)end,print=function(self,...)local bc=g.join({...},"")local aw=#self.lines>0 and"\n"or""self:write(aw..bc)end,clear=function(self)self.lines={""}self:set_cursor(1,1)end},Window={new=function(a2,a3,aP,aQ,aY,cz)local cA={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),drag_options={enabled=true,from=h.Vector2.new(1,1)},shadow={enabled=cz,offset=h.Vector2.new(1,1)},elements={},colors={background=aY,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end}}setmetatable(cA,bL.Window)return cA end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then b1:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;b1:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,bD)if self.hidden then return false end;local cB=self:event_elements(bD)if not cB then if bD.name==b.TOUCH then if k.is_area_pressed(bD.x,bD.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=h.Vector2.new(bD.x,bD.y)self.focussed=true;self.callbacks.onPress(self,bD)self.callbacks.onFocus(self,bD)return true else self.focussed=false;self.callbacks.onFailedPress(self,bD)self.callbacks.onFocus(self,bD)end elseif bD.name==b.MOUSEDRAG and self.focussed then self:drag(bD.x,bD.y)return true elseif bD.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,bD)end else self.focussed=false;self.callbacks.onFocus(self,bD)end;return cB end,drag=function(self,a2,a3)if self.drag_options.enabled then local cC=h.Vector2.new(a2-self.drag_options.from.x,a3-self.drag_options.from.y)self.pos=self.pos+cC;for d,cD in next,self.elements do if cD.pos then cD.pos=cD.pos+cC end end;self.drag_options.from=h.Vector2.new(a2,a3)end end,set_elements=function(self,cE,cF)self.elements={}for d,cD in next,cE do if cF then cD.pos=self.pos+cD.pos-h.Vector2.ONE end;table.insert(self.elements,cD)end end,draw_elements=function(self)for d=#self.elements,1,-1 do local cD=self.elements[d]if cD.draw then cD:draw()end end end,event_elements=function(self,bD)local cB=false;for d,cD in next,self.elements do if cD.event then local cG=cD:event(bD)cB=cB or cG;if cG then bD={name=b.DELETED}end end end;return cB end}}bL.Clock.__index=bL.Clock;bL.Label.__index=bL.Label;bL.Button.__index=bL.Button;bL.Progressbar.__index=bL.Progressbar;bL.Memo.__index=bL.Memo;bL.Window.__index=bL.Window;local cH={}cH={new=function(cI,cJ)local cK={options={enabled=false,FPS_target=cI,EPS_target=cJ},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=bL.Clock.new(1/cI),stats_clock=bL.Clock.new(1),FPS_label=bL.Label.new(1,1,"1 FPS",colors.white),EPS_label=bL.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,cL)self.enabled=cL;self.elements.stats_clock.enabled=cL;self.elements.FPS_label.hidden=not cL;self.elements.EPS_label.hidden=not cL end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+h.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}cK.elements.loop.stats_clock.stats=cK.stats;cK.stats.elements=cK.elements.loop;f.set_callback(cK.elements.loop.stats_clock,b.ONCLOCK,function(self,bD)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)cK.stats:enable(false)setmetatable(cK,cH)return cK end,set_monitors=function(self,aT)self.monitors=m.get_monitors(aT)end,set_elements=function(self,cE)self.elements.high_priority={}self.elements.low_priority={}for d,I in next,cE do if I.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,I)else table.insert(self.elements.low_priority,I)end end end,draw_elements=function(self)local function cM(F)for d=#F,1,-1 do local cD=F[d]if cD.draw then cD:draw()end end end;self.callbacks.onDraw(self)local cN=b1.screens;b1.screens=self.monitors;cM(self.elements.low_priority)cM(self.elements.high_priority)for d,cD in next,self.elements.loop do if cD.draw then cD:draw()end end;b1:draw()b1.screens=cN;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,bD)local function aR(F)for d,cD in next,F do if cD.event then if cD:event(bD)then bD={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,bD)then bD={name=b.DELETED}end;if bD.name==b.TOUCH then local cO=false;for cP,aW in next,self.monitors do if bD.from==cP then cO=true;break end end;if not cO then bD={name=b.DELETED}end end;aR(self.elements.loop)local cQ={}for d,cD in next,self.elements.high_priority do if cD.event then local cR=cD:event(bD)if cR then bD={name=b.DELETED}if self.elements.high_priority~=cD then table.insert(cQ,{element=cD,key=d})end end end end;if#cQ>0 then for d,I in next,cQ do table.insert(self.elements.high_priority,1,I.element)table.remove(self.elements.high_priority,I.key+#cQ)end end;aR(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;bz:reset()f.set_callback(self.elements.loop.clock,b.ONCLOCK,function(cS,bD)self.callbacks.onClock(self,bD)self:draw_elements()cS.interval=1/self.options.FPS_target end)self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local cT=os.startTimer(1/self.options.EPS_target)local cU={os.pullEvent()}local bD=k.format_event_table(cU)bz:manage_event(bD)self:event_elements(bD)os.cancelTimer(cT)end;bz:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}cH.__index=cH;setmetatable(h.Vector2,e)setmetatable(h.Vector3,e)for d,cD in next,bL do setmetatable(cD,e)end;setmetatable(cH,e)local cV={...}if cV[1]=="help"then local bP={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,bQ in next,bP do m.better_print(term,bQ.foreground,bQ.background,bQ.text)end elseif cV[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif cV[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif cV[1]=="copyright"then local cW={colors.red,colors.yellow,colors.green}local cX=g.split(a.copyright,"\n\n")for d,cY in next,cX do m.better_print(term,cW[d],nil,cY)if d<#cX then read("")end end elseif cV[1]=="setup"then if shell then local cZ="YAGUI_PATH"local V="/"..shell.getRunningProgram()l.set(cZ,V)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(cZ),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif cV[1]=="create"then if cV[2]then local V=shell.resolve(cV[2])if g.get_extension(V)~="lua"then V=V..".lua"end;if fs.exists(V)then m.better_print(term,colors.red,nil,"PATH: \"/",V,"\" already exists, please use another path or delete it.")else local c_=fs.open(V,"w")c_.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")c_.close()m.better_print(term,colors.green,nil,"New project was created at \"/",V,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif cV[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",cV[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local d0={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=b1,input=bz,WSS=bE,wireless_screen_share=bE,gui_elements=bL,Loop=cH}for d,I in next,b do d0[d]=I end;return d0