--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.24",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",DELETED="DELETED",NONE="NONE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={__call=function(self,...)return self.new(...)end}e.__index=e;local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)if o==b.ONSTART then n.callbacks.onStart=p elseif o==b.ONSTOP then n.callbacks.onStop=p elseif o==b.ONDRAW then n.callbacks.onDraw=p elseif o==b.ONPRESS then n.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then n.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then n.callbacks.onTimeout=p elseif o==b.ONCLOCK then n.callbacks.onClock=p elseif o==b.ONEVENT then n.callbacks.onEvent=p elseif o==b.ONFOCUS then n.callbacks.onFocus=p elseif o==b.ONKEY then n.callbacks.onKey=p elseif o==b.ONCHAR then n.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then n.callbacks.onMouseScroll=p elseif o==b.ONCURSORCHANGE then n.callbacks.onCursorChange=p elseif o==b.ONWRITE then n.callbacks.onWrite=p elseif o==b.ONCONNECT then n.callbacks.onConnect=p elseif o==b.ONDISCONNECT then n.callbacks.onDisconnect=p end end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=r or"unknown"r=tostring(r)local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=x:gsub(t,", ")v=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",r,(w+1)/2,E,z)u=true;break end end;if u then error(v,3)return false end;return true end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(F,G)if not G then G=""end;local H=""for d=1,#F do local I=F[d]H=H..tostring(I)if d<#F then H=H..G end end;return H end,split=function(H,G)if not string.find(H,G)then return{H}end;local J={}local K="(.-)"..G.."()"local L;for M,N in string.gfind(H,K)do table.insert(J,M)L=N end;table.insert(J,string.sub(H,L))return J end,compare_versions=function(O,P)local Q=g.split(O,".")local R=g.split(P,".")local S=#Q;local T=#R;for w=1,math.min(S,T)do if tonumber(Q[w])>tonumber(R[w])then return 1 elseif tonumber(Q[w])<tonumber(R[w])then return-1 end end;if S>T then return 1 elseif S<T then return-1 end;return 0 end,escape_magic_characters=function(H)for d,U in next,g.magic_characters do H=H:gsub("[%"..U.."]",'%%%'..U)end;return H end,get_extension=function(V)local W,X=V:gsub(".*%.","")if X>0 then return W end;return""end,format_number=function(Y,Z)Y=tostring(Y)Z=Z or 0;local _=Y:gsub("(.*)%..*","%1")if Z<=0 then return _ end;local a0=#_+1;local a1=Y:sub(a0+1,a0+Z)a1=a1:reverse():gsub("0*(.*)","%1"):reverse()if#a1>0 then return _.."."..a1 end;return _ end,trim=function(H)return H:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a2,a3)local a4={x=a2 or 0,y=a3 or 0}setmetatable(a4,h.Vector2)return a4 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a5)return self.x*a5.x+self.y*a5.y end,cross=function(self,a5)return self.x*a5.y-self.y*a5.x end,rotate=function(self,a6)local a7=math.cos(a6)local a8=math.sin(a6)return h.Vector2.new(a7*self.x-a8*self.y,a8*self.x+a7*self.y)end,string=function(self,Z)if Z then return string.format("(%."..tostring(Z).."f; %."..tostring(Z).."f)",self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a5)return h.Vector2.new(self.x+a5.x,self.y+a5.y)end,__sub=function(self,a5)return h.Vector2.new(self.x-a5.x,self.y-a5.y)end,__mul=function(self,Y)if type(self)=="number"then return h.Vector2.new(Y.x*self,Y.y*self)else return h.Vector2.new(self.x*Y,self.y*Y)end end,__div=function(self,Y)return h.Vector2.new(self.x/Y,self.y/Y)end,__eq=function(self,a5)return self.x==a5.x and self.y==a5.y end,__lt=function(self,a5)return self:length_sq()<a5:length_sq()end,__le=function(self,a5)return self:length_sq()<=a5:length_sq()end},Vector3={new=function(a2,a3,a9)local aa={x=a2 or 0,y=a3 or 0,z=a9 or 0}setmetatable(aa,h.Vector3)return aa end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)+math.pow(self.z,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a5)return self.x*a5.x+self.y*a5.y+self.z*a5.z end,cross=function(self,a5)return h.Vector3.new(self.y*a5.z-self.z*a5.y,self.z*a5.x-self.x*a5.z,self.x*a5.y-self.y*a5.x)end,rotate=function(self,ab,a6)local a7=math.cos(a6)return a7*self+math.sin(a6)*ab:cross(self)+(1-a7)*ab:dot(self)*ab end,string=function(self,Z)if Z then return string.format("(%."..tostring(Z).."f; %."..tostring(Z).."f; %."..tostring(Z).."f)",self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a5)return h.Vector3.new(self.x+a5.x,self.y+a5.y,self.z+a5.z)end,__sub=function(self,a5)return h.Vector3.new(self.x-a5.x,self.y-a5.y,self.z-a5.z)end,__mul=function(self,Y)if type(self)=="number"then return h.Vector3.new(Y.x*self,Y.y*self,Y.z*self)else return h.Vector3.new(self.x*Y,self.y*Y,self.z*Y)end end,__div=function(self,Y)return h.Vector3.new(self.x/Y,self.y/Y,self.z/Y)end,__eq=function(self,a5)return self.x==a5.x and self.y==a5.y and self.z==a5.z end,__lt=function(self,a5)return self:length_sq()<a5:length_sq()end,__le=function(self,a5)return self:length_sq()<=a5:length_sq()end},map=function(I,ac,ad,ae,af,ag)local ah=(I-ac)/(ad-ac)*(af-ae)+ae;if ag then return h.constrain(ah,ae,af)end;return ah end,constrain=function(I,ai,aj)return math.min(aj,math.max(ai,I))end,round=function(Y)return math.floor(Y+0.5)end,round_numbers=function(...)local ak={...}local al={}for d,Y in next,ak do table.insert(al,h.round(Y))end;return table.unpack(al)end,floor_numbers=function(...)local ak={...}local am={}for d,Y in next,ak do table.insert(am,math.floor(Y))end;return table.unpack(am)end,ceil_numbers=function(...)local ak={...}local an={}for d,Y in next,ak do table.insert(an,math.ceil(Y))end;return table.unpack(an)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(F,I)for ao,ap in next,F do if ap==I then return true,ao end end;return false,nil end,has_key=function(F,d)if F[d]~=nil then return true,F[d]end;return false,nil end,serialise=function(F,aq,ar,as,at,au,av,aw,ax)local aq=aq or 0;local av=av or"  "local ay=0;local aw=aw or"\n"local ax=ax or" "if not ar then av,aw,ax="","",""end;local az={}local aA="root"local function aB(F,V)local aC=av:rep(ay+1)local aD="{"..aw;local function aE(F)for d,I in next,F do local aF=type(d)local aG;if aF=="string"then aG=string.format("%q",d)else aG=tostring(d)end;if not au and d=="__index"then I={}end;local aH=type(I)local aI=tostring(I)aD=aD..string.format("%s[%s]%s=%s",aC,aG,ax,ax)if aH=="table"then if not next(I)then aD=aD.."{}"elseif aq<=-1 or ay<aq then if az[aI]and not as then aD=aD..string.format("%q",az[aI])else local aJ=V.."."..tostring(d)az[aI]=aJ;ay=ay+1;aD=aD..aB(I,aJ)ay=ay-1 end else aD=aD.."{}"end elseif aH=="string"or aH=="function"then aD=aD..string.format("%q",aI)else aD=aD..string.format("%s",aI)end;if next(F,d)then aD=aD..","..aw else aD=aD..aw end end end;local aK=getmetatable(F)if at and aK then aE(aK)if next(F)then aD=aD:sub(1,#aD-#aw)..","..aD:sub(#aD-#aw+1)end end;aE(F)aD=aD..av:rep(ay).."}"return aD end;return aB(F,aA)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aL)return j.colors[aL]end,paint_to_color=function(aM)return j.paint[aM]end}for d,I in next,j.colors do j.paint[I]=d end;k={is_area_pressed=function(aN,aO,a2,a3,aP,aQ)if aN>=a2 and aN<a2+aP then if aO>=a3 and aO<a3+aQ then return true end end;return false end,format_event_table=function(aR)local o={}o.name=aR[1]if o.name=="timer"then o.name=b.TIMER;o.id=o[2]elseif o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=aR[2]o.x=aR[3]o.y=aR[4]elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=aR[2]o.button=1;o.x=aR[3]o.y=aR[4]elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=aR[2]o.x=aR[3]o.y=aR[4]elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=aR[2]o.x=aR[3]o.y=aR[4]elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=aR[2]o.x=aR[3]o.y=aR[4]elseif o.name=="char"then o.name=b.CHAR;o.char=aR[2]elseif o.name=="key"then o.name=b.KEY;o.key=aR[2]elseif o.name=="key_up"then o.name=b.KEYUP;o.key=aR[2]elseif o.name=="paste"then o.name=b.PASTE;o.paste=aR[2]elseif o.name=="rednet_message"then o.name=b.REDNET;o.from=aR[2]o.message=aR[3]local aS=aR[4]if type(aS)=="number"then o.distance=aS else o.protocol=tostring(aS)end elseif o.name=="modem_message"then local aT=aR[5]o.name=b.MODEM;o.side=aR[2]o.from=aR[4]o.protocol=aT.sProtocol or""o.message=aT.message elseif o.name=="terminate"then o.name=b.TERMINATE else o.parameters={}for d=2,#aR do table.insert(o.parameters,aR[d])end end;o.raw=aR;return o end}l={_path="/.settings",set=function(aU,I)settings.set(aU,I)settings.save(l._path)end,unset=function(aU)settings.unset(aU)settings.save(l._path)end,get=function(aU)return settings.get(aU)end}m={get_monitors=function(aV)local aW={}for d,aX in next,aV do if aX=="terminal"then aW[aX]=term else if peripheral.getType(aX)=="monitor"then aW[aX]=peripheral.wrap(aX)end end end;return aW end,better_print=function(aY,aZ,a_,...)local b0=g.join({...},"")local b1=aY.getTextColor()local b2=aY.getBackgroundColor()if aZ then aY.setTextColor(aZ)end;if a_ then aY.setBackgroundColor(a_)end;print(b0)aY.setTextColor(b1)aY.setBackgroundColor(b2)end,better_clear=function(aY)aY.clear()aY.setCursorPos(1,1)end}local b3={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a2,a3)if self.pixels[a2]then if self.pixels[a2][a3]then return true end end;return false end,get_pixel=function(self,a2,a3)if self:is_pixel_custom(a2,a3)then return self.pixels[a2][a3]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,a2,a3,b4,aZ,a_)local b5=self:get_pixel(a2,a3)if b4 and#b4==1 then b5.char=b4 end;b5.foreground=aZ or b5.background;b5.background=a_ or b5.background;if not self.pixels[a2]then self.pixels[a2]={}end;self.pixels[a2][a3]=b5 end,clear=function(self)self.pixels={}end},set_screens=function(self,b6)self.screens=m.get_monitors(b6)end,set_monitors=function(self,aV)self:set_screens(aV)end,clear=function(self)self.buffer:clear()end,draw=function(self)local b7=self.screens;local b8=self.buffer;for b9,ba in next,b7 do local bb,bc=ba.getCursorPos()local aP,aQ=ba.getSize()for a3=1,aQ do local bd={text="",background="",foreground=""}for a2=1,aP do local b5=b8:get_pixel(a2,a3)bd.text=bd.text..b5.char;bd.background=bd.background..j.colors[b5.background]bd.foreground=bd.foreground..j.colors[b5.foreground]end;ba.setCursorPos(1,a3)ba.blit(bd.text,bd.foreground,bd.background)end;ba.setCursorPos(bb,bc)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a2,a3,aL)self.buffer:set_pixel(a2,a3," ",aL,aL)end,write=function(self,a2,a3,be,aZ,a_)for bf=0,#be-1 do local b4=be:sub(bf+1,bf+1)self.buffer:set_pixel(a2+bf,a3,b4,aZ,a_)end end,blit=function(self,a2,a3,be,aZ,a_)local bg=""local bh=""aZ=aZ or""a_=a_ or""for bf=0,#be-1 do local b4=be:sub(bf+1,bf+1)local bi=aZ:sub(bf+1,bf+1)bi=#bi>0 and bi or bg;local bj=a_:sub(bf+1,bf+1)bj=#bj>0 and bj or bh;self.buffer:set_pixel(a2+bf,a3,b4,j.paint[bi],j.paint[bj])bg=bi;bh=bj end end,rectangle=function(self,a2,a3,aP,aQ,aL)for bf=0,aP-1 do for bk=0,aQ-1 do self:point(a2+bf,a3+bk,aL)end end end,line=function(self,bl,bm,bn,bo,aL)local function bp(bl,bm,bn,bo)local bq=1;if bl>bn then bq=-1 end;local br=bn-bl;local bs=bo-bm;local bt=1;if bs<0 then bt=-1;bs=-bs end;local bu=2*bs-br;local a3=bm;for a2=bl,bn,bq do self:point(a2,a3,aL)if bu>0 then a3=a3+bt;bu=bu-2*br end;bu=bu+2*bs end end;local function bv(bl,bm,bn,bo)local bq=1;if bm>bo then bq=-1 end;local br=bn-bl;local bs=bo-bm;local bw=1;if br<0 then bw=-1;br=-br end;local bu=2*br-bs;local a2=bl;for a3=bm,bo,bq do self:point(a2,a3,aL)if bu>0 then a2=a2+bw;bu=bu-2*bs end;bu=bu+2*br end end;if math.abs(bo-bm)<math.abs(bn-bl)then if bl>bn then bp(bn,bo,bl,bm)else bp(bl,bm,bn,bo)end else if bm>bo then bv(bn,bo,bl,bm)else bv(bl,bm,bn,bo)end end end,circle=function(self,bx,by,bz,aL)local bA=bz*bz;self:point(bx,by+bz,aL)self:point(bx,by-bz,aL)self:point(bx+bz,by,aL)self:point(bx-bz,by,aL)local a2=1;local a3=math.floor(math.sqrt(bA-1)+0.5)while a2<a3 do self:point(bx+a2,by+a3,aL)self:point(bx+a2,by-a3,aL)self:point(bx-a2,by+a3,aL)self:point(bx-a2,by-a3,aL)self:point(bx+a3,by+a2,aL)self:point(bx+a3,by-a2,aL)self:point(bx-a3,by+a2,aL)self:point(bx-a3,by-a2,aL)a2=a2+1;a3=math.floor(math.sqrt(bA-a2*a2)+0.5)end;if a2==a3 then self:point(bx+a2,by+a3,aL)self:point(bx+a2,by-a3,aL)self:point(bx-a2,by+a3,aL)self:point(bx-a2,by-a3,aL)end end}local bB={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,bC,d)if self.pressed_keys[d]then if bC then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,bD,...)local keys={...}if not(#keys>0)then return false end;for bE,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if bD then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for bE,d in next,keys do self:remove_key(d)end end,manage_event=function(self,bF)if bF.name==b.KEY then self:add_key(bF.key)elseif bF.name==b.KEYUP then self:remove_key(bF.key)end end}local bG={}bG={Clock={new=function(bH)local bI={enabled=true,oneshot=false,clock=os.clock(),interval=bH,callbacks={onClock=function()end}}setmetatable(bI,bG.Clock)return bI end,event=function(self,bF)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,bF)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a2,a3,be,aZ,a_)local bJ={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_CENTER,text=be,pos=h.Vector2.new(a2,a3),colors={foreground=aZ,background=a_},callbacks={onDraw=function()end}}setmetatable(bJ,bG.Label)return bJ end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bK=g.split(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,bL in next,bK do b3:write(self.pos.x,self.pos.y+d-1,bL,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then local bM=0;for d,bL in next,bK do if d==1 then bM=math.floor(#bL/2)b3:write(self.pos.x,self.pos.y,bL,self.colors.foreground,self.colors.background)else b3:write(self.pos.x+bM-math.floor(#bL/2),self.pos.y+d-1,bL,self.colors.foreground,self.colors.background)end end end end},Button={new=function(a2,a3,aP,aQ,be,aZ,bN,bO)local bP={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=be,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),timed={enabled=false,clock=bG.Clock.new(0.5)},colors={foreground=aZ,active_background=bN,unactive_background=bO},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}bP.timed.clock.binded_button=bP;bP.timed.clock.oneshot=true;bP.timed.clock:stop()f.set_callback(bP.timed.clock,b.ONCLOCK,function(self,bF)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,bF)self.binded_button.callbacks.onTimeout(self.binded_button,bF)end)setmetatable(bP,bG.Button)return bP end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then b3:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else b3:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local bK=g.split(self.text,"\n")local bQ=math.floor((self.size.y-#bK)/2)+self.pos.y;for bk=0,#bK-1 do local bL=bK[bk+1]local bR;if self.text_alignment==b.ALIGN_LEFT then bR=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then bR=math.floor((self.size.x-#bL)/2)+self.pos.x end;b3:write(bR,bQ+bk,bL,self.colors.foreground)end end,event=function(self,bF)if self.hidden then return false end;if bF.name==b.TOUCH then if k.is_area_pressed(bF.x,bF.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(bF)return true else self.callbacks.onFailedPress(self,bF)end elseif bB:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(bF)end;if self.timed.enabled then self.timed.clock:event(bF)end end,press=function(self,bF)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,bF)end else self.active=not self.active;self.callbacks.onPress(self,bF)end end},Progressbar={new=function(a2,a3,aP,aQ,bS,ai,aj,aZ,bT,bU)local bV={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),value={max=aj,min=ai,current=bS,draw_percentage=true,percentage_precision=2},colors={foreground=aZ,filled_background=bT,unfilled_background=bU},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(bV,bG.Progressbar)return bV end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bW=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local bX=math.floor(self.size.x*bW)b3:rectangle(self.pos.x,self.pos.y,bX,self.size.y,self.colors.filled_background)b3:rectangle(self.pos.x+bX,self.pos.y,self.size.x-bX,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local bY=g.format_number(bW*100,self.value.percentage_precision).."%"local bZ=math.floor((self.size.x-#bY)/2)+self.pos.x;local bQ=math.floor((self.size.y-1)/2)+self.pos.y;b3:write(bZ,bQ,bY,self.colors.foreground)end end,event=function(self,bF)if self.hidden then return false end;if bF.name==b.TOUCH then if k.is_area_pressed(bF.x,bF.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,bF)end end end,set=function(self,I)local b_=h.constrain(I,self.value.min,self.value.max)self.value.current=b_ end},Memo={new=function(a2,a3,aP,aQ,aZ,a_)local c0={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=bG.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=aZ,background=a_,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end}}c0.cursor.blink.binded_cursor=c0.cursor;f.set_callback(c0.cursor.blink,b.ONCLOCK,function(self,bF)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(c0,bG.Memo)return c0 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)b3:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local c1=self.cursor.pos.x-self.first_visible_char;local c2=self.cursor.pos.y-self.first_visible_line;for a3=1,self.size.y do local c3=a3+self.first_visible_line-1;local c4=self.rich_text[c3]or{}local bL=self.lines[c3]or""local c5=self.first_visible_char;local c6=self.first_visible_char+self.size.x-1;local c7=bL:sub(c5,c6)local c8=self.pos.y+a3-1;if c4.background then if type(c4.background)=="string"then local c9=c4.background:sub(c5,c6)c9=#c9>0 and c9 or c4.background:sub(#c4.background)b3:blit(self.pos.x,c8,string.rep(" ",self.size.x),nil,c9)else b3:rectangle(self.pos.x,c8,self.size.x,1,c4.background)end end;if c4.foreground then if type(c4.foreground)=="string"then local ca=c4.foreground:sub(c5,c6)ca=#ca>0 and ca or c4.foreground:sub(#c4.foreground)b3:blit(self.pos.x,c8,c7,ca)else b3:write(self.pos.x,c8,c7,c4.foreground)end else b3:write(self.pos.x,c8,c7,self.colors.foreground)end end;if self.cursor.visible and c1>=0 and c1<self.size.x and c2>=0 and c2<self.size.y then b3:write(c1+self.pos.x,c2+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,bF)if self.hidden then return false end;if not self.editable then return false end;if bF.name==b.TOUCH then if k.is_area_pressed(bF.x,bF.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,bF)self:focus(true,bF)local a2=bF.x-self.pos.x;local a3=bF.y-self.pos.y;self:set_cursor(a2+self.first_visible_char,a3+self.first_visible_line)return true else self.callbacks.onFailedPress(self,bF)self:focus(false,bF)return false end elseif bF.name==b.DELETED then self:focus(false,bF)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,bF)if bF.name==b.PASTE then self:write(bF.paste)return true elseif bF.name==b.CHAR then if self.callbacks.onChar(self,bF)then return true end;self:write(bF.char)return true elseif bF.name==b.KEY then if self.callbacks.onKey(self,bF)then return true end;if bB:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cb=self.lines[self.cursor.pos.y-1]local cc=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bb=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(cc.."\n"..cb)self:set_cursor(bb,self.cursor.pos.y-1)end;return true elseif bB:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cc=self.lines[self.cursor.pos.y]local cd=self.lines[self.cursor.pos.y+1]if not cd then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bb=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(cd.."\n"..cc)self:set_cursor(bb,self.cursor.pos.y)return true elseif bF.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif bF.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif bF.key==b.KEY_RIGHT then local bL=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#bL+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif bF.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local ce=self.lines[self.cursor.pos.y-1]self:set_cursor(#ce+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif bF.key==b.KEY_BACKSPACE then local bL=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local cf=#self.lines[self.cursor.pos.y-1]+1;local cg=self.cursor.pos.y-1;self:set_cursor(cf,cg)self:write(bL)self:set_cursor(cf,cg)end else local aw=bL:sub(1,self.cursor.pos.x-2)..bL:sub(self.cursor.pos.x)self.lines[self.cursor.pos.y]=aw;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,aw,{aw})end;return true elseif bF.key==b.KEY_DELETE then local bL=self.lines[self.cursor.pos.y]local ch=bL:sub(self.cursor.pos.x)if#ch>0 then local aw=bL:sub(1,self.cursor.pos.x-1)..bL:sub(self.cursor.pos.x+1)self.lines[self.cursor.pos.y]=aw;self.callbacks.onWrite(self,aw,{aw})else local cd=self.lines[self.cursor.pos.y+1]if cd then local cf=self.cursor.pos.x;local cg=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(cd)self:set_cursor(cf,cg)end end;return true elseif bF.key==b.KEY_ENTER then local ci=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cj=ci:gsub("(%s*).*","%1")self:write("\n"..cj)return true elseif bF.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif bF.key==b.KEY_HOME then local ci=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cj=ci:gsub("(%s*).*","%1")self:set_cursor(#cj+1,self.cursor.pos.y)return true elseif bB:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local ck=self.lines[self.cursor.pos.y]local cj=ck:gsub("^(%s*).*$","%1")local cl=math.min(#self.tab_spaces,#cj)local aw=ck:sub(cl+1)self.lines[self.cursor.pos.y]=aw;self:set_cursor(self.cursor.pos.x-cl,self.cursor.pos.y)self.callbacks.onWrite(self,aw,{aw})return true elseif bF.key==b.KEY_TAB then local bb=self.cursor.pos.x;local cm=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cn=#self.lines[self.cursor.pos.y]-cm;self:set_cursor(bb+cn,self.cursor.pos.y)return true end elseif bF.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,bF)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+bF.direction,1,#self.lines)return true end end end,focus=function(self,co,bF)if co then self.focussed=true;self.callbacks.onFocus(self,bF)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,bF)end end,set_cursor=function(self,cf,cg,cp)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then cg=h.constrain(cg,1,self.limits.y)end;if cp then for a3=#self.lines+1,cg do if not self.lines[a3]then self.lines[a3]=""end end else cg=h.constrain(cg,1,#self.lines)end;cf=h.constrain(cf,1,#self.lines[cg]+1)local c1=cf-self.first_visible_char;local c2=cg-self.first_visible_line;if c1>=self.size.x then self.first_visible_char=self.first_visible_char+c1-self.size.x+1 elseif c1<0 then self.first_visible_char=self.first_visible_char+c1 end;if c2>=self.size.y then self.first_visible_line=self.first_visible_line+c2-self.size.y+1 elseif c2<0 then self.first_visible_line=self.first_visible_line+c2 end;self.callbacks.onCursorChange(self,cf,cg)self.cursor.pos=h.Vector2.new(cf,cg)end,write=function(self,...)local be=g.join({...},"")local bK=g.split(be,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local K="[^"..g.escape_magic_characters(g.join(self.whitelist,"")).."]"for d,bL in next,bK do bK[d]=bL:gsub(K,"")end elseif#self.blacklist>0 then local K="["..g.escape_magic_characters(g.join(self.blacklist,"")).."]"for d,bL in next,bK do bK[d]=bL:gsub(K,"")end end;if self.limits.y>0 then for a3=1,#self.lines+#bK-1-self.limits.y do table.remove(bK)end;if#bK==0 then return end end;if#bK>1 then for cq,bL in next,bK do if cq==1 then local cr=self.lines[self.cursor.pos.y]local cs=cr:sub(1,self.cursor.pos.x-1)local ch=cr:sub(self.cursor.pos.x)local ct=bK[#bK]if self.limits.x>0 then bL=bL:sub(1,self.limits.x-#cs)ct=ct:sub(1,self.limits.x-#ch)end;self.lines[self.cursor.pos.y]=cs..bL;table.insert(self.lines,self.cursor.pos.y+1,ct..ch)self:set_cursor(#ct+1,self.cursor.pos.y+1)elseif cq==#bK then break else if self.limits.x>0 then bL=bL:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,bL)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cr=self.lines[self.cursor.pos.y]local cs=cr:sub(1,self.cursor.pos.x-1)local ch=cr:sub(self.cursor.pos.x)if self.limits.x>0 then bK[1]=bK[1]:sub(1,self.limits.x-(#cs+#ch))end;self.lines[self.cursor.pos.y]=cs..bK[1]..ch;self:set_cursor(self.cursor.pos.x+#bK[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,be,bK)end,print=function(self,...)local be=g.join({...},"")local aw=#self.lines>0 and"\n"or""self:write(aw..be)end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=h.Vector2.new(1,1)end},Window={new=function(a2,a3,aP,aQ,a_,cu)local cv={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aP,aQ),drag_options={enabled=true,from=h.Vector2.new(1,1)},shadow={enabled=cu,offset=h.Vector2.new(1,1)},elements={},colors={background=a_,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end}}setmetatable(cv,bG.Window)return cv end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then b3:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;b3:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,bF)if self.hidden then return false end;local cw=self:event_elements(bF)if not cw then if bF.name==b.TOUCH then if k.is_area_pressed(bF.x,bF.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=h.Vector2.new(bF.x,bF.y)self.focussed=true;self.callbacks.onPress(self,bF)self.callbacks.onFocus(self,bF)return true else self.focussed=false;self.callbacks.onFailedPress(self,bF)self.callbacks.onFocus(self,bF)end elseif bF.name==b.MOUSEDRAG and self.focussed then self:drag(bF.x,bF.y)return true elseif bF.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,bF)end else self.focussed=false;self.callbacks.onFocus(self,bF)end;return cw end,drag=function(self,a2,a3)if self.drag_options.enabled then local cx=h.Vector2.new(a2-self.drag_options.from.x,a3-self.drag_options.from.y)self.pos=self.pos+cx;for d,cy in next,self.elements do if cy.pos then cy.pos=cy.pos+cx end end;self.drag_options.from=h.Vector2.new(a2,a3)end end,set_elements=function(self,cz,cA)self.elements={}for d,cy in next,cz do if cA then cy.pos=self.pos+cy.pos-h.Vector2.ONE end;table.insert(self.elements,cy)end end,draw_elements=function(self)for d=#self.elements,1,-1 do local cy=self.elements[d]if cy.draw then cy:draw()end end end,event_elements=function(self,bF)local cw=false;for d,cy in next,self.elements do if cy.event then local cB=cy:event(bF)cw=cw or cB;if cB then bF={name=b.DELETED}end end end;return cw end}}bG.Clock.__index=bG.Clock;bG.Label.__index=bG.Label;bG.Button.__index=bG.Button;bG.Progressbar.__index=bG.Progressbar;bG.Memo.__index=bG.Memo;bG.Window.__index=bG.Window;local cC={}cC={new=function(cD)local cE={draw_priority=b.LOW_PRIORITY,hidden=false,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=bG.Clock.new(cD or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}cE.broadcast_clock.WSS=cE;f.set_callback(cE.broadcast_clock,b.ONCLOCK,function(self,bF)rednet.broadcast(b3.frame,self.WSS.protocol)end)setmetatable(cE,cC)return cE end,draw=function(self)if self.hidden then return false end;self.callbacks.onDraw(self)if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then b3.buffer.background=self.buffer.background;b3.buffer.pixels=self.buffer.pixels end end end,event=function(self,bF)if self.hidden then return false end;if self.callbacks.onEvent(self,bF)then return true end;local cF=false;if bF.name==b.REDNET then if bF.protocol==self.protocol then local aT=bF.message;if self.mode==b.HOST then if aT==b.CONNECTION_REQUEST then rednet.send(bF.from,b.OK,self.protocol)self.users[bF.from]=true;cF=true;self.callbacks.onConnect(self,bF)elseif aT==b.DISCONNECTED then self.users[bF.from]=nil;cF=true;self.callbacks.onDisconnect(self,bF)elseif self.events_whitelist[aT.name or"nil"]and self.users[bF.from]and type(aT)=="table"then if aT.raw then os.queueEvent(table.unpack(aT.raw))end;cF=true end elseif self.mode==b.USER then if bF.from==self.host_id then if aT==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;cF=true;self.callbacks.onDisconnect(self,bF)elseif type(aT)=="table"then self.buffer=aT;cF=true end end end end end;if self.mode==b.USER then if bF.name==b.TOUCH then cF=true end;if self.events_whitelist[tostring(bF.name)]then rednet.send(self.host_id,bF,self.protocol)cF=true end elseif self.mode==b.HOST then self.broadcast_clock:event(bF)end;return cF end,use_side=function(self,cG)self.side=cG end,connect=function(self,cH,cI,cJ)cI=cI or 2;cJ=cJ or 10;rednet.open(self.side)self.host_id=cH;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local cK=0;while true do cK=cK+1;local cL={rednet.receive(self.protocol,cI)}if cL[1]==cH and cL[2]==b.OK and cL[3]==self.protocol then return b.OK elseif cK>=cJ then local cM=string.format("Connection timed out on attempt %d after %d ms",cK,cI*1000)if#cL>0 then cM=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",cK,cI*1000)end;cC:close()error(cM,2)end end;self.callbacks.onConnect(self,cH)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}cC.__index=cC;local cN={}cN={new=function(cO,cP)local cQ={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=cO,EPS_target=cP},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=bG.Clock.new(1/cO),stats_clock=bG.Clock.new(1),FPS_label=bG.Label.new(1,1,"1 FPS",colors.white),EPS_label=bG.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,cR)self.enabled=cR;self.elements.stats_clock.enabled=cR;self.elements.FPS_label.hidden=not cR;self.elements.EPS_label.hidden=not cR end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+h.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}cQ.elements.loop.stats_clock.stats=cQ.stats;cQ.stats.elements=cQ.elements.loop;f.set_callback(cQ.elements.loop.stats_clock,b.ONCLOCK,function(self,bF)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)cQ.stats:enable(false)cQ.elements.loop.clock.Loop=cQ;f.set_callback(cQ.elements.loop.clock,b.ONCLOCK,function(self,bF)self.Loop.callbacks.onClock(self.Loop,bF)self.Loop:draw_elements()self.interval=1/self.Loop.options.FPS_target end)setmetatable(cQ,cN)return cQ end,set_monitors=function(self,aV)self.monitors=m.get_monitors(aV)end,set_elements=function(self,cz)self.elements.high_priority={}self.elements.low_priority={}for d,I in next,cz do if I.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,I)else table.insert(self.elements.low_priority,I)end end end,draw_elements=function(self)local function cS(F)for d=#F,1,-1 do local cy=F[d]if cy.draw then cy:draw()end end end;self.callbacks.onDraw(self)local cT=b3.screens;b3.screens=self.monitors;cS(self.elements.low_priority)cS(self.elements.high_priority)for d,cy in next,self.elements.loop do if cy.draw then cy:draw()end end;b3:draw()b3.screens=cT;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,bF)local function aR(F)for d,cy in next,F do if cy.event then if cy:event(bF)then bF={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,bF)then bF={name=b.DELETED}end;if self.options.stop_on_terminate and bF.name==b.TERMINATE then self:stop()return end;if bF.name==b.TOUCH then local cU=false;for cV,aY in next,self.monitors do if bF.from==cV then cU=true;break end end;if not cU then bF={name=b.DELETED}end end;aR(self.elements.loop)local cW={}for d,cy in next,self.elements.high_priority do if cy.event then local cX=cy:event(bF)if cX then bF={name=b.DELETED}if self.elements.high_priority~=cy then table.insert(cW,{element=cy,key=d})end end end end;if#cW>0 then for d,I in next,cW do table.insert(self.elements.high_priority,1,I.element)table.remove(self.elements.high_priority,I.key+#cW)end end;aR(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;bB:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local cY=os.startTimer(1/self.options.EPS_target)local cZ;if self.options.raw_mode then cZ={os.pullEventRaw()}else cZ={os.pullEvent()}end;local bF=k.format_event_table(cZ)bB:manage_event(bF)self:event_elements(bF)os.cancelTimer(cY)end;bB:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}cN.__index=cN;setmetatable(h.Vector2,e)setmetatable(h.Vector3,e)setmetatable(cC,e)for d,cy in next,bG do setmetatable(cy,e)end;setmetatable(cN,e)local c_={...}if c_[1]=="help"then local bK={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,bL in next,bK do m.better_print(term,bL.foreground,bL.background,bL.text)end elseif c_[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif c_[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif c_[1]=="copyright"then local d0={colors.red,colors.yellow,colors.green}local d1=g.split(a.copyright,"\n\n")for d,d2 in next,d1 do m.better_print(term,d0[d],nil,d2)if d<#d1 then read("")end end elseif c_[1]=="setup"then if shell then local d3="YAGUI_PATH"local V="/"..shell.getRunningProgram()l.set(d3,V)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(d3),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif c_[1]=="create"then if c_[2]then local V=shell.resolve(c_[2])if g.get_extension(V)~="lua"then V=V..".lua"end;if fs.exists(V)then m.better_print(term,colors.red,nil,"PATH: \"/",V,"\" already exists, please use another path or delete it.")else local d4=fs.open(V,"w")d4.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")d4.close()m.better_print(term,colors.green,nil,"New project was created at \"/",V,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif c_[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",c_[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local d5={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=b3,input=bB,WSS=cC,wireless_screen_share=cC,gui_elements=bG,Loop=cN}for d,I in next,b do d5[d]=I end;return d5