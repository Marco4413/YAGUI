--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.26",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",DELETED="DELETED",NONE="NONE",ALL="ALL",SEND="SEND",RECEIVE="RECEIVE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,ONSEND=17,ONRECEIVE=18,ONDRAG=19,ONRESIZE=20,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={__call=function(self,...)return self.new(...)end}e.__index=e;local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)if o==b.ONSTART then n.callbacks.onStart=p elseif o==b.ONSTOP then n.callbacks.onStop=p elseif o==b.ONDRAW then n.callbacks.onDraw=p elseif o==b.ONPRESS then n.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then n.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then n.callbacks.onTimeout=p elseif o==b.ONCLOCK then n.callbacks.onClock=p elseif o==b.ONEVENT then n.callbacks.onEvent=p elseif o==b.ONFOCUS then n.callbacks.onFocus=p elseif o==b.ONKEY then n.callbacks.onKey=p elseif o==b.ONCHAR then n.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then n.callbacks.onMouseScroll=p elseif o==b.ONCURSORCHANGE then n.callbacks.onCursorChange=p elseif o==b.ONWRITE then n.callbacks.onWrite=p elseif o==b.ONCONNECT then n.callbacks.onConnect=p elseif o==b.ONDISCONNECT then n.callbacks.onDisconnect=p elseif o==b.ONSEND then n.callbacks.onSend=p elseif o==b.ONRECEIVE then n.callbacks.onReceive=p elseif o==b.ONDRAG then n.callbacks.onDrag=p elseif o==b.ONRESIZE then n.callbacks.onResize=p end end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=r or"unknown"r=tostring(r)local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=x:gsub(t,", ")v=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",r,(w+1)/2,E,z)u=true;break end end;if u then error(v,3)return false end;return true end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(F,G)if not G then G=""end;local H=""for d=1,#F do local I=F[d]H=H..tostring(I)if d<#F then H=H..G end end;return H end,split=function(H,G)if not string.find(H,G)then return{H}end;local J={}local K="(.-)"..G.."()"local L;for M,N in string.gfind(H,K)do table.insert(J,M)L=N end;table.insert(J,string.sub(H,L))return J end,compare_versions=function(O,P)local Q=g.split(O,".")local R=g.split(P,".")local S=#Q;local T=#R;for w=1,math.min(S,T)do if tonumber(Q[w])>tonumber(R[w])then return 1 elseif tonumber(Q[w])<tonumber(R[w])then return-1 end end;if S>T then return 1 elseif S<T then return-1 end;return 0 end,escape_magic_characters=function(H)for d,U in next,g.magic_characters do H=H:gsub("[%"..U.."]",'%%%'..U)end;return H end,get_extension=function(V)local W,X=V:gsub(".*%.","")if X>0 then return W end;return""end,format_number=function(Y,Z)Y=tostring(Y)Z=Z or 0;local _=Y:gsub("(.*)%..*","%1")if Z<=0 then return _ end;local a0=#_+1;local a1=Y:sub(a0+1,a0+Z)a1=a1:reverse():gsub("0*(.*)","%1"):reverse()if#a1>0 then return _.."."..a1 end;return _ end,trim=function(H)return H:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a2,a3)local a4={x=a2 or 0,y=a3 or 0}setmetatable(a4,h.Vector2)return a4 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a5)return self.x*a5.x+self.y*a5.y end,cross=function(self,a5)return self.x*a5.y-self.y*a5.x end,rotate=function(self,a6)local a7=math.cos(a6)local a8=math.sin(a6)return h.Vector2.new(a7*self.x-a8*self.y,a8*self.x+a7*self.y)end,string=function(self,Z)if Z then return string.format("(%."..tostring(Z).."f; %."..tostring(Z).."f)",self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a5)return h.Vector2.new(self.x+a5.x,self.y+a5.y)end,__sub=function(self,a5)return h.Vector2.new(self.x-a5.x,self.y-a5.y)end,__mul=function(self,Y)if type(self)=="number"then return h.Vector2.new(Y.x*self,Y.y*self)else return h.Vector2.new(self.x*Y,self.y*Y)end end,__div=function(self,Y)return h.Vector2.new(self.x/Y,self.y/Y)end,__eq=function(self,a5)return self.x==a5.x and self.y==a5.y end,__lt=function(self,a5)return self:length_sq()<a5:length_sq()end,__le=function(self,a5)return self:length_sq()<=a5:length_sq()end},Vector3={new=function(a2,a3,a9)local aa={x=a2 or 0,y=a3 or 0,z=a9 or 0}setmetatable(aa,h.Vector3)return aa end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)+math.pow(self.z,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a5)return self.x*a5.x+self.y*a5.y+self.z*a5.z end,cross=function(self,a5)return h.Vector3.new(self.y*a5.z-self.z*a5.y,self.z*a5.x-self.x*a5.z,self.x*a5.y-self.y*a5.x)end,rotate=function(self,ab,a6)local a7=math.cos(a6)return a7*self+math.sin(a6)*ab:cross(self)+(1-a7)*ab:dot(self)*ab end,string=function(self,Z)if Z then return string.format("(%."..tostring(Z).."f; %."..tostring(Z).."f; %."..tostring(Z).."f)",self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a5)return h.Vector3.new(self.x+a5.x,self.y+a5.y,self.z+a5.z)end,__sub=function(self,a5)return h.Vector3.new(self.x-a5.x,self.y-a5.y,self.z-a5.z)end,__mul=function(self,Y)if type(self)=="number"then return h.Vector3.new(Y.x*self,Y.y*self,Y.z*self)else return h.Vector3.new(self.x*Y,self.y*Y,self.z*Y)end end,__div=function(self,Y)return h.Vector3.new(self.x/Y,self.y/Y,self.z/Y)end,__eq=function(self,a5)return self.x==a5.x and self.y==a5.y and self.z==a5.z end,__lt=function(self,a5)return self:length_sq()<a5:length_sq()end,__le=function(self,a5)return self:length_sq()<=a5:length_sq()end},map=function(I,ac,ad,ae,af,ag)local ah=(I-ac)/(ad-ac)*(af-ae)+ae;if ag then return h.constrain(ah,ae,af)end;return ah end,constrain=function(I,ai,aj)return math.min(aj,math.max(ai,I))end,round=function(Y)return math.floor(Y+0.5)end,round_numbers=function(...)local ak={...}local al={}for d,Y in next,ak do table.insert(al,h.round(Y))end;return table.unpack(al)end,floor_numbers=function(...)local ak={...}local am={}for d,Y in next,ak do table.insert(am,math.floor(Y))end;return table.unpack(am)end,ceil_numbers=function(...)local ak={...}local an={}for d,Y in next,ak do table.insert(an,math.ceil(Y))end;return table.unpack(an)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(F,I)for ao,ap in next,F do if ap==I then return true,ao end end;return false,nil end,has_key=function(F,d)if F[d]~=nil then return true,F[d]end;return false,nil end,serialise=function(F,aq,ar,as,at,au,av,aw,ax)local aq=aq or 0;local av=av or"  "local ay=0;local aw=aw or"\n"local ax=ax or" "if not ar then av,aw,ax="","",""end;local az={}local aA="root"local function aB(F,V)local aC=av:rep(ay+1)local aD="{"..aw;local function aE(F)for d,I in next,F do local aF=type(d)local aG;if aF=="string"then aG=string.format("%q",d)else aG=tostring(d)end;if not au and d=="__index"then I={}end;local aH=type(I)local aI=tostring(I)aD=aD..string.format("%s[%s]%s=%s",aC,aG,ax,ax)if aH=="table"then if not next(I)then aD=aD.."{}"elseif aq<=-1 or ay<aq then if az[aI]and not as then aD=aD..string.format("%q",az[aI])else local aJ=V.."."..tostring(d)az[aI]=aJ;ay=ay+1;aD=aD..aB(I,aJ)ay=ay-1 end else aD=aD.."{}"end elseif aH=="string"or aH=="function"then aD=aD..string.format("%q",aI)else aD=aD..string.format("%s",aI)end;if next(F,d)then aD=aD..","..aw else aD=aD..aw end end end;local aK=getmetatable(F)if at and aK then aE(aK)if next(F)then aD=aD:sub(1,#aD-#aw)..","..aD:sub(#aD-#aw+1)end end;aE(F)aD=aD..av:rep(ay).."}"return aD end;return aB(F,aA)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize,better_unpack=function(F,w,aL)w=w or 1;aL=aL or#F;if w<=aL then return F[w],i.better_unpack(F,w+1,aL)end end}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aM)return j.colors[aM]end,paint_to_color=function(aN)return j.paint[aN]end}for d,I in next,j.colors do j.paint[I]=d end;k={is_area_pressed=function(aO,aP,a2,a3,aQ,aR)if aO>=a2 and aO<a2+aQ then if aP>=a3 and aP<a3+aR then return true end end;return false end,format_event_table=function(aS)local o={}o.name=aS[1]if o.name=="timer"then o.name=b.TIMER;o.id=o[2]elseif o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=aS[2]o.x=aS[3]o.y=aS[4]elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=aS[2]o.button=1;o.x=aS[3]o.y=aS[4]elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=aS[2]o.x=aS[3]o.y=aS[4]elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=aS[2]o.x=aS[3]o.y=aS[4]elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=aS[2]o.x=aS[3]o.y=aS[4]elseif o.name=="char"then o.name=b.CHAR;o.char=aS[2]elseif o.name=="key"then o.name=b.KEY;o.key=aS[2]elseif o.name=="key_up"then o.name=b.KEYUP;o.key=aS[2]elseif o.name=="paste"then o.name=b.PASTE;o.paste=aS[2]elseif o.name=="rednet_message"then o.name=b.REDNET;o.from=aS[2]o.message=aS[3]local aT=aS[4]if type(aT)=="number"then o.distance=aT else o.protocol=tostring(aT)end elseif o.name=="modem_message"then local aU=aS[5]o.name=b.MODEM;o.side=aS[2]o.from=aS[4]o.protocol=aU.sProtocol or""o.message=aU.message elseif o.name=="terminate"then o.name=b.TERMINATE else o.parameters={}for d=2,#aS do table.insert(o.parameters,aS[d])end end;o.raw=aS;return o end}l={_path="/.settings",set=function(aV,I)settings.set(aV,I)settings.save(l._path)end,unset=function(aV)settings.unset(aV)settings.save(l._path)end,get=function(aV)return settings.get(aV)end}m={get_monitors=function(aW)local aX={}for d,aY in next,aW do if aY=="terminal"then aX[aY]=term else if peripheral.getType(aY)=="monitor"then aX[aY]=peripheral.wrap(aY)end end end;return aX end,better_print=function(aZ,a_,b0,...)local b1=g.join({...},"")local b2=aZ.getTextColor()local b3=aZ.getBackgroundColor()if a_ then aZ.setTextColor(a_)end;if b0 then aZ.setBackgroundColor(b0)end;print(b1)aZ.setTextColor(b2)aZ.setBackgroundColor(b3)end,better_clear=function(aZ)aZ.clear()aZ.setCursorPos(1,1)end}local b4={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a2,a3)if self.pixels[a2]then if self.pixels[a2][a3]then return true end end;return false end,get_pixel=function(self,a2,a3)if self:is_pixel_custom(a2,a3)then return self.pixels[a2][a3]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,a2,a3,b5,a_,b0)local b6=self:get_pixel(a2,a3)if b5 and#b5==1 then b6.char=b5 end;b6.foreground=a_ or b6.background;b6.background=b0 or b6.background;if not self.pixels[a2]then self.pixels[a2]={}end;self.pixels[a2][a3]=b6 end,clear=function(self)self.pixels={}end},set_screens=function(self,b7)self.screens=m.get_monitors(b7)end,set_monitors=function(self,aW)self:set_screens(aW)end,clear=function(self)self.buffer:clear()end,draw=function(self)local b8=self.screens;local b9=self.buffer;for ba,bb in next,b8 do local bc,bd=bb.getCursorPos()local aQ,aR=bb.getSize()for a3=1,aR do local be={text="",background="",foreground=""}for a2=1,aQ do local b6=b9:get_pixel(a2,a3)be.text=be.text..b6.char;be.background=be.background..j.colors[b6.background]be.foreground=be.foreground..j.colors[b6.foreground]end;bb.setCursorPos(1,a3)bb.blit(be.text,be.foreground,be.background)end;bb.setCursorPos(bc,bd)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a2,a3,aM)self.buffer:set_pixel(a2,a3," ",aM,aM)end,write=function(self,a2,a3,bf,a_,b0)for bg=0,#bf-1 do local b5=bf:sub(bg+1,bg+1)self.buffer:set_pixel(a2+bg,a3,b5,a_,b0)end end,blit=function(self,a2,a3,bf,a_,b0)local bh=""local bi=""a_=a_ or""b0=b0 or""for bg=0,#bf-1 do local b5=bf:sub(bg+1,bg+1)local bj=a_:sub(bg+1,bg+1)bj=#bj>0 and bj or bh;local bk=b0:sub(bg+1,bg+1)bk=#bk>0 and bk or bi;self.buffer:set_pixel(a2+bg,a3,b5,j.paint[bj],j.paint[bk])bh=bj;bi=bk end end,rectangle=function(self,a2,a3,aQ,aR,aM)for bg=0,aQ-1 do for bl=0,aR-1 do self:point(a2+bg,a3+bl,aM)end end end,line=function(self,bm,bn,bo,bp,aM)local function bq(bm,bn,bo,bp)local br=1;if bm>bo then br=-1 end;local bs=bo-bm;local bt=bp-bn;local bu=1;if bt<0 then bu=-1;bt=-bt end;local bv=2*bt-bs;local a3=bn;for a2=bm,bo,br do self:point(a2,a3,aM)if bv>0 then a3=a3+bu;bv=bv-2*bs end;bv=bv+2*bt end end;local function bw(bm,bn,bo,bp)local br=1;if bn>bp then br=-1 end;local bs=bo-bm;local bt=bp-bn;local bx=1;if bs<0 then bx=-1;bs=-bs end;local bv=2*bs-bt;local a2=bm;for a3=bn,bp,br do self:point(a2,a3,aM)if bv>0 then a2=a2+bx;bv=bv-2*bt end;bv=bv+2*bs end end;if math.abs(bp-bn)<math.abs(bo-bm)then if bm>bo then bq(bo,bp,bm,bn)else bq(bm,bn,bo,bp)end else if bn>bp then bw(bo,bp,bm,bn)else bw(bm,bn,bo,bp)end end end,circle=function(self,by,bz,bA,aM)local bB=bA*bA;self:point(by,bz+bA,aM)self:point(by,bz-bA,aM)self:point(by+bA,bz,aM)self:point(by-bA,bz,aM)local a2=1;local a3=math.floor(math.sqrt(bB-1)+0.5)while a2<a3 do self:point(by+a2,bz+a3,aM)self:point(by+a2,bz-a3,aM)self:point(by-a2,bz+a3,aM)self:point(by-a2,bz-a3,aM)self:point(by+a3,bz+a2,aM)self:point(by+a3,bz-a2,aM)self:point(by-a3,bz+a2,aM)self:point(by-a3,bz-a2,aM)a2=a2+1;a3=math.floor(math.sqrt(bB-a2*a2)+0.5)end;if a2==a3 then self:point(by+a2,bz+a3,aM)self:point(by+a2,bz-a3,aM)self:point(by-a2,bz+a3,aM)self:point(by-a2,bz-a3,aM)end end}local bC={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,bD,d)if self.pressed_keys[d]then if bD then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,bE,...)local keys={...}if not(#keys>0)then return false end;for bF,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if bE then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for bF,d in next,keys do self:remove_key(d)end end,manage_event=function(self,formatted_event)if formatted_event.name==b.KEY then self:add_key(formatted_event.key)elseif formatted_event.name==b.KEYUP then self:remove_key(formatted_event.key)end end}local bG={}bG={Clock={new=function(bH)local bI={enabled=true,oneshot=false,clock=os.clock(),interval=bH,callbacks={onClock=function()end}}setmetatable(bI,bG.Clock)return bI end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,formatted_event)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a2,a3,bf,a_,b0)local bJ={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_CENTER,text=bf,pos=h.Vector2.new(a2,a3),colors={foreground=a_,background=b0},callbacks={onDraw=function()end}}setmetatable(bJ,bG.Label)return bJ end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bK=g.split(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,bL in next,bK do b4:write(self.pos.x,self.pos.y+d-1,bL,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then local bM=0;for d,bL in next,bK do if d==1 then bM=math.floor(#bL/2)b4:write(self.pos.x,self.pos.y,bL,self.colors.foreground,self.colors.background)else b4:write(self.pos.x+bM-math.floor(#bL/2),self.pos.y+d-1,bL,self.colors.foreground,self.colors.background)end end end end},Button={new=function(a2,a3,aQ,aR,bf,a_,bN,bO)local bP={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bf,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aQ,aR),timed={enabled=false,clock=bG.Clock.new(0.5)},colors={foreground=a_,active_background=bN,unactive_background=bO},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}bP.timed.clock.binded_button=bP;bP.timed.clock.oneshot=true;bP.timed.clock:stop()f.set_callback(bP.timed.clock,b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)self.binded_button.callbacks.onTimeout(self.binded_button,formatted_event)end)setmetatable(bP,bG.Button)return bP end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then b4:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else b4:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local bK=g.split(self.text,"\n")local bQ=math.floor((self.size.y-#bK)/2)+self.pos.y;for bl=0,#bK-1 do local bL=bK[bl+1]local bR;if self.text_alignment==b.ALIGN_LEFT then bR=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then bR=math.floor((self.size.x-#bL)/2)+self.pos.x end;b4:write(bR,bQ+bl,bL,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(formatted_event)return true else self.callbacks.onFailedPress(self,formatted_event)end elseif bC:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(formatted_event)end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self,formatted_event)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self.active=not self.active;self.callbacks.onPress(self,formatted_event)end end},Progressbar={new=function(a2,a3,aQ,aR,bS,ai,aj,a_,bT,bU)local bV={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aQ,aR),value={max=aj,min=ai,current=bS,draw_percentage=true,percentage_precision=2},colors={foreground=a_,filled_background=bT,unfilled_background=bU},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(bV,bG.Progressbar)return bV end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bW=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local bX=math.floor(self.size.x*bW)b4:rectangle(self.pos.x,self.pos.y,bX,self.size.y,self.colors.filled_background)b4:rectangle(self.pos.x+bX,self.pos.y,self.size.x-bX,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local bY=g.format_number(bW*100,self.value.percentage_precision).."%"local bZ=math.floor((self.size.x-#bY)/2)+self.pos.x;local bQ=math.floor((self.size.y-1)/2)+self.pos.y;b4:write(bZ,bQ,bY,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,I)local b_=h.constrain(I,self.value.min,self.value.max)self.value.current=b_ end},Memo={new=function(a2,a3,aQ,aR,a_,b0)local c0={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aQ,aR),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=bG.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=a_,background=b0,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end}}c0.cursor.blink.binded_cursor=c0.cursor;f.set_callback(c0.cursor.blink,b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(c0,bG.Memo)return c0 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)b4:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local c1=self.cursor.pos.x-self.first_visible_char;local c2=self.cursor.pos.y-self.first_visible_line;for a3=1,self.size.y do local c3=a3+self.first_visible_line-1;local c4=self.rich_text[c3]or{}local bL=self.lines[c3]or""local c5=self.first_visible_char;local c6=self.first_visible_char+self.size.x-1;local c7=bL:sub(c5,c6)local c8=self.pos.y+a3-1;if c4.background then if type(c4.background)=="string"then local c9=c4.background:sub(c5,c6)c9=#c9>0 and c9 or c4.background:sub(#c4.background)b4:blit(self.pos.x,c8,string.rep(" ",self.size.x),nil,c9)else b4:rectangle(self.pos.x,c8,self.size.x,1,c4.background)end end;if c4.foreground then if type(c4.foreground)=="string"then local ca=c4.foreground:sub(c5,c6)ca=#ca>0 and ca or c4.foreground:sub(#c4.foreground)b4:blit(self.pos.x,c8,c7,ca)else b4:write(self.pos.x,c8,c7,c4.foreground)end else b4:write(self.pos.x,c8,c7,self.colors.foreground)end end;if self.cursor.visible and c1>=0 and c1<self.size.x and c2>=0 and c2<self.size.y then b4:write(c1+self.pos.x,c2+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if self.hidden then return false end;if not self.editable then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)self:focus(true,formatted_event)local a2=formatted_event.x-self.pos.x;local a3=formatted_event.y-self.pos.y;self:set_cursor(a2+self.first_visible_char,a3+self.first_visible_line)return true else self.callbacks.onFailedPress(self,formatted_event)self:focus(false,formatted_event)return false end elseif formatted_event.name==b.DELETED then self:focus(false,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.PASTE then self:write(formatted_event.paste)return true elseif formatted_event.name==b.CHAR then if self.callbacks.onChar(self,formatted_event)then return true end;self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if self.callbacks.onKey(self,formatted_event)then return true end;if bC:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cb=self.lines[self.cursor.pos.y-1]local cc=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bc=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(cc.."\n"..cb)self:set_cursor(bc,self.cursor.pos.y-1)end;return true elseif bC:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cc=self.lines[self.cursor.pos.y]local cd=self.lines[self.cursor.pos.y+1]if not cd then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bc=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(cd.."\n"..cc)self:set_cursor(bc,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif formatted_event.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif formatted_event.key==b.KEY_RIGHT then local bL=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#bL+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local ce=self.lines[self.cursor.pos.y-1]self:set_cursor(#ce+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_BACKSPACE then local bL=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local cf=#self.lines[self.cursor.pos.y-1]+1;local cg=self.cursor.pos.y-1;self:set_cursor(cf,cg)self:write(bL)self:set_cursor(cf,cg)end else local aw=bL:sub(1,self.cursor.pos.x-2)..bL:sub(self.cursor.pos.x)self.lines[self.cursor.pos.y]=aw;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,aw,{aw})end;return true elseif formatted_event.key==b.KEY_DELETE then local bL=self.lines[self.cursor.pos.y]local ch=bL:sub(self.cursor.pos.x)if#ch>0 then local aw=bL:sub(1,self.cursor.pos.x-1)..bL:sub(self.cursor.pos.x+1)self.lines[self.cursor.pos.y]=aw;self.callbacks.onWrite(self,aw,{aw})else local cd=self.lines[self.cursor.pos.y+1]if cd then local cf=self.cursor.pos.x;local cg=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(cd)self:set_cursor(cf,cg)end end;return true elseif formatted_event.key==b.KEY_ENTER then local ci=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cj=ci:gsub("(%s*).*","%1")self:write("\n"..cj)return true elseif formatted_event.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_HOME then local ci=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cj=ci:gsub("(%s*).*","%1")self:set_cursor(#cj+1,self.cursor.pos.y)return true elseif bC:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local ck=self.lines[self.cursor.pos.y]local cj=ck:gsub("^(%s*).*$","%1")local cl=math.min(#self.tab_spaces,#cj)local aw=ck:sub(cl+1)self.lines[self.cursor.pos.y]=aw;self:set_cursor(self.cursor.pos.x-cl,self.cursor.pos.y)self.callbacks.onWrite(self,aw,{aw})return true elseif formatted_event.key==b.KEY_TAB then local bc=self.cursor.pos.x;local cm=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cn=#self.lines[self.cursor.pos.y]-cm;self:set_cursor(bc+cn,self.cursor.pos.y)return true end elseif formatted_event.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,formatted_event)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+formatted_event.direction,1,#self.lines)return true end end end,focus=function(self,co,formatted_event)if co then self.focussed=true;self.callbacks.onFocus(self,formatted_event)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)end end,set_cursor=function(self,cf,cg,cp)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then cg=h.constrain(cg,1,self.limits.y)end;if cp then for a3=#self.lines+1,cg do if not self.lines[a3]then self.lines[a3]=""end end else cg=h.constrain(cg,1,#self.lines)end;cf=h.constrain(cf,1,#self.lines[cg]+1)local c1=cf-self.first_visible_char;local c2=cg-self.first_visible_line;if c1>=self.size.x then self.first_visible_char=self.first_visible_char+c1-self.size.x+1 elseif c1<0 then self.first_visible_char=self.first_visible_char+c1 end;if c2>=self.size.y then self.first_visible_line=self.first_visible_line+c2-self.size.y+1 elseif c2<0 then self.first_visible_line=self.first_visible_line+c2 end;self.callbacks.onCursorChange(self,cf,cg)self.cursor.pos=h.Vector2.new(cf,cg)end,write=function(self,...)local bf=g.join({...},"")local bK=g.split(bf,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local K="[^"..g.escape_magic_characters(g.join(self.whitelist,"")).."]"for d,bL in next,bK do bK[d]=bL:gsub(K,"")end elseif#self.blacklist>0 then local K="["..g.escape_magic_characters(g.join(self.blacklist,"")).."]"for d,bL in next,bK do bK[d]=bL:gsub(K,"")end end;if self.limits.y>0 then for a3=1,#self.lines+#bK-1-self.limits.y do table.remove(bK)end;if#bK==0 then return end end;if#bK>1 then for cq,bL in next,bK do if cq==1 then local cr=self.lines[self.cursor.pos.y]local cs=cr:sub(1,self.cursor.pos.x-1)local ch=cr:sub(self.cursor.pos.x)local ct=bK[#bK]if self.limits.x>0 then bL=bL:sub(1,self.limits.x-#cs)ct=ct:sub(1,self.limits.x-#ch)end;self.lines[self.cursor.pos.y]=cs..bL;table.insert(self.lines,self.cursor.pos.y+1,ct..ch)self:set_cursor(#ct+1,self.cursor.pos.y+1)elseif cq==#bK then break else if self.limits.x>0 then bL=bL:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,bL)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cr=self.lines[self.cursor.pos.y]local cs=cr:sub(1,self.cursor.pos.x-1)local ch=cr:sub(self.cursor.pos.x)if self.limits.x>0 then bK[1]=bK[1]:sub(1,self.limits.x-(#cs+#ch))end;self.lines[self.cursor.pos.y]=cs..bK[1]..ch;self:set_cursor(self.cursor.pos.x+#bK[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bf,bK)end,print=function(self,...)local bf=g.join({...},"")local aw=#self.lines>0 and"\n"or""self:write(aw..bf)end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=h.Vector2.new(1,1)end},Window={new=function(a2,a3,aQ,aR,b0,cu)local cv={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a2,a3),size=h.Vector2.new(aQ,aR),can_drag=false,dragging={enabled=true,from=h.Vector2.new(1,1)},resizing={enabled=true,corner=h.Vector2.new(-1,1),enabled_directions={[-1]={[1]=true,[0]=true,[-1]=true},[0]={[1]=true,[0]=false,[-1]=true},[1]={[1]=true,[0]=true,[-1]=true}},pinned={x=false,y=false},min_size=h.Vector2.new(aQ,aR),max_size=h.Vector2.new(aQ*2,aR*2)},shadow={enabled=cu,offset=h.Vector2.new(1,1)},elements={},colors={background=b0,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onDrag=function()end,onResize=function()end}}setmetatable(cv,bG.Window)return cv end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then b4:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;b4:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,formatted_event)if self.hidden then return false end;local cw=self:event_elements(formatted_event)if not cw then if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.can_drag=false;if self.resizing.enabled then local cx=true;local cy=formatted_event.y==self.pos.y+self.size.y-1;local cz=formatted_event.y==self.pos.y;if formatted_event.x==self.pos.x+self.size.x-1 then if self.resizing.enabled_directions[1][1]and cy then self.resizing.corner=self.pos.ONE:duplicate()self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][-1]and cz then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][0]and not(cy or cz)then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cx=false end elseif formatted_event.x==self.pos.x then if self.resizing.enabled_directions[-1][1]and cy then self.resizing.corner=self.pos.DOWN+self.pos.LEFT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][-1]and cz then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][0]and not(cy or cz)then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cx=false end elseif self.resizing.enabled_directions[0][1]and cy then self.resizing.corner=self.pos.DOWN+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[0][-1]and cz then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false else cx=false end;if not cx then self.resizing.corner=self.pos.ZERO:duplicate()self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end else self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end;self.focussed=true;self.callbacks.onPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.callbacks.onFailedPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG and self.focussed then if self.can_drag then self:drag(formatted_event.x,formatted_event.y)else self:resize(formatted_event.x,formatted_event.y,self.resizing.pinned.x,self.resizing.pinned.y)end;return true elseif formatted_event.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,formatted_event)end else self.focussed=false;self.callbacks.onFocus(self,formatted_event)end;return cw end,drag=function(self,a2,a3)if self.dragging.enabled then local cA=self.pos:duplicate()local cB=h.Vector2.new(a2-self.dragging.from.x,a3-self.dragging.from.y)self.pos=self.pos+cB;self.dragging.from=h.Vector2.new(a2,a3)self.callbacks.onDrag(self,cA.x,cA.y)end end,resize=function(self,a2,a3,cC,cD)if self.resizing.enabled and self.resizing.corner~=self.pos.ZERO then local function cE()self.size.x=h.constrain(self.size.x,self.resizing.min_size.x,self.resizing.max_size.x)self.size.y=h.constrain(self.size.y,self.resizing.min_size.y,self.resizing.max_size.y)end;local cF=h.Vector2.new(a2,a3)local cA=self.pos:duplicate()local cG=self.size:duplicate()if self.resizing.corner==self.pos.ONE then self.size=cF-self.pos+self.pos.ONE;cE()elseif self.resizing.corner==self.pos.ONE*-1 then self.size=self.size+self.pos-cF;cE()local cH=cG-self.size;self.pos=self.pos+cH elseif self.resizing.corner==self.pos.UP+self.pos.RIGHT then self.size.x=cF.x-self.pos.x+1;self.size.y=self.size.y+self.pos.y-cF.y;cE()local cI=cG.y-self.size.y;self.pos.y=self.pos.y+cI elseif self.resizing.corner==self.pos.DOWN+self.pos.LEFT then local cJ=self.size.x;self.size.x=self.size.x+self.pos.x-cF.x;self.size.y=cF.y-self.pos.y+1;cE()local cn=cG.x-self.size.x;self.pos.x=self.pos.x+cn end;if cC then self.size.x=cG.x;self.pos.x=cA.x end;if cD then self.size.y=cG.y;self.pos.y=cA.y end;self.callbacks.onResize(self,cA.x,cA.y,cG.x,cG.y)end end,set_elements=function(self,cK)self.elements={}for d,cL in next,cK do table.insert(self.elements,cL)end end,draw_elements=function(self)for d=#self.elements,1,-1 do local cL=self.elements[d]if cL.draw then cL.pos=cL.pos+self.pos-self.pos.ONE;cL:draw()cL.pos=cL.pos-self.pos+self.pos.ONE end end end,event_elements=function(self,formatted_event)local cM=formatted_event;if cM.name==b.TOUCH then cM=k.format_event_table(cM.raw)cM.x,cM.y=cM.x-self.pos.x+1,cM.y-self.pos.y+1 end;local cw=false;for d,cL in next,self.elements do if cL.event then local cN=cL:event(cM)cw=cw or cN;if cN then cM={name=b.DELETED}end end end;return cw end}}bG.Clock.__index=bG.Clock;bG.Label.__index=bG.Label;bG.Button.__index=bG.Button;bG.Progressbar.__index=bG.Progressbar;bG.Memo.__index=bG.Memo;bG.Window.__index=bG.Window;local cO={}cO={new=function(cP)local cQ={draw_priority=b.LOW_PRIORITY,enabled=false,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=bG.Clock.new(cP or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}cQ.broadcast_clock.WSS=cQ;f.set_callback(cQ.broadcast_clock,b.ONCLOCK,function(self,formatted_event)rednet.broadcast(b4.frame,self.WSS.protocol)end)setmetatable(cQ,cO)return cQ end,draw=function(self)if not self.enabled then return false end;self.callbacks.onDraw(self)if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then b4.buffer.background=self.buffer.background;b4.buffer.pixels=self.buffer.pixels end end end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local cR=false;if formatted_event.name==b.REDNET then if formatted_event.protocol==self.protocol then local aU=formatted_event.message;if self.mode==b.HOST then if aU==b.CONNECTION_REQUEST then rednet.send(formatted_event.from,b.OK,self.protocol)self.users[formatted_event.from]=true;cR=true;self.callbacks.onConnect(self,formatted_event)elseif aU==b.DISCONNECTED then self.users[formatted_event.from]=nil;cR=true;self.callbacks.onDisconnect(self,formatted_event)elseif self.events_whitelist[aU.name or"nil"]and self.users[formatted_event.from]and type(aU)=="table"then if aU.raw then os.queueEvent(table.unpack(aU.raw))end;cR=true end elseif self.mode==b.USER then if formatted_event.from==self.host_id then if aU==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;cR=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(aU)=="table"then self.buffer=aU;cR=true end end end end end;if self.mode==b.USER then if formatted_event.name==b.TOUCH then cR=true end;if self.events_whitelist[tostring(formatted_event.name)]then rednet.send(self.host_id,formatted_event,self.protocol)cR=true end elseif self.mode==b.HOST then self.broadcast_clock:event(formatted_event)end;return cR end,use_side=function(self,cS)self.side=cS end,connect=function(self,cT,cU,cV)cU=cU or 2;cV=cV or 10;rednet.open(self.side)self.host_id=cT;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local cW=0;while true do cW=cW+1;local cX={rednet.receive(self.protocol,cU)}if cX[1]==cT and cX[2]==b.OK and cX[3]==self.protocol then return b.OK elseif cW>=cV then local cY=string.format("Connection timed out on attempt %d after %d ms",cW,cU*1000)if#cX>0 then cY=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",cW,cU*1000)end;cO:close()error(cY,2)end end;self.callbacks.onConnect(self,cT)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}cO.__index=cO;local cZ={}cZ={new=function(c_)local d0={enabled=true,computer_whitelist={},side=b.NONE,mode=b.ALL,password=c_ or b.NONE,protocol="YAGUI-"..a.ver.."_FT",save_dir="/FT",callbacks={onEvent=function()end,onConnect=function()end,onSend=function()end,onReceive=function()end}}setmetatable(d0,cZ)return d0 end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;if formatted_event.name==b.REDNET or formatted_event.protocol==self.protocol then if self.mode==b.ALL or self.mode==b.RECEIVE then local cT=formatted_event.from;if self.computer_whitelist[cT]or self.callbacks.onConnect(self,formatted_event)then local aU=formatted_event.message;if type(aU)=="table"and aU.name and aU.content then if aU.psw==self.password then local aV=fs.getName(tostring(aU.name))local V=fs.combine(self.save_dir,aV)if fs.exists(V)then rednet.send(cT,b.NO,self.protocol)else local d1=tostring(aU.content)if self.callbacks.onReceive(self,formatted_event,cT,aV,V,d1)then return true end;local d2=fs.open(V,"w")if d2 then d2.write(d1)d2.close()rednet.send(cT,b.OK,self.protocol)else rednet.send(cT,b.ERROR,self.protocol)end end else rednet.send(cT,b.NO,self.protocol)end else rednet.send(cT,b.ERROR,self.protocol)end else rednet.send(cT,b.NO,self.protocol)end end end end,send=function(self,d3,d4,d5,d6)if self.mode==b.ALL or self.mode==b.SEND then d5=d5 or fs.getName(d6)d4=d4 or b.NONE;local d2=fs.open(d6,"r")local d1=d2.readAll()d2.close()local aU={psw=d4,name=d5,content=d1}if self.callbacks.onSend(self,formatted_event,aU)then return true end;rednet.send(d3,aU,self.protocol)end end,open=function(self,cS)self.side=cS;rednet.open(cS)end,close=function(self)if rednet.isOpen()then rednet.close(self.side)end end}cZ.__index=cZ;local d7={}d7={new=function(d8,d9)local da={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=d8,EPS_target=d9},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=bG.Clock.new(1/d8),stats_clock=bG.Clock.new(1),FPS_label=bG.Label.new(1,1,"1 FPS",colors.white),EPS_label=bG.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,db)self.enabled=db;self.elements.stats_clock.enabled=db;self.elements.FPS_label.hidden=not db;self.elements.EPS_label.hidden=not db end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+h.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}da.elements.loop.stats_clock.stats=da.stats;da.stats.elements=da.elements.loop;f.set_callback(da.elements.loop.stats_clock,b.ONCLOCK,function(self,formatted_event)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)da.stats:enable(false)da.elements.loop.clock.Loop=da;f.set_callback(da.elements.loop.clock,b.ONCLOCK,function(self,formatted_event)self.Loop.callbacks.onClock(self.Loop,formatted_event)self.Loop:draw_elements()self.interval=1/self.Loop.options.FPS_target end)setmetatable(da,d7)return da end,set_monitors=function(self,aW)self.monitors=m.get_monitors(aW)end,set_elements=function(self,cK)self.elements.high_priority={}self.elements.low_priority={}for d,I in next,cK do if I.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,I)else table.insert(self.elements.low_priority,I)end end end,draw_elements=function(self)local function dc(F)for d=#F,1,-1 do local cL=F[d]if cL.draw then cL:draw()end end end;self.callbacks.onDraw(self)local dd=b4.screens;b4.screens=self.monitors;dc(self.elements.low_priority)dc(self.elements.high_priority)for d,cL in next,self.elements.loop do if cL.draw then cL:draw()end end;b4:draw()b4.screens=dd;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,formatted_event)local function aS(F)for d,cL in next,F do if cL.event then if cL:event(formatted_event)then formatted_event={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,formatted_event)then formatted_event={name=b.DELETED}end;if self.options.stop_on_terminate and formatted_event.name==b.TERMINATE then self:stop()return end;if formatted_event.name==b.TOUCH then local de=false;for df,aZ in next,self.monitors do if formatted_event.from==df then de=true;break end end;if not de then formatted_event={name=b.DELETED}end end;aS(self.elements.loop)local dg={}for d,cL in next,self.elements.high_priority do if cL.event then local dh=cL:event(formatted_event)if dh then formatted_event={name=b.DELETED}if self.elements.high_priority~=cL then table.insert(dg,{element=cL,key=d})end end end end;if#dg>0 then for d,I in next,dg do table.insert(self.elements.high_priority,1,I.element)table.remove(self.elements.high_priority,I.key+#dg)end end;aS(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;bC:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local di=os.startTimer(1/self.options.EPS_target)local dj;if self.options.raw_mode then dj={os.pullEventRaw()}else dj={os.pullEvent()}end;local formatted_event=k.format_event_table(dj)bC:manage_event(formatted_event)self:event_elements(formatted_event)os.cancelTimer(di)end;bC:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}d7.__index=d7;setmetatable(h.Vector2,e)setmetatable(h.Vector3,e)setmetatable(cO,e)setmetatable(cZ,e)for d,cL in next,bG do setmetatable(cL,e)end;setmetatable(d7,e)local dk={...}if dk[1]=="help"then local bK={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,bL in next,bK do m.better_print(term,bL.foreground,bL.background,bL.text)end elseif dk[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif dk[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif dk[1]=="copyright"then local dl={colors.red,colors.yellow,colors.green}local dm=g.split(a.copyright,"\n\n")for d,dn in next,dm do m.better_print(term,dl[d],nil,dn)if d<#dm then read("")end end elseif dk[1]=="setup"then if shell then local dp="YAGUI_PATH"local V="/"..shell.getRunningProgram()l.set(dp,V)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(dp),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif dk[1]=="create"then if dk[2]then local V=shell.resolve(dk[2])if g.get_extension(V)~="lua"then V=V..".lua"end;if fs.exists(V)then m.better_print(term,colors.red,nil,"PATH: \"/",V,"\" already exists, please use another path or delete it.")else local d2=fs.open(V,"w")d2.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")d2.close()m.better_print(term,colors.green,nil,"New project was created at \"/",V,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif dk[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",dk[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local dq={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=b4,input=bC,WSS=cO,wireless_screen_share=cO,FT=cZ,file_transfer=cZ,gui_elements=bG,Loop=d7}for d,I in next,b do dq[d]=I end;return dq