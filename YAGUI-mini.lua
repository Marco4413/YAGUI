--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.30.2",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",TERMRESIZE="term_resize",DELETED="DELETED",NONE="NONE",ALL="ALL",SEND="SEND",RECEIVE="RECEIVE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,ONSEND=17,ONRECEIVE=18,ONDRAG=19,ONRESIZE=20,ONPASTE=21,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2,ALIGN_RIGHT=3}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={TOP=string.char(131),BOTTOM=string.char(143),LEFT=string.char(149),RIGHT=string.char(149),MIDDLE=string.char(140),TOPLEFT=string.char(151),TOPRIGHT=string.char(148),BOTTOMLEFT=string.char(138),BOTTOMRIGHT=string.char(133),MIDDLELEFT=string.char(132),MIDDLERIGHT=string.char(136)}local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)n:set_callback(o,p)end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=r or"unknown"r=tostring(r)local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=x:gsub(t,", ")v=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",r,(w+1)/2,E,z)u=true;break end end;if u then error(v,3)return false end;return true end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=table.concat,split=function(F,G)if not string.find(F,G)then return{F}end;local H={}local I=table.concat({"(.-)",G,"()"})local J;for K,L in string.gfind(F,I)do table.insert(H,K)J=L end;table.insert(H,string.sub(F,J))return H end,split_by_char=function(F,M)local N={}local O=1;for w=1,#F do if F:sub(w,w)==M then table.insert(N,w==O and""or F:sub(O,w-1))O=w+1 end end;table.insert(N,F:sub(O,#F))return N end,compare_versions=function(P,Q)local R=g.split(P,".")local S=g.split(Q,".")local T=#R;local U=#S;for w=1,math.min(T,U)do if tonumber(R[w])>tonumber(S[w])then return 1 elseif tonumber(R[w])<tonumber(S[w])then return-1 end end;if T>U then return 1 elseif T<U then return-1 end;return 0 end,escape_magic_characters=function(F)for d,V in next,g.magic_characters do F=F:gsub(table.concat({"[%",V,"]"}),table.concat({"%%%",V}))end;return F end,get_extension=function(W)local X,Y=W:gsub(".*%.","")if Y>0 then return X end;return""end,format_number=function(Z,_)Z=tostring(Z)_=_ or 0;local a0=Z:gsub("(.*)%..*","%1")if _<=0 then return a0 end;local a1=#a0+1;local a2=Z:sub(a1+1,a1+_)a2=a2:reverse():gsub("0*(.*)","%1"):reverse()if#a2>0 then return table.concat({a0,".",a2})end;return a0 end,trim=function(F)return F:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a3,a4)local a5={x=a3 or 0,y=a4 or 0}setmetatable(a5,h.Vector2)return a5 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return self.x*self.x+self.y*self.y end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y)end,unit=function(self)return self/self:length()end,dot=function(self,a6)return self.x*a6.x+self.y*a6.y end,cross=function(self,a6)return self.x*a6.y-self.y*a6.x end,rotate=function(self,a7)local a8=math.cos(a7)local a9=math.sin(a7)return h.Vector2.new(a8*self.x-a9*self.y,a9*self.x+a8*self.y)end,string=function(self,_)if _ then return string.format(table.concat({"(%.",_,"f; %.",_,"f)"}),self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a6)return h.Vector2.new(self.x+a6.x,self.y+a6.y)end,__sub=function(self,a6)return h.Vector2.new(self.x-a6.x,self.y-a6.y)end,__mul=function(self,Z)if type(self)=="number"then return h.Vector2.new(Z.x*self,Z.y*self)else return h.Vector2.new(self.x*Z,self.y*Z)end end,__div=function(self,Z)return h.Vector2.new(self.x/Z,self.y/Z)end,__eq=function(self,a6)return self.x==a6.x and self.y==a6.y end,__lt=function(self,a6)return self:length_sq()<a6:length_sq()end,__le=function(self,a6)return self:length_sq()<=a6:length_sq()end},Vector3={new=function(a3,a4,aa)local ab={x=a3 or 0,y=a4 or 0,z=aa or 0}setmetatable(ab,h.Vector3)return ab end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return self.x*self.x+self.y*self.y+self.z*self.z end,length=function(self)return math.sqrt(self.x*self.x+self.y*self.y+self.z*self.z)end,unit=function(self)return self/self:length()end,dot=function(self,a6)return self.x*a6.x+self.y*a6.y+self.z*a6.z end,cross=function(self,a6)return h.Vector3.new(self.y*a6.z-self.z*a6.y,self.z*a6.x-self.x*a6.z,self.x*a6.y-self.y*a6.x)end,rotate=function(self,ac,a7)local a8=math.cos(a7)return a8*self+math.sin(a7)*ac:cross(self)+(1-a8)*ac:dot(self)*ac end,string=function(self,_)if _ then return string.format(table.concat({"(%.",_,"f; %.",_,"f; %.",_,"f)"}),self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a6)return h.Vector3.new(self.x+a6.x,self.y+a6.y,self.z+a6.z)end,__sub=function(self,a6)return h.Vector3.new(self.x-a6.x,self.y-a6.y,self.z-a6.z)end,__mul=function(self,Z)if type(self)=="number"then return h.Vector3.new(Z.x*self,Z.y*self,Z.z*self)else return h.Vector3.new(self.x*Z,self.y*Z,self.z*Z)end end,__div=function(self,Z)return h.Vector3.new(self.x/Z,self.y/Z,self.z/Z)end,__eq=function(self,a6)return self.x==a6.x and self.y==a6.y and self.z==a6.z end,__lt=function(self,a6)return self:length_sq()<a6:length_sq()end,__le=function(self,a6)return self:length_sq()<=a6:length_sq()end},map=function(ad,ae,af,ag,ah,ai)local aj=(ad-ae)/(af-ae)*(ah-ag)+ag;if ai then return h.constrain(aj,ag,ah)end;return aj end,constrain=function(ad,ak,al)return math.min(al,math.max(ak,ad))end,round=function(Z)return math.floor(Z+0.5)end,round_numbers=function(...)local am={...}local an={}for d,Z in next,am do table.insert(an,h.round(Z))end;return table.unpack(an)end,floor_numbers=function(...)local am={...}local ao={}for d,Z in next,am do table.insert(ao,math.floor(Z))end;return table.unpack(ao)end,ceil_numbers=function(...)local am={...}local ap={}for d,Z in next,am do table.insert(ap,math.ceil(Z))end;return table.unpack(ap)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(aq,ad)for ar,as in next,aq do if as==ad then return true,ar end end;return false,nil end,has_key=function(aq,d)if aq[d]~=nil then return true,aq[d]end;return false,nil end,serialise=function(aq,at,au,av,aw,ax,ay,az,aA)local at=at or 0;local ay=ay or"  "local aB=0;local az=az or"\n"local aA=aA or" "if not au then ay,az,aA="","",""end;local aC="root"local aD={[aq]=aC}local function aE(aq,W)local aF=ay:rep(aB+1)local aG=table.concat({"{",az})local function aH(aq)local aI=#aq;local aJ=0;for d,ad in next,aq do local aK=type(d)local aL;if aK=="string"or aK=="table"then aL=string.format("%q",tostring(d))else aL=tostring(d)end;if not ax and d=="__index"then ad={}end;local aM=type(ad)if aK=="number"and d<=aI and d==aJ+1 then aJ=d;aG=table.concat({aG,aF})else aG=table.concat({aG,string.format("%s[%s]%s=%s",aF,aL,aA,aA)})end;if aM=="table"then if not next(ad)then aG=table.concat({aG,"{}"})elseif at<=-1 or aB<at then if aD[ad]and not av then aG=table.concat({aG,string.format("%q",aD[ad])})else local aN=table.concat({W,"[",aL,"]"})aD[ad]=aN;aB=aB+1;aG=table.concat({aG,aE(ad,aN)})aB=aB-1 end else aG=table.concat({aG,"{}"})end elseif aM=="string"or aM=="function"then aG=table.concat({aG,string.format("%q",tostring(ad))})else aG=table.concat({aG,string.format("%s",tostring(ad))})end;if next(aq,d)then aG=table.concat({aG,",",az})else aG=table.concat({aG,az})end end end;local aO=getmetatable(aq)if aw and aO then aH(aO)if next(aq)then aG=table.concat({aG:sub(1,#aG-#az),",",aG:sub(#aG-#az+1)})end end;aH(aq)aG=table.concat({aG,ay:rep(aB),"}"})return aG end;return aE(aq,aC)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize,better_unpack=function(aq,w,aP)w=w or 1;aP=aP or#aq;if w<=aP then return aq[w],i.better_unpack(aq,w+1,aP)end end,get=function(aq,...)local W={...}local aQ=aq;for w=1,#W do aQ=aQ[W[w]]end;return aQ end,set=function(ad,aq,...)local W={...}local aR=table.remove(W)local aS=i.get(aq,table.unpack(W))local aT=aS[aR]aS[aR]=ad;return aT end}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aU)return j.colors[aU]end,paint_to_color=function(aV)return j.paint[aV]end}for d,ad in next,j.colors do j.paint[ad]=d end;k={is_area_pressed=function(aW,aX,a3,a4,aY,aZ)if aW>=a3 and aW<a3+aY then if aX>=a4 and aX<a4+aZ then return true end end;return false end,format_event_table=function(a_)local o={}o.name=a_[1]if o.name=="timer"then o.name=b.TIMER;o.id=o[2]elseif o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=a_[2]o.x=a_[3]o.y=a_[4]elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=a_[2]o.button=1;o.x=a_[3]o.y=a_[4]elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=a_[2]o.x=a_[3]o.y=a_[4]elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=a_[2]o.x=a_[3]o.y=a_[4]elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=a_[2]o.x=a_[3]o.y=a_[4]elseif o.name=="char"then o.name=b.CHAR;o.char=a_[2]elseif o.name=="key"then o.name=b.KEY;o.key=a_[2]elseif o.name=="key_up"then o.name=b.KEYUP;o.key=a_[2]elseif o.name=="paste"then o.name=b.PASTE;o.paste=a_[2]elseif o.name=="rednet_message"then o.name=b.REDNET;o.from=a_[2]o.message=a_[3]local b0=a_[4]if type(b0)=="number"then o.distance=b0 else o.protocol=tostring(b0)end elseif o.name=="modem_message"then local b1=a_[5]o.name=b.MODEM;o.side=a_[2]o.from=a_[4]o.protocol=b1.sProtocol or""o.message=b1.message elseif o.name=="terminate"then o.name=b.TERMINATE elseif o.name=="term_resize"then o.name=b.TERMRESIZE else o.parameters={}for d=2,#a_ do table.insert(o.parameters,a_[d])end end;o.raw=a_;return o end}l={_path="/.settings",set=function(b2,ad)settings.set(b2,ad)settings.save(l._path)end,unset=function(b2)settings.unset(b2)settings.save(l._path)end,get=function(b2)return settings.get(b2)end}m={get_monitors=function(b3)local b4={}for d,b5 in next,b3 do if b5=="terminal"then b4[b5]=term else if peripheral.getType(b5)=="monitor"then b4[b5]=peripheral.wrap(b5)end end end;return b4 end,better_print=function(b6,b7,b8,...)local b9=table.concat({...})local ba=b6.getTextColor()local bb=b6.getBackgroundColor()if b7 then b6.setTextColor(b7)end;if b8 then b6.setBackgroundColor(b8)end;print(b9)b6.setTextColor(ba)b6.setBackgroundColor(bb)end,better_clear=function(b6)b6.clear()b6.setCursorPos(1,1)end}local bc={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a3,a4)if self.pixels[a3]then if self.pixels[a3][a4]then return true end end;return false end,get_pixel=function(self,a3,a4)if self:is_pixel_custom(a3,a4)then return self.pixels[a3][a4]end;return{char=" ",foreground=self.background,background=self.background,inverted=false}end,set_pixel=function(self,a3,a4,M,b7,b8,bd)a3,a4=math.floor(a3),math.floor(a4)local be=self:get_pixel(a3,a4)if M then be.char=M:sub(1,1)end;if bd then be.foreground,be.background=b8 or be.foreground,b7 or be.background else if be.inverted then be.foreground,be.background=b7 or be.background,b8 or be.foreground else be.foreground,be.background=b7 or be.foreground,b8 or be.background end end;be.inverted=bd;if not self.pixels[a3]then self.pixels[a3]={}end;self.pixels[a3][a4]=be end,clear=function(self)self.pixels={}end},set_screens=function(self,bf)self.screens=m.get_monitors(bf)end,set_monitors=function(self,b3)self:set_screens(b3)end,clear=function(self)self.buffer:clear()end,draw=function(self)local bg=self.screens;local bh=self.buffer;for bi,bj in next,bg do local bk,bl=bj.getCursorPos()local aY,aZ=bj.getSize()for a4=1,aZ do local bm,bn,bo={},{},{}for a3=1,aY do local be=bh:get_pixel(a3,a4)bm[#bm+1]=be.char;bn[#bn+1]=j.colors[be.foreground]bo[#bo+1]=j.colors[be.background]end;bj.setCursorPos(1,a4)bj.blit(table.concat(bm),table.concat(bn),table.concat(bo))end;bj.setCursorPos(bk,bl)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a3,a4,aU)self.buffer:set_pixel(a3,a4," ",aU,aU)end,write=function(self,a3,a4,bp,b7,b8)for bq=0,#bp-1 do local M=bp:sub(bq+1,bq+1)self.buffer:set_pixel(a3+bq,a4,M,b7,b8)end end,blit=function(self,a3,a4,bp,b7,b8)local br=""local bs=""b7=b7 or""b8=b8 or""for bq=0,#bp-1 do local M=bp:sub(bq+1,bq+1)local bt=b7:sub(bq+1,bq+1)bt=#bt>0 and bt or br;local bu=b8:sub(bq+1,bq+1)bu=#bu>0 and bu or bs;self.buffer:set_pixel(a3+bq,a4,M,j.paint[bt],j.paint[bu])br=bt;bs=bu end end,rectangle=function(self,a3,a4,aY,aZ,aU,bv,bw)if bv then for bq=0,aY-1 do for bx=0,aZ-1 do if aZ==1 then if aY==1 then self.buffer:set_pixel(a3+bq,a4+bx,e.MIDDLE,bw,aU,true)else if bq==0 then self.buffer:set_pixel(a3+bq,a4+bx,e.MIDDLERIGHT,bw,aU,true)elseif bq==aY-1 then self.buffer:set_pixel(a3+bq,a4+bx,e.MIDDLELEFT,bw,aU,true)else self.buffer:set_pixel(a3+bq,a4+bx,e.MIDDLE,bw,aU,true)end end elseif bx==0 then if bq==0 then self.buffer:set_pixel(a3+bq,a4+bx,e.TOPLEFT,bw,aU)elseif bq==aY-1 then self.buffer:set_pixel(a3+bq,a4+bx,e.TOPRIGHT,bw,aU,true)else self.buffer:set_pixel(a3+bq,a4+bx,e.TOP,bw,aU)end elseif bx==aZ-1 then if bq==0 then self.buffer:set_pixel(a3+bq,a4+bx,e.BOTTOMLEFT,bw,aU,true)elseif bq==aY-1 then self.buffer:set_pixel(a3+bq,a4+bx,e.BOTTOMRIGHT,bw,aU,true)else self.buffer:set_pixel(a3+bq,a4+bx,e.BOTTOM,bw,aU,true)end elseif bq==0 then self.buffer:set_pixel(a3+bq,a4+bx,e.LEFT,bw,aU)elseif bq==aY-1 then self.buffer:set_pixel(a3+bq,a4+bx,e.RIGHT,bw,aU,true)else self.buffer:set_pixel(a3+bq,a4+bx," ",aU,aU)end end end else for bq=0,aY-1 do for bx=0,aZ-1 do self.buffer:set_pixel(a3+bq,a4+bx," ",aU,aU)end end end end,line=function(self,by,bz,bA,bB,aU)local function bC(by,bz,bA,bB)local bD=1;if by>bA then bD=-1 end;local bE=bA-by;local bF=bB-bz;local bG=1;if bF<0 then bG=-1;bF=-bF end;local bH=2*bF-bE;local a4=bz;for a3=by,bA,bD do self:point(a3,a4,aU)if bH>0 then a4=a4+bG;bH=bH-2*bE end;bH=bH+2*bF end end;local function bI(by,bz,bA,bB)local bD=1;if bz>bB then bD=-1 end;local bE=bA-by;local bF=bB-bz;local bJ=1;if bE<0 then bJ=-1;bE=-bE end;local bH=2*bE-bF;local a3=by;for a4=bz,bB,bD do self:point(a3,a4,aU)if bH>0 then a3=a3+bJ;bH=bH-2*bF end;bH=bH+2*bE end end;if math.abs(bB-bz)<math.abs(bA-by)then if by>bA then bC(bA,bB,by,bz)else bC(by,bz,bA,bB)end else if bz>bB then bI(bA,bB,by,bz)else bI(by,bz,bA,bB)end end end,circle=function(self,bK,bL,bM,aU)local bN=bM*bM;self:point(bK,bL+bM,aU)self:point(bK,bL-bM,aU)self:point(bK+bM,bL,aU)self:point(bK-bM,bL,aU)local a3=1;local a4=math.floor(math.sqrt(bN-1)+0.5)while a3<a4 do self:point(bK+a3,bL+a4,aU)self:point(bK+a3,bL-a4,aU)self:point(bK-a3,bL+a4,aU)self:point(bK-a3,bL-a4,aU)self:point(bK+a4,bL+a3,aU)self:point(bK+a4,bL-a3,aU)self:point(bK-a4,bL+a3,aU)self:point(bK-a4,bL-a3,aU)a3=a3+1;a4=math.floor(math.sqrt(bN-a3*a3)+0.5)end;if a3==a4 then self:point(bK+a3,bL+a4,aU)self:point(bK+a3,bL-a4,aU)self:point(bK-a3,bL+a4,aU)self:point(bK-a3,bL-a4,aU)end end}local bO={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,bP,d)if self.pressed_keys[d]then if bP then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,bQ,...)local keys={...}if not(#keys>0)then return false end;for bR,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if bQ then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for bR,d in next,keys do self:remove_key(d)end end,manage_event=function(self,formatted_event)if formatted_event.name==b.KEY then self:add_key(formatted_event.key)elseif formatted_event.name==b.KEYUP then self:remove_key(formatted_event.key)end end}local bS={}bS={Clock={new=function(bT)local bU={enabled=true,oneshot=false,clock=os.clock(),interval=bT,callbacks={onClock=function()end}}setmetatable(bU,bS.Clock)return bU end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,formatted_event)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a3,a4,bp,b7,b8)local bV={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_LEFT,text=bp,pos=h.Vector2.new(a3,a4),colors={foreground=b7,background=b8},callbacks={onDraw=function()end}}setmetatable(bV,bS.Label)return bV end,draw=function(self,bW)if self.hidden then return end;self.callbacks.onDraw(self,bW)local N=g.split_by_char(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,bX in next,N do bc:write(self.pos.x,self.pos.y+d-1,bX,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then for d,bX in next,N do bc:write(self.pos.x-#bX/2+1,self.pos.y+d-1,bX,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_RIGHT then for d,bX in next,N do bc:write(self.pos.x-#bX+1,self.pos.y+d-1,bX,self.colors.foreground,self.colors.background)end end end},Button={new=function(a3,a4,aY,aZ,bp,b7,bY,bZ)local b_={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bp,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(aY,aZ),border=false,timed={enabled=false,clock=bS.Clock.new(0.5)},colors={foreground=b7,active_background=bY,unactive_background=bZ,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}b_.timed.clock.binded_button=b_;b_.timed.clock.oneshot=true;b_.timed.clock:stop()b_.timed.clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)self.binded_button.callbacks.onTimeout(self.binded_button,formatted_event)end)setmetatable(b_,bS.Button)return b_ end,draw=function(self,bW)if self.hidden then return end;self.callbacks.onDraw(self,bW)if self.active then bc:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background,self.border,self.colors.border_color)else bc:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background,self.border,self.colors.border_color)end;local N=g.split_by_char(self.text,"\n")local c0=(self.size.y-#N)/2+self.pos.y;for bx=0,#N-1 do local bX=N[bx+1]local c1;if self.text_alignment==b.ALIGN_LEFT then c1=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then c1=(self.size.x-#bX)/2+self.pos.x elseif self.text_alignment==b.ALIGN_RIGHT then c1=self.pos.x+self.size.x-#bX end;bc:write(c1,c0+bx,bX,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(formatted_event)return true else self.callbacks.onFailedPress(self,formatted_event)end elseif bO:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(formatted_event)end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self,formatted_event)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self.active=not self.active;self.callbacks.onPress(self,formatted_event)end end},Progressbar={new=function(a3,a4,aY,aZ,aQ,ak,al,b7,c2,c3)local c4={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(aY,aZ),value={max=al,min=ak,current=aQ,draw_percentage=true,percentage_precision=2},colors={foreground=b7,filled_background=c2,unfilled_background=c3},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(c4,bS.Progressbar)return c4 end,draw=function(self,bW)if self.hidden then return end;self.callbacks.onDraw(self,bW)local c5=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local c6=self.size.x*c5;bc:rectangle(self.pos.x,self.pos.y,c6,self.size.y,self.colors.filled_background)bc:rectangle(self.pos.x+c6,self.pos.y,self.size.x-c6,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local c7=table.concat({g.format_number(c5*100,self.value.percentage_precision),"%"})local c8=(self.size.x-#c7)/2+self.pos.x;local c0=(self.size.y-1)/2+self.pos.y;bc:write(c8,c0,c7,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,ad)local c9=h.constrain(ad,self.value.min,self.value.max)self.value.current=c9 end},Memo={new=function(a3,a4,aY,aZ,b7,b8)local ca={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(aY,aZ),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=bS.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},border=false,colors={foreground=b7,background=b8,cursor=colors.white,cursor_text=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end,onPaste=function()end}}ca.cursor.blink.binded_cursor=ca.cursor;ca.cursor.blink:set_callback(b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(ca,bS.Memo)return ca end,draw=function(self,bW)if self.hidden then return end;self.callbacks.onDraw(self,bW)bc:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)local cb=self.pos.x;local cc=self.pos.y;local cd=self.size.x;local ce=self.size.y;if self.border then cb=cb+1;cc=cc+1;cd=cd-2;ce=ce-2 end;local cf=self.cursor.pos.x-self.first_visible_char;local cg=self.cursor.pos.y-self.first_visible_line;for a4=1,ce do local ch=a4+self.first_visible_line-1;local ci=self.rich_text[ch]or{}local bX=self.lines[ch]or""local cj=self.first_visible_char;local ck=self.first_visible_char+cd-1;local cl=bX:sub(cj,ck)local cm=cc+a4-1;if ci.background then if type(ci.background)=="string"then local cn=ci.background:sub(cj,ck)cn=#cn>0 and cn or ci.background:sub(#ci.background)bc:blit(cb,cm,string.rep(" ",cd),nil,cn)else bc:rectangle(cb,cm,cd,1,ci.background)end end;if ci.foreground then if type(ci.foreground)=="string"then local co=ci.foreground:sub(cj,ck)co=#co>0 and co or ci.foreground:sub(#ci.foreground)bc:blit(cb,cm,cl,co)else bc:write(cb,cm,cl,ci.foreground)end else bc:write(cb,cm,cl,self.colors.foreground)end end;if self.cursor.visible and cf>=0 and cf<cd and cg>=0 and cg<ce then bc:write(cf+cb,cg+cc,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if self.hidden then return false end;if not self.editable then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)self:focus(true,formatted_event)local a3=formatted_event.x-self.pos.x;local a4=formatted_event.y-self.pos.y;if self.border then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x+1,self.pos.y+1,self.size.x-2,self.size.y-2)then self:set_cursor(a3+self.first_visible_char-1,a4+self.first_visible_line-1)end else self:set_cursor(a3+self.first_visible_char,a4+self.first_visible_line)end;return true else self.callbacks.onFailedPress(self,formatted_event)self:focus(false,formatted_event)return false end elseif formatted_event.name==b.DELETED then self:focus(false,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.PASTE then if self.callbacks.onPaste(self,formatted_event)then return true end;self:write(formatted_event.paste)return true elseif formatted_event.name==b.CHAR then if self.callbacks.onChar(self,formatted_event)then return true end;self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if self.callbacks.onKey(self,formatted_event)then return true end;if bO:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cp=self.lines[self.cursor.pos.y-1]local cq=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bk=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(table.concat({cq,"\n",cp}))self:set_cursor(bk,self.cursor.pos.y-1)end;return true elseif bO:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cq=self.lines[self.cursor.pos.y]local cr=self.lines[self.cursor.pos.y+1]if not cr then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bk=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(table.concat({cr,"\n",cq}))self:set_cursor(bk,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif formatted_event.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif formatted_event.key==b.KEY_RIGHT then local bX=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#bX+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local cs=self.lines[self.cursor.pos.y-1]self:set_cursor(#cs+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_BACKSPACE then local bX=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local ct=#self.lines[self.cursor.pos.y-1]+1;local cu=self.cursor.pos.y-1;self:set_cursor(ct,cu)self:write(bX)self:set_cursor(ct,cu)end else local az=table.concat({bX:sub(1,self.cursor.pos.x-2),bX:sub(self.cursor.pos.x)})self.lines[self.cursor.pos.y]=az;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,az,{az})end;return true elseif formatted_event.key==b.KEY_DELETE then local bX=self.lines[self.cursor.pos.y]local cv=bX:sub(self.cursor.pos.x)if#cv>0 then local az=table.concat({bX:sub(1,self.cursor.pos.x-1),bX:sub(self.cursor.pos.x+1)})self.lines[self.cursor.pos.y]=az;self.callbacks.onWrite(self,az,{az})else local cr=self.lines[self.cursor.pos.y+1]if cr then local ct=self.cursor.pos.x;local cu=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(cr)self:set_cursor(ct,cu)end end;return true elseif formatted_event.key==b.KEY_ENTER then local cw=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cx=cw:gsub("(%s*).*","%1")self:write(table.concat({"\n",cx}))return true elseif formatted_event.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_HOME then local cw=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local cx=cw:gsub("(%s*).*","%1")self:set_cursor(#cx+1,self.cursor.pos.y)return true elseif bO:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local cy=self.lines[self.cursor.pos.y]local cx=cy:gsub("^(%s*).*$","%1")local cz=math.min(#self.tab_spaces,#cx)local az=cy:sub(cz+1)self.lines[self.cursor.pos.y]=az;self:set_cursor(self.cursor.pos.x-cz,self.cursor.pos.y)self.callbacks.onWrite(self,az,{az})return true elseif formatted_event.key==b.KEY_TAB then local bk=self.cursor.pos.x;local cA=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cB=#self.lines[self.cursor.pos.y]-cA;self:set_cursor(bk+cB,self.cursor.pos.y)return true end elseif formatted_event.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,formatted_event)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+formatted_event.direction,1,#self.lines)return true end end end,focus=function(self,cC,formatted_event)if cC then self.focussed=true;self.callbacks.onFocus(self,formatted_event)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)end end,set_cursor=function(self,ct,cu,cD)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then cu=h.constrain(cu,1,self.limits.y)end;if cD then for a4=#self.lines+1,cu do if not self.lines[a4]then self.lines[a4]=""end end else cu=h.constrain(cu,1,#self.lines)end;ct=h.constrain(ct,1,#self.lines[cu]+1)local cf=ct-self.first_visible_char;local cg=cu-self.first_visible_line;local cd=self.size.x;local ce=self.size.y;if self.border then cd=cd-2;ce=ce-2 end;if cf>=cd then self.first_visible_char=self.first_visible_char+cf-cd+1 elseif cf<0 then self.first_visible_char=self.first_visible_char+cf end;if cg>=ce then self.first_visible_line=self.first_visible_line+cg-ce+1 elseif cg<0 then self.first_visible_line=self.first_visible_line+cg end;self.callbacks.onCursorChange(self,ct,cu)self.cursor.pos=h.Vector2.new(ct,cu)end,write=function(self,...)local bp=table.concat({...})local N=g.split_by_char(bp,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local I=table.concat({"[^",g.escape_magic_characters(table.concat(self.whitelist)),"]"})for d,bX in next,N do N[d]=bX:gsub(I,"")end elseif#self.blacklist>0 then local I=table.concat({"[",g.escape_magic_characters(table.concat(self.blacklist)),"]"})for d,bX in next,N do N[d]=bX:gsub(I,"")end end;if self.limits.y>0 then for a4=1,#self.lines+#N-1-self.limits.y do table.remove(N)end;if#N==0 then return end end;if#N>1 then for cE,bX in next,N do if cE==1 then local cF=self.lines[self.cursor.pos.y]local cG=cF:sub(1,self.cursor.pos.x-1)local cv=cF:sub(self.cursor.pos.x)local cH=N[#N]if self.limits.x>0 then bX=bX:sub(1,self.limits.x-#cG)cH=cH:sub(1,self.limits.x-#cv)end;self.lines[self.cursor.pos.y]=table.concat({cG,bX})table.insert(self.lines,self.cursor.pos.y+1,table.concat({cH,cv}))self:set_cursor(#cH+1,self.cursor.pos.y+1)elseif cE==#N then break else if self.limits.x>0 then bX=bX:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,bX)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cF=self.lines[self.cursor.pos.y]local cG=cF:sub(1,self.cursor.pos.x-1)local cv=cF:sub(self.cursor.pos.x)if self.limits.x>0 then N[1]=N[1]:sub(1,self.limits.x-(#cG+#cv))end;self.lines[self.cursor.pos.y]=table.concat({cG,N[1],cv})self:set_cursor(self.cursor.pos.x+#N[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bp,N)end,print=function(self,...)local bp=table.concat({...})local az=#self.lines>0 and"\n"or""self:write(table.concat({az,bp}))end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=h.Vector2.new(1,1)end},Window={new=function(a3,a4,aY,aZ,b8,cI)local cJ={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a3,a4),size=h.Vector2.new(aY,aZ),can_drag=false,border=false,dragging={enabled=true,from=h.Vector2.new(1,1)},resizing={enabled=true,corner=h.Vector2.new(-1,1),enabled_directions={[-1]={[1]=true,[0]=true,[-1]=true},[0]={[1]=true,[0]=false,[-1]=true},[1]={[1]=true,[0]=true,[-1]=true}},pinned={x=false,y=false},min_size=h.Vector2.new(aY,aZ),max_size=h.Vector2.new(aY,aZ)*2},shadow={enabled=cI,offset=h.Vector2.new(1,1)},elements={},colors={background=b8,shadow=colors.black,border_color=colors.white},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onDrag=function()end,onResize=function()end}}setmetatable(cJ,bS.Window)return cJ end,draw=function(self,bW)if self.hidden then return end;self.callbacks.onDraw(self,bW)if self.shadow.enabled then bc:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;bc:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background,self.border,self.colors.border_color)self:draw_elements(bW)end,event=function(self,formatted_event)if self.hidden then return false end;local cK=self:event_elements(formatted_event)if not cK then if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.can_drag=false;if self.resizing.enabled then local cL=true;local cM=formatted_event.y==self.pos.y+self.size.y-1;local cN=formatted_event.y==self.pos.y;if formatted_event.x==self.pos.x+self.size.x-1 then if self.resizing.enabled_directions[1][1]and cM then self.resizing.corner=self.pos.ONE:duplicate()self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][-1]and cN then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][0]and not(cM or cN)then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cL=false end elseif formatted_event.x==self.pos.x then if self.resizing.enabled_directions[-1][1]and cM then self.resizing.corner=self.pos.DOWN+self.pos.LEFT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][-1]and cN then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][0]and not(cM or cN)then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cL=false end elseif self.resizing.enabled_directions[0][1]and cM then self.resizing.corner=self.pos.DOWN+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[0][-1]and cN then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false else cL=false end;if not cL then self.resizing.corner=self.pos.ZERO:duplicate()self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end else self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end;self.focussed=true;self.callbacks.onPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.callbacks.onFailedPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG and self.focussed then if self.can_drag then self:drag(formatted_event.x,formatted_event.y)else self:resize(formatted_event.x,formatted_event.y,self.resizing.pinned.x,self.resizing.pinned.y)end;return true elseif formatted_event.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,formatted_event)end else self.focussed=false;self.callbacks.onFocus(self,formatted_event)end;return cK end,drag=function(self,a3,a4)if self.dragging.enabled then local cO=self.pos:duplicate()local cP=h.Vector2.new(a3-self.dragging.from.x,a4-self.dragging.from.y)self.pos=self.pos+cP;self.dragging.from=h.Vector2.new(a3,a4)self.callbacks.onDrag(self,cO.x,cO.y)end end,resize=function(self,a3,a4,cQ,cR)if self.resizing.enabled and self.resizing.corner~=self.pos.ZERO then local function cS()self.size.x=h.constrain(self.size.x,self.resizing.min_size.x,self.resizing.max_size.x)self.size.y=h.constrain(self.size.y,self.resizing.min_size.y,self.resizing.max_size.y)end;local cT=h.Vector2.new(a3,a4)local cO=self.pos:duplicate()local cU=self.size:duplicate()if self.resizing.corner==self.pos.ONE then self.size.x=cT.x-self.pos.x+1;self.size.y=cT.y-self.pos.y+1;cS()elseif self.resizing.corner==self.pos.ONE*-1 then self.size.x=self.size.x+self.pos.x-cT.x;self.size.y=self.size.y+self.pos.y-cT.y;cS()local cV=cU-self.size;self.pos=self.pos+cV elseif self.resizing.corner==self.pos.UP+self.pos.RIGHT then self.size.x=cT.x-self.pos.x+1;self.size.y=self.size.y+self.pos.y-cT.y;cS()local cW=cU.y-self.size.y;self.pos.y=self.pos.y+cW elseif self.resizing.corner==self.pos.DOWN+self.pos.LEFT then self.size.x=self.size.x+self.pos.x-cT.x;self.size.y=cT.y-self.pos.y+1;cS()local cB=cU.x-self.size.x;self.pos.x=self.pos.x+cB end;if cQ then self.size.x=cU.x;self.pos.x=cO.x end;if cR then self.size.y=cU.y;self.pos.y=cO.y end;self.callbacks.onResize(self,cO.x,cO.y,cU.x,cU.y)end end,set_elements=function(self,cX)self.elements={}for d,cY in next,cX do table.insert(self.elements,cY)end end,draw_elements=function(self,bW)for d=#self.elements,1,-1 do local cY=self.elements[d]if cY.draw then cY.pos=cY.pos+self.pos-self.pos.ONE;cY:draw(bW)cY.pos=cY.pos-self.pos+self.pos.ONE end end end,event_elements=function(self,formatted_event)local cZ=formatted_event;if cZ.name==b.TOUCH then cZ=k.format_event_table(cZ.raw)cZ.x,cZ.y=cZ.x-self.pos.x+1,cZ.y-self.pos.y+1 end;local cK=false;for d,cY in next,self.elements do if cY.event then local c_=cY:event(cZ)cK=cK or c_;if c_ then cZ={name=b.DELETED}end end end;return cK end}}bS.Clock.__index=bS.Clock;bS.Label.__index=bS.Label;bS.Button.__index=bS.Button;bS.Progressbar.__index=bS.Progressbar;bS.Memo.__index=bS.Memo;bS.Window.__index=bS.Window;local d0={}d0={new=function(d1)local d2={draw_priority=b.LOW_PRIORITY,enabled=true,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=bS.Clock.new(d1 or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}d2.broadcast_clock.WSS=d2;d2.broadcast_clock:set_callback(b.ONCLOCK,function(self,formatted_event)rednet.broadcast(bc.frame,self.WSS.protocol)end)setmetatable(d2,d0)return d2 end,draw=function(self,bW)if not self.enabled then return false end;self.callbacks.onDraw(self,bW)if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then bc.buffer.background=self.buffer.background;bc.buffer.pixels=self.buffer.pixels end end end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local d3=false;if formatted_event.name==b.REDNET then if formatted_event.protocol==self.protocol then local b1=formatted_event.message;if self.mode==b.HOST then if b1==b.CONNECTION_REQUEST then rednet.send(formatted_event.from,b.OK,self.protocol)self.users[formatted_event.from]=true;d3=true;self.callbacks.onConnect(self,formatted_event)elseif b1==b.DISCONNECTED then self.users[formatted_event.from]=nil;d3=true;self.callbacks.onDisconnect(self,formatted_event)elseif self.events_whitelist[b1.name or"nil"]and self.users[formatted_event.from]and type(b1)=="table"then if b1.raw then os.queueEvent(table.unpack(b1.raw))end;d3=true end elseif self.mode==b.USER then if formatted_event.from==self.host_id then if b1==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;d3=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(b1)=="table"then self.buffer=b1;d3=true end end end end end;if self.mode==b.USER then if formatted_event.name==b.TOUCH then d3=true end;if self.events_whitelist[tostring(formatted_event.name)]then rednet.send(self.host_id,formatted_event,self.protocol)d3=true end elseif self.mode==b.HOST then self.broadcast_clock:event(formatted_event)end;return d3 end,use_side=function(self,d4)self.side=d4 end,connect=function(self,d5,d6,d7)d6=d6 or 2;d7=d7 or 10;rednet.open(self.side)self.host_id=d5;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local d8=0;while true do d8=d8+1;local d9={rednet.receive(self.protocol,d6)}if d9[1]==d5 and d9[2]==b.OK and d9[3]==self.protocol then return b.OK elseif d8>=d7 then local da=string.format("Connection timed out on attempt %d after %d ms",d8,d6*1000)if#d9>0 then da=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",d8,d6*1000)end;d0:close()error(da,2)end end;self.callbacks.onConnect(self,d5)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}d0.__index=d0;local db={}db={new=function(dc)local dd={enabled=true,computer_whitelist={},side=b.NONE,mode=b.ALL,password=dc or b.NONE,protocol="YAGUI-"..a.ver.."_FT",save_dir="/FT",callbacks={onEvent=function()end,onConnect=function()end,onSend=function()end,onReceive=function()end}}setmetatable(dd,db)return dd end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;if formatted_event.name==b.REDNET and formatted_event.protocol==self.protocol then if self.mode==b.ALL or self.mode==b.RECEIVE then local d5=formatted_event.from;if self.computer_whitelist[d5]or self.callbacks.onConnect(self,formatted_event)then local b1=formatted_event.message;if type(b1)=="table"and b1.name and b1.content then if b1.psw==self.password then local b2=fs.getName(tostring(b1.name))local W=fs.combine(self.save_dir,b2)if fs.exists(W)then rednet.send(d5,b.NO,self.protocol)else local de=tostring(b1.content)if self.callbacks.onReceive(self,formatted_event,d5,b2,W,de)then return true end;local df=fs.open(W,"w")if df then df.write(de)df.close()rednet.send(d5,b.OK,self.protocol)else rednet.send(d5,b.ERROR,self.protocol)end end else rednet.send(d5,b.NO,self.protocol)end else rednet.send(d5,b.ERROR,self.protocol)end else rednet.send(d5,b.NO,self.protocol)end end end end,send=function(self,dg,dh,di,dj)if self.mode==b.ALL or self.mode==b.SEND then dj=dj or fs.getName(di)dh=dh or b.NONE;local df=fs.open(di,"r")local de=df.readAll()df.close()local b1={psw=dh,name=dj,content=de}if self.callbacks.onSend(self,formatted_event,b1)then return true end;rednet.send(dg,b1,self.protocol)end end,open=function(self,d4)self.side=d4;rednet.open(d4)end,close=function(self)if rednet.isOpen()then rednet.close(self.side)end end}db.__index=db;local dk={}dk={new=function(dl,dm)local dn={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=dl,EPS_target=dm},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=bS.Clock.new(1/dl),stats_clock=bS.Clock.new(1),FPS_label=bS.Label.new(1,1,"1 FPS",colors.white),EPS_label=bS.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),elements=nil,show=function(self,dp)self.elements.FPS_label.hidden=not dp;self.elements.EPS_label.hidden=not dp end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+h.Vector2.DOWN end,Frames=0,Events=0,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}dn.elements.loop.stats_clock.stats=dn.stats;dn.stats.elements=dn.elements.loop;dn.elements.loop.stats_clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.stats:update_pos()self.stats.elements.FPS_label.text=table.concat({self.stats.FPS," FPS"})self.stats.elements.EPS_label.text=table.concat({self.stats.EPS," EPS"})self.stats.FPS,self.stats.EPS=self.stats.Frames,self.stats.Events;self.stats.Frames,self.stats.Events=0,0 end)dn.stats:show(false)dn.elements.loop.clock.Loop=dn;dn.elements.loop.clock:set_callback(b.ONCLOCK,function(self,formatted_event)self.Loop.callbacks.onClock(self.Loop,formatted_event)self.Loop:draw_elements(1/self.Loop.stats.FPS)self.interval=1/self.Loop.options.FPS_target end)setmetatable(dn,dk)return dn end,set_monitors=function(self,b3)self.monitors=m.get_monitors(b3)end,set_elements=function(self,cX)self.elements.high_priority={}self.elements.low_priority={}for d,ad in next,cX do if ad.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,ad)else table.insert(self.elements.low_priority,ad)end end end,draw_elements=function(self,bW)local function dq(aq)for d=#aq,1,-1 do local cY=aq[d]if cY.draw then cY:draw(bW)end end end;self.callbacks.onDraw(self,bW)local dr=bc.screens;bc.screens=self.monitors;dq(self.elements.low_priority)dq(self.elements.high_priority)for d,cY in next,self.elements.loop do if cY.draw then cY:draw(bW)end end;bc:draw()bc.screens=dr;self.stats.Frames=self.stats.Frames+1 end,event_elements=function(self,formatted_event)local function a_(aq)for d,cY in next,aq do if cY.event then if cY:event(formatted_event)then formatted_event={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,formatted_event)then formatted_event={name=b.DELETED}end;if self.options.stop_on_terminate and formatted_event.name==b.TERMINATE then self:stop()return end;if formatted_event.name==b.TOUCH then local ds=false;for dt,b6 in next,self.monitors do if formatted_event.from==dt then ds=true;break end end;if not ds then formatted_event={name=b.DELETED}end end;a_(self.elements.loop)local du={}for d,cY in next,self.elements.high_priority do if cY.event then local dv=cY:event(formatted_event)if dv then formatted_event={name=b.DELETED}if self.elements.high_priority~=cY then table.insert(du,{element=cY,key=d})end end end end;if#du>0 then for d,ad in next,du do table.insert(self.elements.high_priority,1,ad.element)table.remove(self.elements.high_priority,ad.key+#du)end end;a_(self.elements.low_priority)self.stats.Events=self.stats.Events+1 end,start=function(self)self.enabled=true;bO:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local dw=os.startTimer(1/self.options.EPS_target)local dx;if self.options.raw_mode then dx={os.pullEventRaw()}else dx={os.pullEvent()}end;local formatted_event=k.format_event_table(dx)bO:manage_event(formatted_event)self:event_elements(formatted_event)os.cancelTimer(dw)end;bO:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}dk.__index=dk;local dy={__call=function(self,...)return self.new(...)end}dy.__index=dy;local dz={__call=function(self,...)return self.new(...)end,set_callback=function(self,o,p)if o==b.ONSTART then self.callbacks.onStart=p elseif o==b.ONSTOP then self.callbacks.onStop=p elseif o==b.ONDRAW then self.callbacks.onDraw=p elseif o==b.ONPRESS then self.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then self.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then self.callbacks.onTimeout=p elseif o==b.ONCLOCK then self.callbacks.onClock=p elseif o==b.ONEVENT then self.callbacks.onEvent=p elseif o==b.ONFOCUS then self.callbacks.onFocus=p elseif o==b.ONKEY then self.callbacks.onKey=p elseif o==b.ONCHAR then self.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then self.callbacks.onMouseScroll=p elseif o==b.ONCURSORCHANGE then self.callbacks.onCursorChange=p elseif o==b.ONWRITE then self.callbacks.onWrite=p elseif o==b.ONCONNECT then self.callbacks.onConnect=p elseif o==b.ONDISCONNECT then self.callbacks.onDisconnect=p elseif o==b.ONSEND then self.callbacks.onSend=p elseif o==b.ONRECEIVE then self.callbacks.onReceive=p elseif o==b.ONDRAG then self.callbacks.onDrag=p elseif o==b.ONRESIZE then self.callbacks.onResize=p elseif o==b.ONPASTE then self.callbacks.onPaste=p end end}dz.__index=dz;setmetatable(h.Vector2,dy)setmetatable(h.Vector3,dy)setmetatable(d0,dz)setmetatable(db,dz)for d,cY in next,bS do setmetatable(cY,dz)end;setmetatable(dk,dz)local dA={...}if dA[1]=="help"then local N={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,bX in next,N do m.better_print(term,bX.foreground,bX.background,bX.text)end elseif dA[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif dA[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif dA[1]=="copyright"then local dB={colors.red,colors.yellow,colors.green}local dC=g.split(a.copyright,"\n\n")for d,dD in next,dC do m.better_print(term,dB[d],nil,dD)if d<#dC then read("")end end elseif dA[1]=="setup"then if shell then local dE="YAGUI_PATH"local W="/"..shell.getRunningProgram()l.set(dE,W)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(dE),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif dA[1]=="create"then if dA[2]then local W=shell.resolve(dA[2])if g.get_extension(W)~="lua"then W=W..".lua"end;if fs.exists(W)then m.better_print(term,colors.red,nil,"PATH: \"/",W,"\" already exists, please use another path or delete it.")else local df=fs.open(W,"w")df.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")df.close()m.better_print(term,colors.green,nil,"New project was created at \"/",W,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif dA[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",dA[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local dF={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=bc,input=bO,WSS=d0,wireless_screen_share=d0,FT=db,file_transfer=db,gui_elements=bS,Loop=dk}for d,ad in next,b do dF[d]=ad end;return dF