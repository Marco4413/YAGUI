--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.27.1",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",DELETED="DELETED",NONE="NONE",ALL="ALL",SEND="SEND",RECEIVE="RECEIVE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,ONSEND=17,ONRECEIVE=18,ONDRAG=19,ONRESIZE=20,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2,ALIGN_RIGHT=3}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={__call=function(self,...)return self.new(...)end}e.__index=e;local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)if o==b.ONSTART then n.callbacks.onStart=p elseif o==b.ONSTOP then n.callbacks.onStop=p elseif o==b.ONDRAW then n.callbacks.onDraw=p elseif o==b.ONPRESS then n.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then n.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then n.callbacks.onTimeout=p elseif o==b.ONCLOCK then n.callbacks.onClock=p elseif o==b.ONEVENT then n.callbacks.onEvent=p elseif o==b.ONFOCUS then n.callbacks.onFocus=p elseif o==b.ONKEY then n.callbacks.onKey=p elseif o==b.ONCHAR then n.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then n.callbacks.onMouseScroll=p elseif o==b.ONCURSORCHANGE then n.callbacks.onCursorChange=p elseif o==b.ONWRITE then n.callbacks.onWrite=p elseif o==b.ONCONNECT then n.callbacks.onConnect=p elseif o==b.ONDISCONNECT then n.callbacks.onDisconnect=p elseif o==b.ONSEND then n.callbacks.onSend=p elseif o==b.ONRECEIVE then n.callbacks.onReceive=p elseif o==b.ONDRAG then n.callbacks.onDrag=p elseif o==b.ONRESIZE then n.callbacks.onResize=p end end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=r or"unknown"r=tostring(r)local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=x:gsub(t,", ")v=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",r,(w+1)/2,E,z)u=true;break end end;if u then error(v,3)return false end;return true end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(F,G)G=G or""local H=""for d=1,#F do local I=F[d]H=H..tostring(I)..(d<#F and G or"")end;return H end,split=function(H,G)if not string.find(H,G)then return{H}end;local J={}local K="(.-)"..G.."()"local L;for M,N in string.gfind(H,K)do table.insert(J,M)L=N end;table.insert(J,string.sub(H,L))return J end,split_by_char=function(H,O)local P={}local Q=1;for w=1,#H do if H:sub(w,w)==O then table.insert(P,w==Q and""or H:sub(Q,w-1))Q=w+1 end end;table.insert(P,H:sub(Q,#H))return P end,compare_versions=function(R,S)local T=g.split(R,".")local U=g.split(S,".")local V=#T;local W=#U;for w=1,math.min(V,W)do if tonumber(T[w])>tonumber(U[w])then return 1 elseif tonumber(T[w])<tonumber(U[w])then return-1 end end;if V>W then return 1 elseif V<W then return-1 end;return 0 end,escape_magic_characters=function(H)for d,X in next,g.magic_characters do H=H:gsub("[%"..X.."]",'%%%'..X)end;return H end,get_extension=function(Y)local Z,_=Y:gsub(".*%.","")if _>0 then return Z end;return""end,format_number=function(a0,a1)a0=tostring(a0)a1=a1 or 0;local a2=a0:gsub("(.*)%..*","%1")if a1<=0 then return a2 end;local a3=#a2+1;local a4=a0:sub(a3+1,a3+a1)a4=a4:reverse():gsub("0*(.*)","%1"):reverse()if#a4>0 then return a2 .."."..a4 end;return a2 end,trim=function(H)return H:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a5,a6)local a7={x=a5 or 0,y=a6 or 0}setmetatable(a7,h.Vector2)return a7 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a8)return self.x*a8.x+self.y*a8.y end,cross=function(self,a8)return self.x*a8.y-self.y*a8.x end,rotate=function(self,a9)local aa=math.cos(a9)local ab=math.sin(a9)return h.Vector2.new(aa*self.x-ab*self.y,ab*self.x+aa*self.y)end,string=function(self,a1)if a1 then return string.format("(%."..tostring(a1).."f; %."..tostring(a1).."f)",self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a8)return h.Vector2.new(self.x+a8.x,self.y+a8.y)end,__sub=function(self,a8)return h.Vector2.new(self.x-a8.x,self.y-a8.y)end,__mul=function(self,a0)if type(self)=="number"then return h.Vector2.new(a0.x*self,a0.y*self)else return h.Vector2.new(self.x*a0,self.y*a0)end end,__div=function(self,a0)return h.Vector2.new(self.x/a0,self.y/a0)end,__eq=function(self,a8)return self.x==a8.x and self.y==a8.y end,__lt=function(self,a8)return self:length_sq()<a8:length_sq()end,__le=function(self,a8)return self:length_sq()<=a8:length_sq()end},Vector3={new=function(a5,a6,ac)local ad={x=a5 or 0,y=a6 or 0,z=ac or 0}setmetatable(ad,h.Vector3)return ad end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)+math.pow(self.z,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a8)return self.x*a8.x+self.y*a8.y+self.z*a8.z end,cross=function(self,a8)return h.Vector3.new(self.y*a8.z-self.z*a8.y,self.z*a8.x-self.x*a8.z,self.x*a8.y-self.y*a8.x)end,rotate=function(self,ae,a9)local aa=math.cos(a9)return aa*self+math.sin(a9)*ae:cross(self)+(1-aa)*ae:dot(self)*ae end,string=function(self,a1)if a1 then return string.format("(%."..tostring(a1).."f; %."..tostring(a1).."f; %."..tostring(a1).."f)",self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a8)return h.Vector3.new(self.x+a8.x,self.y+a8.y,self.z+a8.z)end,__sub=function(self,a8)return h.Vector3.new(self.x-a8.x,self.y-a8.y,self.z-a8.z)end,__mul=function(self,a0)if type(self)=="number"then return h.Vector3.new(a0.x*self,a0.y*self,a0.z*self)else return h.Vector3.new(self.x*a0,self.y*a0,self.z*a0)end end,__div=function(self,a0)return h.Vector3.new(self.x/a0,self.y/a0,self.z/a0)end,__eq=function(self,a8)return self.x==a8.x and self.y==a8.y and self.z==a8.z end,__lt=function(self,a8)return self:length_sq()<a8:length_sq()end,__le=function(self,a8)return self:length_sq()<=a8:length_sq()end},map=function(I,af,ag,ah,ai,aj)local ak=(I-af)/(ag-af)*(ai-ah)+ah;if aj then return h.constrain(ak,ah,ai)end;return ak end,constrain=function(I,al,am)return math.min(am,math.max(al,I))end,round=function(a0)return math.floor(a0+0.5)end,round_numbers=function(...)local an={...}local ao={}for d,a0 in next,an do table.insert(ao,h.round(a0))end;return table.unpack(ao)end,floor_numbers=function(...)local an={...}local ap={}for d,a0 in next,an do table.insert(ap,math.floor(a0))end;return table.unpack(ap)end,ceil_numbers=function(...)local an={...}local aq={}for d,a0 in next,an do table.insert(aq,math.ceil(a0))end;return table.unpack(aq)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(F,I)for ar,as in next,F do if as==I then return true,ar end end;return false,nil end,has_key=function(F,d)if F[d]~=nil then return true,F[d]end;return false,nil end,serialise=function(F,at,au,av,aw,ax,ay,az,aA)local at=at or 0;local ay=ay or"  "local aB=0;local az=az or"\n"local aA=aA or" "if not au then ay,az,aA="","",""end;local aC="root"local aD={[F]=aC}local function aE(F,Y)local aF=ay:rep(aB+1)local aG="{"..az;local function aH(F)local aI=#F;local aJ=0;for d,I in next,F do local aK=type(d)local aL;if aK=="string"or aK=="table"then aL=string.format("%q",tostring(d))else aL=tostring(d)end;if not ax and d=="__index"then I={}end;local aM=type(I)if aK=="number"and d<=aI and d==aJ+1 then aJ=d;aG=aG..aF else aG=aG..string.format("%s[%s]%s=%s",aF,aL,aA,aA)end;if aM=="table"then if not next(I)then aG=aG.."{}"elseif at<=-1 or aB<at then if aD[I]and not av then aG=aG..string.format("%q",aD[I])else local aN=Y.."["..aL.."]"aD[I]=aN;aB=aB+1;aG=aG..aE(I,aN)aB=aB-1 end else aG=aG.."{}"end elseif aM=="string"or aM=="function"then aG=aG..string.format("%q",tostring(I))else aG=aG..string.format("%s",tostring(I))end;if next(F,d)then aG=aG..","..az else aG=aG..az end end end;local aO=getmetatable(F)if aw and aO then aH(aO)if next(F)then aG=aG:sub(1,#aG-#az)..","..aG:sub(#aG-#az+1)end end;aH(F)aG=aG..ay:rep(aB).."}"return aG end;return aE(F,aC)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize,better_unpack=function(F,w,aP)w=w or 1;aP=aP or#F;if w<=aP then return F[w],i.better_unpack(F,w+1,aP)end end}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aQ)return j.colors[aQ]end,paint_to_color=function(aR)return j.paint[aR]end}for d,I in next,j.colors do j.paint[I]=d end;k={is_area_pressed=function(aS,aT,a5,a6,aU,aV)if aS>=a5 and aS<a5+aU then if aT>=a6 and aT<a6+aV then return true end end;return false end,format_event_table=function(aW)local o={}o.name=aW[1]if o.name=="timer"then o.name=b.TIMER;o.id=o[2]elseif o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=aW[2]o.x=aW[3]o.y=aW[4]elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=aW[2]o.button=1;o.x=aW[3]o.y=aW[4]elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=aW[2]o.x=aW[3]o.y=aW[4]elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=aW[2]o.x=aW[3]o.y=aW[4]elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=aW[2]o.x=aW[3]o.y=aW[4]elseif o.name=="char"then o.name=b.CHAR;o.char=aW[2]elseif o.name=="key"then o.name=b.KEY;o.key=aW[2]elseif o.name=="key_up"then o.name=b.KEYUP;o.key=aW[2]elseif o.name=="paste"then o.name=b.PASTE;o.paste=aW[2]elseif o.name=="rednet_message"then o.name=b.REDNET;o.from=aW[2]o.message=aW[3]local aX=aW[4]if type(aX)=="number"then o.distance=aX else o.protocol=tostring(aX)end elseif o.name=="modem_message"then local aY=aW[5]o.name=b.MODEM;o.side=aW[2]o.from=aW[4]o.protocol=aY.sProtocol or""o.message=aY.message elseif o.name=="terminate"then o.name=b.TERMINATE else o.parameters={}for d=2,#aW do table.insert(o.parameters,aW[d])end end;o.raw=aW;return o end}l={_path="/.settings",set=function(aZ,I)settings.set(aZ,I)settings.save(l._path)end,unset=function(aZ)settings.unset(aZ)settings.save(l._path)end,get=function(aZ)return settings.get(aZ)end}m={get_monitors=function(a_)local b0={}for d,b1 in next,a_ do if b1=="terminal"then b0[b1]=term else if peripheral.getType(b1)=="monitor"then b0[b1]=peripheral.wrap(b1)end end end;return b0 end,better_print=function(b2,b3,b4,...)local b5=g.join({...},"")local b6=b2.getTextColor()local b7=b2.getBackgroundColor()if b3 then b2.setTextColor(b3)end;if b4 then b2.setBackgroundColor(b4)end;print(b5)b2.setTextColor(b6)b2.setBackgroundColor(b7)end,better_clear=function(b2)b2.clear()b2.setCursorPos(1,1)end}local b8={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a5,a6)if self.pixels[a5]then if self.pixels[a5][a6]then return true end end;return false end,get_pixel=function(self,a5,a6)if self:is_pixel_custom(a5,a6)then return self.pixels[a5][a6]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,a5,a6,O,b3,b4)local b9=self:get_pixel(a5,a6)if O and#O==1 then b9.char=O end;b9.foreground=b3 or b9.background;b9.background=b4 or b9.background;if not self.pixels[a5]then self.pixels[a5]={}end;self.pixels[a5][a6]=b9 end,clear=function(self)self.pixels={}end},set_screens=function(self,ba)self.screens=m.get_monitors(ba)end,set_monitors=function(self,a_)self:set_screens(a_)end,clear=function(self)self.buffer:clear()end,draw=function(self)local bb=self.screens;local bc=self.buffer;for bd,be in next,bb do local bf,bg=be.getCursorPos()local aU,aV=be.getSize()for a6=1,aV do local bh={text="",background="",foreground=""}for a5=1,aU do local b9=bc:get_pixel(a5,a6)bh.text=bh.text..b9.char;bh.background=bh.background..j.colors[b9.background]bh.foreground=bh.foreground..j.colors[b9.foreground]end;be.setCursorPos(1,a6)be.blit(bh.text,bh.foreground,bh.background)end;be.setCursorPos(bf,bg)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a5,a6,aQ)self.buffer:set_pixel(a5,a6," ",aQ,aQ)end,write=function(self,a5,a6,bi,b3,b4)for bj=0,#bi-1 do local O=bi:sub(bj+1,bj+1)self.buffer:set_pixel(a5+bj,a6,O,b3,b4)end end,blit=function(self,a5,a6,bi,b3,b4)local bk=""local bl=""b3=b3 or""b4=b4 or""for bj=0,#bi-1 do local O=bi:sub(bj+1,bj+1)local bm=b3:sub(bj+1,bj+1)bm=#bm>0 and bm or bk;local bn=b4:sub(bj+1,bj+1)bn=#bn>0 and bn or bl;self.buffer:set_pixel(a5+bj,a6,O,j.paint[bm],j.paint[bn])bk=bm;bl=bn end end,rectangle=function(self,a5,a6,aU,aV,aQ)for bj=0,aU-1 do for bo=0,aV-1 do self:point(a5+bj,a6+bo,aQ)end end end,line=function(self,bp,bq,br,bs,aQ)local function bt(bp,bq,br,bs)local bu=1;if bp>br then bu=-1 end;local bv=br-bp;local bw=bs-bq;local bx=1;if bw<0 then bx=-1;bw=-bw end;local by=2*bw-bv;local a6=bq;for a5=bp,br,bu do self:point(a5,a6,aQ)if by>0 then a6=a6+bx;by=by-2*bv end;by=by+2*bw end end;local function bz(bp,bq,br,bs)local bu=1;if bq>bs then bu=-1 end;local bv=br-bp;local bw=bs-bq;local bA=1;if bv<0 then bA=-1;bv=-bv end;local by=2*bv-bw;local a5=bp;for a6=bq,bs,bu do self:point(a5,a6,aQ)if by>0 then a5=a5+bA;by=by-2*bw end;by=by+2*bv end end;if math.abs(bs-bq)<math.abs(br-bp)then if bp>br then bt(br,bs,bp,bq)else bt(bp,bq,br,bs)end else if bq>bs then bz(br,bs,bp,bq)else bz(bp,bq,br,bs)end end end,circle=function(self,bB,bC,bD,aQ)local bE=bD*bD;self:point(bB,bC+bD,aQ)self:point(bB,bC-bD,aQ)self:point(bB+bD,bC,aQ)self:point(bB-bD,bC,aQ)local a5=1;local a6=math.floor(math.sqrt(bE-1)+0.5)while a5<a6 do self:point(bB+a5,bC+a6,aQ)self:point(bB+a5,bC-a6,aQ)self:point(bB-a5,bC+a6,aQ)self:point(bB-a5,bC-a6,aQ)self:point(bB+a6,bC+a5,aQ)self:point(bB+a6,bC-a5,aQ)self:point(bB-a6,bC+a5,aQ)self:point(bB-a6,bC-a5,aQ)a5=a5+1;a6=math.floor(math.sqrt(bE-a5*a5)+0.5)end;if a5==a6 then self:point(bB+a5,bC+a6,aQ)self:point(bB+a5,bC-a6,aQ)self:point(bB-a5,bC+a6,aQ)self:point(bB-a5,bC-a6,aQ)end end}local bF={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,bG,d)if self.pressed_keys[d]then if bG then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,bH,...)local keys={...}if not(#keys>0)then return false end;for bI,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if bH then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for bI,d in next,keys do self:remove_key(d)end end,manage_event=function(self,formatted_event)if formatted_event.name==b.KEY then self:add_key(formatted_event.key)elseif formatted_event.name==b.KEYUP then self:remove_key(formatted_event.key)end end}local bJ={}bJ={Clock={new=function(bK)local bL={enabled=true,oneshot=false,clock=os.clock(),interval=bK,callbacks={onClock=function()end}}setmetatable(bL,bJ.Clock)return bL end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,formatted_event)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a5,a6,bi,b3,b4)local bM={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_LEFT,text=bi,pos=h.Vector2.new(a5,a6),colors={foreground=b3,background=b4},callbacks={onDraw=function()end}}setmetatable(bM,bJ.Label)return bM end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local P=g.split_by_char(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,bN in next,P do b8:write(self.pos.x,self.pos.y+d-1,bN,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then for d,bN in next,P do b8:write(self.pos.x-math.floor(#bN/2),self.pos.y+d-1,bN,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_RIGHT then for d,bN in next,P do b8:write(self.pos.x-#bN+1,self.pos.y+d-1,bN,self.colors.foreground,self.colors.background)end end end},Button={new=function(a5,a6,aU,aV,bi,b3,bO,bP)local bQ={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bi,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(aU,aV),timed={enabled=false,clock=bJ.Clock.new(0.5)},colors={foreground=b3,active_background=bO,unactive_background=bP},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}bQ.timed.clock.binded_button=bQ;bQ.timed.clock.oneshot=true;bQ.timed.clock:stop()f.set_callback(bQ.timed.clock,b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)self.binded_button.callbacks.onTimeout(self.binded_button,formatted_event)end)setmetatable(bQ,bJ.Button)return bQ end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then b8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else b8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local P=g.split_by_char(self.text,"\n")local bR=math.floor((self.size.y-#P)/2)+self.pos.y;for bo=0,#P-1 do local bN=P[bo+1]local bS;if self.text_alignment==b.ALIGN_LEFT then bS=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then bS=math.floor((self.size.x-#bN)/2)+self.pos.x elseif self.text_alignment==b.ALIGN_RIGHT then bS=self.pos.x+self.size.x-#bN end;b8:write(bS,bR+bo,bN,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(formatted_event)return true else self.callbacks.onFailedPress(self,formatted_event)end elseif bF:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(formatted_event)end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self,formatted_event)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self.active=not self.active;self.callbacks.onPress(self,formatted_event)end end},Progressbar={new=function(a5,a6,aU,aV,bT,al,am,b3,bU,bV)local bW={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(aU,aV),value={max=am,min=al,current=bT,draw_percentage=true,percentage_precision=2},colors={foreground=b3,filled_background=bU,unfilled_background=bV},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(bW,bJ.Progressbar)return bW end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bX=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local bY=math.floor(self.size.x*bX)b8:rectangle(self.pos.x,self.pos.y,bY,self.size.y,self.colors.filled_background)b8:rectangle(self.pos.x+bY,self.pos.y,self.size.x-bY,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local bZ=g.format_number(bX*100,self.value.percentage_precision).."%"local b_=math.floor((self.size.x-#bZ)/2)+self.pos.x;local bR=math.floor((self.size.y-1)/2)+self.pos.y;b8:write(b_,bR,bZ,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,I)local c0=h.constrain(I,self.value.min,self.value.max)self.value.current=c0 end},Memo={new=function(a5,a6,aU,aV,b3,b4)local c1={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(aU,aV),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=bJ.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=b3,background=b4,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end}}c1.cursor.blink.binded_cursor=c1.cursor;f.set_callback(c1.cursor.blink,b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(c1,bJ.Memo)return c1 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)b8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local c2=self.cursor.pos.x-self.first_visible_char;local c3=self.cursor.pos.y-self.first_visible_line;for a6=1,self.size.y do local c4=a6+self.first_visible_line-1;local c5=self.rich_text[c4]or{}local bN=self.lines[c4]or""local c6=self.first_visible_char;local c7=self.first_visible_char+self.size.x-1;local c8=bN:sub(c6,c7)local c9=self.pos.y+a6-1;if c5.background then if type(c5.background)=="string"then local ca=c5.background:sub(c6,c7)ca=#ca>0 and ca or c5.background:sub(#c5.background)b8:blit(self.pos.x,c9,string.rep(" ",self.size.x),nil,ca)else b8:rectangle(self.pos.x,c9,self.size.x,1,c5.background)end end;if c5.foreground then if type(c5.foreground)=="string"then local cb=c5.foreground:sub(c6,c7)cb=#cb>0 and cb or c5.foreground:sub(#c5.foreground)b8:blit(self.pos.x,c9,c8,cb)else b8:write(self.pos.x,c9,c8,c5.foreground)end else b8:write(self.pos.x,c9,c8,self.colors.foreground)end end;if self.cursor.visible and c2>=0 and c2<self.size.x and c3>=0 and c3<self.size.y then b8:write(c2+self.pos.x,c3+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if self.hidden then return false end;if not self.editable then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)self:focus(true,formatted_event)local a5=formatted_event.x-self.pos.x;local a6=formatted_event.y-self.pos.y;self:set_cursor(a5+self.first_visible_char,a6+self.first_visible_line)return true else self.callbacks.onFailedPress(self,formatted_event)self:focus(false,formatted_event)return false end elseif formatted_event.name==b.DELETED then self:focus(false,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.PASTE then self:write(formatted_event.paste)return true elseif formatted_event.name==b.CHAR then if self.callbacks.onChar(self,formatted_event)then return true end;self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if self.callbacks.onKey(self,formatted_event)then return true end;if bF:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local cc=self.lines[self.cursor.pos.y-1]local cd=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bf=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(cd.."\n"..cc)self:set_cursor(bf,self.cursor.pos.y-1)end;return true elseif bF:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cd=self.lines[self.cursor.pos.y]local ce=self.lines[self.cursor.pos.y+1]if not ce then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bf=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(ce.."\n"..cd)self:set_cursor(bf,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif formatted_event.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif formatted_event.key==b.KEY_RIGHT then local bN=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#bN+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local cf=self.lines[self.cursor.pos.y-1]self:set_cursor(#cf+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_BACKSPACE then local bN=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local cg=#self.lines[self.cursor.pos.y-1]+1;local ch=self.cursor.pos.y-1;self:set_cursor(cg,ch)self:write(bN)self:set_cursor(cg,ch)end else local az=bN:sub(1,self.cursor.pos.x-2)..bN:sub(self.cursor.pos.x)self.lines[self.cursor.pos.y]=az;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,az,{az})end;return true elseif formatted_event.key==b.KEY_DELETE then local bN=self.lines[self.cursor.pos.y]local ci=bN:sub(self.cursor.pos.x)if#ci>0 then local az=bN:sub(1,self.cursor.pos.x-1)..bN:sub(self.cursor.pos.x+1)self.lines[self.cursor.pos.y]=az;self.callbacks.onWrite(self,az,{az})else local ce=self.lines[self.cursor.pos.y+1]if ce then local cg=self.cursor.pos.x;local ch=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(ce)self:set_cursor(cg,ch)end end;return true elseif formatted_event.key==b.KEY_ENTER then local cj=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local ck=cj:gsub("(%s*).*","%1")self:write("\n"..ck)return true elseif formatted_event.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_HOME then local cj=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local ck=cj:gsub("(%s*).*","%1")self:set_cursor(#ck+1,self.cursor.pos.y)return true elseif bF:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local cl=self.lines[self.cursor.pos.y]local ck=cl:gsub("^(%s*).*$","%1")local cm=math.min(#self.tab_spaces,#ck)local az=cl:sub(cm+1)self.lines[self.cursor.pos.y]=az;self:set_cursor(self.cursor.pos.x-cm,self.cursor.pos.y)self.callbacks.onWrite(self,az,{az})return true elseif formatted_event.key==b.KEY_TAB then local bf=self.cursor.pos.x;local cn=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local co=#self.lines[self.cursor.pos.y]-cn;self:set_cursor(bf+co,self.cursor.pos.y)return true end elseif formatted_event.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,formatted_event)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+formatted_event.direction,1,#self.lines)return true end end end,focus=function(self,cp,formatted_event)if cp then self.focussed=true;self.callbacks.onFocus(self,formatted_event)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)end end,set_cursor=function(self,cg,ch,cq)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then ch=h.constrain(ch,1,self.limits.y)end;if cq then for a6=#self.lines+1,ch do if not self.lines[a6]then self.lines[a6]=""end end else ch=h.constrain(ch,1,#self.lines)end;cg=h.constrain(cg,1,#self.lines[ch]+1)local c2=cg-self.first_visible_char;local c3=ch-self.first_visible_line;if c2>=self.size.x then self.first_visible_char=self.first_visible_char+c2-self.size.x+1 elseif c2<0 then self.first_visible_char=self.first_visible_char+c2 end;if c3>=self.size.y then self.first_visible_line=self.first_visible_line+c3-self.size.y+1 elseif c3<0 then self.first_visible_line=self.first_visible_line+c3 end;self.callbacks.onCursorChange(self,cg,ch)self.cursor.pos=h.Vector2.new(cg,ch)end,write=function(self,...)local bi=g.join({...},"")local P=g.split_by_char(bi,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local K="[^"..g.escape_magic_characters(g.join(self.whitelist,"")).."]"for d,bN in next,P do P[d]=bN:gsub(K,"")end elseif#self.blacklist>0 then local K="["..g.escape_magic_characters(g.join(self.blacklist,"")).."]"for d,bN in next,P do P[d]=bN:gsub(K,"")end end;if self.limits.y>0 then for a6=1,#self.lines+#P-1-self.limits.y do table.remove(P)end;if#P==0 then return end end;if#P>1 then for cr,bN in next,P do if cr==1 then local cs=self.lines[self.cursor.pos.y]local ct=cs:sub(1,self.cursor.pos.x-1)local ci=cs:sub(self.cursor.pos.x)local cu=P[#P]if self.limits.x>0 then bN=bN:sub(1,self.limits.x-#ct)cu=cu:sub(1,self.limits.x-#ci)end;self.lines[self.cursor.pos.y]=ct..bN;table.insert(self.lines,self.cursor.pos.y+1,cu..ci)self:set_cursor(#cu+1,self.cursor.pos.y+1)elseif cr==#P then break else if self.limits.x>0 then bN=bN:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,bN)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cs=self.lines[self.cursor.pos.y]local ct=cs:sub(1,self.cursor.pos.x-1)local ci=cs:sub(self.cursor.pos.x)if self.limits.x>0 then P[1]=P[1]:sub(1,self.limits.x-(#ct+#ci))end;self.lines[self.cursor.pos.y]=ct..P[1]..ci;self:set_cursor(self.cursor.pos.x+#P[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bi,P)end,print=function(self,...)local bi=g.join({...},"")local az=#self.lines>0 and"\n"or""self:write(az..bi)end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=h.Vector2.new(1,1)end},Window={new=function(a5,a6,aU,aV,b4,cv)local cw={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(aU,aV),can_drag=false,dragging={enabled=true,from=h.Vector2.new(1,1)},resizing={enabled=true,corner=h.Vector2.new(-1,1),enabled_directions={[-1]={[1]=true,[0]=true,[-1]=true},[0]={[1]=true,[0]=false,[-1]=true},[1]={[1]=true,[0]=true,[-1]=true}},pinned={x=false,y=false},min_size=h.Vector2.new(aU,aV),max_size=h.Vector2.new(aU,aV)*2},shadow={enabled=cv,offset=h.Vector2.new(1,1)},elements={},colors={background=b4,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onDrag=function()end,onResize=function()end}}setmetatable(cw,bJ.Window)return cw end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then b8:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;b8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,formatted_event)if self.hidden then return false end;local cx=self:event_elements(formatted_event)if not cx then if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.can_drag=false;if self.resizing.enabled then local cy=true;local cz=formatted_event.y==self.pos.y+self.size.y-1;local cA=formatted_event.y==self.pos.y;if formatted_event.x==self.pos.x+self.size.x-1 then if self.resizing.enabled_directions[1][1]and cz then self.resizing.corner=self.pos.ONE:duplicate()self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][-1]and cA then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][0]and not(cz or cA)then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cy=false end elseif formatted_event.x==self.pos.x then if self.resizing.enabled_directions[-1][1]and cz then self.resizing.corner=self.pos.DOWN+self.pos.LEFT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][-1]and cA then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][0]and not(cz or cA)then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cy=false end elseif self.resizing.enabled_directions[0][1]and cz then self.resizing.corner=self.pos.DOWN+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[0][-1]and cA then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false else cy=false end;if not cy then self.resizing.corner=self.pos.ZERO:duplicate()self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end else self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end;self.focussed=true;self.callbacks.onPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.callbacks.onFailedPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG and self.focussed then if self.can_drag then self:drag(formatted_event.x,formatted_event.y)else self:resize(formatted_event.x,formatted_event.y,self.resizing.pinned.x,self.resizing.pinned.y)end;return true elseif formatted_event.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,formatted_event)end else self.focussed=false;self.callbacks.onFocus(self,formatted_event)end;return cx end,drag=function(self,a5,a6)if self.dragging.enabled then local cB=self.pos:duplicate()local cC=h.Vector2.new(a5-self.dragging.from.x,a6-self.dragging.from.y)self.pos=self.pos+cC;self.dragging.from=h.Vector2.new(a5,a6)self.callbacks.onDrag(self,cB.x,cB.y)end end,resize=function(self,a5,a6,cD,cE)if self.resizing.enabled and self.resizing.corner~=self.pos.ZERO then local function cF()self.size.x=h.constrain(self.size.x,self.resizing.min_size.x,self.resizing.max_size.x)self.size.y=h.constrain(self.size.y,self.resizing.min_size.y,self.resizing.max_size.y)end;local cG=h.Vector2.new(a5,a6)local cB=self.pos:duplicate()local cH=self.size:duplicate()if self.resizing.corner==self.pos.ONE then self.size=cG-self.pos+self.pos.ONE;cF()elseif self.resizing.corner==self.pos.ONE*-1 then self.size=self.size+self.pos-cG;cF()local cI=cH-self.size;self.pos=self.pos+cI elseif self.resizing.corner==self.pos.UP+self.pos.RIGHT then self.size.x=cG.x-self.pos.x+1;self.size.y=self.size.y+self.pos.y-cG.y;cF()local cJ=cH.y-self.size.y;self.pos.y=self.pos.y+cJ elseif self.resizing.corner==self.pos.DOWN+self.pos.LEFT then local cK=self.size.x;self.size.x=self.size.x+self.pos.x-cG.x;self.size.y=cG.y-self.pos.y+1;cF()local co=cH.x-self.size.x;self.pos.x=self.pos.x+co end;if cD then self.size.x=cH.x;self.pos.x=cB.x end;if cE then self.size.y=cH.y;self.pos.y=cB.y end;self.callbacks.onResize(self,cB.x,cB.y,cH.x,cH.y)end end,set_elements=function(self,cL)self.elements={}for d,cM in next,cL do table.insert(self.elements,cM)end end,draw_elements=function(self)for d=#self.elements,1,-1 do local cM=self.elements[d]if cM.draw then cM.pos=cM.pos+self.pos-self.pos.ONE;cM:draw()cM.pos=cM.pos-self.pos+self.pos.ONE end end end,event_elements=function(self,formatted_event)local cN=formatted_event;if cN.name==b.TOUCH then cN=k.format_event_table(cN.raw)cN.x,cN.y=cN.x-self.pos.x+1,cN.y-self.pos.y+1 end;local cx=false;for d,cM in next,self.elements do if cM.event then local cO=cM:event(cN)cx=cx or cO;if cO then cN={name=b.DELETED}end end end;return cx end}}bJ.Clock.__index=bJ.Clock;bJ.Label.__index=bJ.Label;bJ.Button.__index=bJ.Button;bJ.Progressbar.__index=bJ.Progressbar;bJ.Memo.__index=bJ.Memo;bJ.Window.__index=bJ.Window;local cP={}cP={new=function(cQ)local cR={draw_priority=b.LOW_PRIORITY,enabled=false,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=bJ.Clock.new(cQ or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}cR.broadcast_clock.WSS=cR;f.set_callback(cR.broadcast_clock,b.ONCLOCK,function(self,formatted_event)rednet.broadcast(b8.frame,self.WSS.protocol)end)setmetatable(cR,cP)return cR end,draw=function(self)if not self.enabled then return false end;self.callbacks.onDraw(self)if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then b8.buffer.background=self.buffer.background;b8.buffer.pixels=self.buffer.pixels end end end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local cS=false;if formatted_event.name==b.REDNET then if formatted_event.protocol==self.protocol then local aY=formatted_event.message;if self.mode==b.HOST then if aY==b.CONNECTION_REQUEST then rednet.send(formatted_event.from,b.OK,self.protocol)self.users[formatted_event.from]=true;cS=true;self.callbacks.onConnect(self,formatted_event)elseif aY==b.DISCONNECTED then self.users[formatted_event.from]=nil;cS=true;self.callbacks.onDisconnect(self,formatted_event)elseif self.events_whitelist[aY.name or"nil"]and self.users[formatted_event.from]and type(aY)=="table"then if aY.raw then os.queueEvent(table.unpack(aY.raw))end;cS=true end elseif self.mode==b.USER then if formatted_event.from==self.host_id then if aY==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;cS=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(aY)=="table"then self.buffer=aY;cS=true end end end end end;if self.mode==b.USER then if formatted_event.name==b.TOUCH then cS=true end;if self.events_whitelist[tostring(formatted_event.name)]then rednet.send(self.host_id,formatted_event,self.protocol)cS=true end elseif self.mode==b.HOST then self.broadcast_clock:event(formatted_event)end;return cS end,use_side=function(self,cT)self.side=cT end,connect=function(self,cU,cV,cW)cV=cV or 2;cW=cW or 10;rednet.open(self.side)self.host_id=cU;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local cX=0;while true do cX=cX+1;local cY={rednet.receive(self.protocol,cV)}if cY[1]==cU and cY[2]==b.OK and cY[3]==self.protocol then return b.OK elseif cX>=cW then local cZ=string.format("Connection timed out on attempt %d after %d ms",cX,cV*1000)if#cY>0 then cZ=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",cX,cV*1000)end;cP:close()error(cZ,2)end end;self.callbacks.onConnect(self,cU)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}cP.__index=cP;local c_={}c_={new=function(d0)local d1={enabled=true,computer_whitelist={},side=b.NONE,mode=b.ALL,password=d0 or b.NONE,protocol="YAGUI-"..a.ver.."_FT",save_dir="/FT",callbacks={onEvent=function()end,onConnect=function()end,onSend=function()end,onReceive=function()end}}setmetatable(d1,c_)return d1 end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;if formatted_event.name==b.REDNET or formatted_event.protocol==self.protocol then if self.mode==b.ALL or self.mode==b.RECEIVE then local cU=formatted_event.from;if self.computer_whitelist[cU]or self.callbacks.onConnect(self,formatted_event)then local aY=formatted_event.message;if type(aY)=="table"and aY.name and aY.content then if aY.psw==self.password then local aZ=fs.getName(tostring(aY.name))local Y=fs.combine(self.save_dir,aZ)if fs.exists(Y)then rednet.send(cU,b.NO,self.protocol)else local d2=tostring(aY.content)if self.callbacks.onReceive(self,formatted_event,cU,aZ,Y,d2)then return true end;local d3=fs.open(Y,"w")if d3 then d3.write(d2)d3.close()rednet.send(cU,b.OK,self.protocol)else rednet.send(cU,b.ERROR,self.protocol)end end else rednet.send(cU,b.NO,self.protocol)end else rednet.send(cU,b.ERROR,self.protocol)end else rednet.send(cU,b.NO,self.protocol)end end end end,send=function(self,d4,d5,d6,d7)if self.mode==b.ALL or self.mode==b.SEND then d6=d6 or fs.getName(d7)d5=d5 or b.NONE;local d3=fs.open(d7,"r")local d2=d3.readAll()d3.close()local aY={psw=d5,name=d6,content=d2}if self.callbacks.onSend(self,formatted_event,aY)then return true end;rednet.send(d4,aY,self.protocol)end end,open=function(self,cT)self.side=cT;rednet.open(cT)end,close=function(self)if rednet.isOpen()then rednet.close(self.side)end end}c_.__index=c_;local d8={}d8={new=function(d9,da)local db={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=d9,EPS_target=da},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=bJ.Clock.new(1/d9),stats_clock=bJ.Clock.new(1),FPS_label=bJ.Label.new(1,1,"1 FPS",colors.white),EPS_label=bJ.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,dc)self.enabled=dc;self.elements.stats_clock.enabled=dc;self.elements.FPS_label.hidden=not dc;self.elements.EPS_label.hidden=not dc end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+h.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}db.elements.loop.stats_clock.stats=db.stats;db.stats.elements=db.elements.loop;f.set_callback(db.elements.loop.stats_clock,b.ONCLOCK,function(self,formatted_event)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)db.stats:enable(false)db.elements.loop.clock.Loop=db;f.set_callback(db.elements.loop.clock,b.ONCLOCK,function(self,formatted_event)self.Loop.callbacks.onClock(self.Loop,formatted_event)self.Loop:draw_elements()self.interval=1/self.Loop.options.FPS_target end)setmetatable(db,d8)return db end,set_monitors=function(self,a_)self.monitors=m.get_monitors(a_)end,set_elements=function(self,cL)self.elements.high_priority={}self.elements.low_priority={}for d,I in next,cL do if I.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,I)else table.insert(self.elements.low_priority,I)end end end,draw_elements=function(self)local function dd(F)for d=#F,1,-1 do local cM=F[d]if cM.draw then cM:draw()end end end;self.callbacks.onDraw(self)local de=b8.screens;b8.screens=self.monitors;dd(self.elements.low_priority)dd(self.elements.high_priority)for d,cM in next,self.elements.loop do if cM.draw then cM:draw()end end;b8:draw()b8.screens=de;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,formatted_event)local function aW(F)for d,cM in next,F do if cM.event then if cM:event(formatted_event)then formatted_event={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,formatted_event)then formatted_event={name=b.DELETED}end;if self.options.stop_on_terminate and formatted_event.name==b.TERMINATE then self:stop()return end;if formatted_event.name==b.TOUCH then local df=false;for dg,b2 in next,self.monitors do if formatted_event.from==dg then df=true;break end end;if not df then formatted_event={name=b.DELETED}end end;aW(self.elements.loop)local dh={}for d,cM in next,self.elements.high_priority do if cM.event then local di=cM:event(formatted_event)if di then formatted_event={name=b.DELETED}if self.elements.high_priority~=cM then table.insert(dh,{element=cM,key=d})end end end end;if#dh>0 then for d,I in next,dh do table.insert(self.elements.high_priority,1,I.element)table.remove(self.elements.high_priority,I.key+#dh)end end;aW(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;bF:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local dj=os.startTimer(1/self.options.EPS_target)local dk;if self.options.raw_mode then dk={os.pullEventRaw()}else dk={os.pullEvent()}end;local formatted_event=k.format_event_table(dk)bF:manage_event(formatted_event)self:event_elements(formatted_event)os.cancelTimer(dj)end;bF:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}d8.__index=d8;setmetatable(h.Vector2,e)setmetatable(h.Vector3,e)setmetatable(cP,e)setmetatable(c_,e)for d,cM in next,bJ do setmetatable(cM,e)end;setmetatable(d8,e)local dl={...}if dl[1]=="help"then local P={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,bN in next,P do m.better_print(term,bN.foreground,bN.background,bN.text)end elseif dl[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif dl[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif dl[1]=="copyright"then local dm={colors.red,colors.yellow,colors.green}local dn=g.split(a.copyright,"\n\n")for d,dp in next,dn do m.better_print(term,dm[d],nil,dp)if d<#dn then read("")end end elseif dl[1]=="setup"then if shell then local dq="YAGUI_PATH"local Y="/"..shell.getRunningProgram()l.set(dq,Y)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(dq),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif dl[1]=="create"then if dl[2]then local Y=shell.resolve(dl[2])if g.get_extension(Y)~="lua"then Y=Y..".lua"end;if fs.exists(Y)then m.better_print(term,colors.red,nil,"PATH: \"/",Y,"\" already exists, please use another path or delete it.")else local d3=fs.open(Y,"w")d3.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")d3.close()m.better_print(term,colors.green,nil,"New project was created at \"/",Y,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif dl[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",dl[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local dr={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=b8,input=bF,WSS=cP,wireless_screen_share=cP,FT=c_,file_transfer=c_,gui_elements=bJ,Loop=d8}for d,I in next,b do dr[d]=I end;return dr