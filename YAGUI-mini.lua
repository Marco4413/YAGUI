--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.18.1",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",DELETED="DELETED",DISCONNECTED="DISCONNECTED",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={}local f={}local g={}local h={}local i={}local j={}local k={}local l={}e={set_callback=function(m,n,o)if n==b.ONSTART then m.callbacks.onStart=o elseif n==b.ONSTOP then m.callbacks.onStop=o elseif n==b.ONDRAW then m.callbacks.onDraw=o elseif n==b.ONPRESS then m.callbacks.onPress=o elseif n==b.ONFAILEDPRESS then m.callbacks.onFailedPress=o elseif n==b.ONTIMEOUT then m.callbacks.onTimeout=o elseif n==b.ONCLOCK then m.callbacks.onClock=o elseif n==b.ONEVENT then m.callbacks.onEvent=o elseif n==b.ONFOCUS then m.callbacks.onFocus=o elseif n==b.ONKEY then m.callbacks.onKey=o elseif n==b.ONCHAR then m.callbacks.onChar=o end end,get_computer_type=function()local p=b.COMPUTER;if turtle then p=b.TURTLE elseif pocket then p=b.POCKET end;return p,term.isColor()end,expect=function(q,...)local r={...}local s="[/%.,]"q=q or"unknown"q=tostring(q)for t=1,#r,2 do local u=tostring(r[t])local v=u:gsub(s,", ")local w=true;local x="If this shows up something went wrong with YAGUI.generic_utils.expect"for y,z in next,f.split(u,s)do local A=r[t+1]if type(A)~=z then x=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",q,math.ceil(t/2),v,type(A))else w=false;break end end;if w then error(x,3)end end;return true end}f={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(B,C)if not C then C=""end;local D=""for d=1,#B do local E=B[d]D=D..tostring(E)if d<#B then D=D..C end end;return D end,split=function(D,C)if not string.find(D,C)then return{D}end;local F={}local G="(.-)"..C.."()"local H;for I,J in string.gfind(D,G)do table.insert(F,I)H=J end;table.insert(F,string.sub(D,H))return F end,compare_versions=function(K,L)local M=f.split(K,".")local N=f.split(L,".")local O=#M;local P=#N;for t=1,math.min(O,P)do if tonumber(M[t])>tonumber(N[t])then return 1 elseif tonumber(M[t])<tonumber(N[t])then return-1 end end;if O>P then return 1 elseif O<P then return-1 end;return 0 end,escape_magic_characters=function(D)for d,Q in next,f.magic_characters do D=D:gsub("[%"..Q.."]",'%%%'..Q)end;return D end,get_extension=function(R)local S,T=R:gsub(".*%.","")if T>0 then return S end;return""end,format_number=function(U,V)U=tostring(U)V=V or 0;local W=U:gsub("(.*)%..*","%1")if V<=0 then return W end;local X=#W+1;local Y=U:sub(X+1,X+V)Y=Y:reverse():gsub("0*(.*)","%1"):reverse()if#Y>0 then return W.."."..Y end;return W end,trim=function(D)return D:gsub("^%s*(.-)%s*$","%1")end}g={Vector2={new=function(Z,_)local a0={x=Z or 0,y=_ or 0}setmetatable(a0,g.Vector2)return a0 end,duplicate=function(self)return g.Vector2.new(self.x,self.y)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a1)return self.x*a1.x+self.y*a1.y end,cross=function(self,a1)return self.x*a1.y-self.y*a1.x end,rotate=function(self,a2)local a3=math.cos(a2)local a4=math.sin(a2)return g.Vector2.new(a3*self.x-a4*self.y,a4*self.x+a3*self.y)end,string=function(self,V)if V then return string.format("(%."..tostring(V).."f; %."..tostring(V).."f)",self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__add=function(self,a1)return g.Vector2.new(self.x+a1.x,self.y+a1.y)end,__sub=function(self,a1)return g.Vector2.new(self.x-a1.x,self.y-a1.y)end,__mul=function(self,U)if type(self)=="number"then return g.Vector2.new(U.x*self,U.y*self)else return g.Vector2.new(self.x*U,self.y*U)end end,__div=function(self,U)return g.Vector2.new(self.x/U,self.y/U)end,__eq=function(self,a1)return self.x==a1.x and self.y==a1.y end,__lt=function(self,a1)return self:length_sq()<a1:length_sq()end,__le=function(self,a1)return self:length_sq()<=a1:length_sq()end},Vector3={new=function(Z,_,a5)local a6={x=Z or 0,y=_ or 0,z=a5 or 0}setmetatable(a6,g.Vector3)return a6 end,duplicate=function(self)return g.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)+math.pow(self.z,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a1)return self.x*a1.x+self.y*a1.y+self.z*a1.z end,cross=function(self,a1)return g.Vector3.new(self.y*a1.z-self.z*a1.y,self.z*a1.x-self.x*a1.z,self.x*a1.y-self.y*a1.x)end,rotate=function(self,a7,a2)local a3=math.cos(a2)return a3*self+math.sin(a2)*a7:cross(self)+(1-a3)*a7:dot(self)*a7 end,string=function(self,V)if V then return string.format("(%."..tostring(V).."f; %."..tostring(V).."f; %."..tostring(V).."f)",self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__add=function(self,a1)return g.Vector3.new(self.x+a1.x,self.y+a1.y,self.z+a1.z)end,__sub=function(self,a1)return g.Vector3.new(self.x-a1.x,self.y-a1.y,self.z-a1.z)end,__mul=function(self,U)if type(self)=="number"then return g.Vector3.new(U.x*self,U.y*self,U.z*self)else return g.Vector3.new(self.x*U,self.y*U,self.z*U)end end,__div=function(self,U)return g.Vector3.new(self.x/U,self.y/U,self.z/U)end,__eq=function(self,a1)return self.x==a1.x and self.y==a1.y and self.z==a1.z end,__lt=function(self,a1)return self:length_sq()<a1:length_sq()end,__le=function(self,a1)return self:length_sq()<=a1:length_sq()end},map=function(E,a8,a9,aa,ab,ac)local ad=(E-a8)/(a9-a8)*(ab-aa)+aa;if ac then return g.constrain(ad,aa,ab)end;return ad end,constrain=function(E,ae,af)return math.min(af,math.max(ae,E))end,round=function(U)return math.floor(U+0.5)end,round_numbers=function(...)local ag={...}local ah={}for d,U in next,ag do table.insert(ah,g.round(U))end;return table.unpack(ah)end,floor_numbers=function(...)local ag={...}local ai={}for d,U in next,ag do table.insert(ai,math.floor(U))end;return table.unpack(ai)end,ceil_numbers=function(...)local ag={...}local aj={}for d,U in next,ag do table.insert(aj,math.ceil(U))end;return table.unpack(aj)end}g.Vector2.__index=g.Vector2;g.Vector3.__index=g.Vector3;g.Vector2.ONE=g.Vector2.new(1,1)g.Vector2.UP=g.Vector2.new(0,-1)g.Vector2.DOWN=g.Vector2.new(0,1)g.Vector2.LEFT=g.Vector2.new(-1,0)g.Vector2.RIGHT=g.Vector2.new(1,0)g.Vector2.ZERO=g.Vector2.new(0,0)g.Vector3.ONE=g.Vector3.new(1,1,1)g.Vector3.UP=g.Vector3.new(0,1,0)g.Vector3.DOWN=g.Vector3.new(0,-1,0)g.Vector3.LEFT=g.Vector3.new(-1,0,0)g.Vector3.RIGHT=g.Vector3.new(1,0,0)g.Vector3.FORWARD=g.Vector3.new(0,0,1)g.Vector3.BACK=g.Vector3.new(0,0,-1)g.Vector3.ZERO=g.Vector3.new(0,0,0)h={has_value=function(B,E)for ak,al in next,B do if al==E then return true,ak end end;return false,nil end,has_key=function(B,d)if B[d]~=nil then return true,B[d]end;return false,nil end,serialise=function(B,am,an,ao,ap,aq,ar,as)local am=am or 0;local aq=aq or"  "local at=0;local ar=ar or"\n"local as=as or" "if not an then aq,ar,as="","",""end;local function au(B)local av=aq:rep(at+1)local aw="{"..ar;local function ax(B)for d,E in next,B do local ay=type(d)local az;if ay=="string"then az=string.format("%q",d)else az=tostring(d)end;if not ap and d=="__index"then E={}end;local aA=type(E)local aB=tostring(E)aw=aw..string.format("%s[%s]%s=%s",av,az,as,as)if aA=="table"then if at<am then at=at+1;aw=aw..au(E)at=at-1 else aw=aw.."{}"end elseif aA=="string"or aA=="function"then aw=aw..string.format("%q",aB)else aw=aw..string.format("%s",aB)end;if next(B,d)then aw=aw..","..ar else aw=aw..ar end end end;local aC=getmetatable(B)if ao and aC then ax(aC)if next(B)then aw=aw:sub(1,#aw-#ar)..","..aw:sub(#aw-#ar+1)end end;ax(B)aw=aw..aq:rep(at).."}"return aw end;return au(B)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize}h.serialize=h.serialise;i={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},color_to_paint=function(aD)return i.colors[aD]end,paint_to_color=function(aE)local aF,aD=h.has_value(i.colors,aE)if aF then return aD end end}j={is_area_pressed=function(aG,aH,Z,_,aI,aJ)if aG>=Z and aG<Z+aI then if aH>=_ and aH<_+aJ then return true end end;return false end,format_event_table=function(aK)local n={}n.name=aK[1]if n.name=="mouse_click"then n.name=b.TOUCH;n.from="terminal"n.button=aK[2]n.x=aK[3]n.y=aK[4]return n elseif n.name=="monitor_touch"then n.name=b.TOUCH;n.from=aK[2]n.button=1;n.x=aK[3]n.y=aK[4]return n elseif n.name=="mouse_drag"then n.name=b.MOUSEDRAG;n.button=aK[2]n.x=aK[3]n.y=aK[4]return n elseif n.name=="mouse_up"then n.name=b.MOUSEUP;n.button=aK[2]n.x=aK[3]n.y=aK[4]return n elseif n.name=="mouse_scroll"then n.name=b.MOUSESCROLL;n.direction=aK[2]n.x=aK[3]n.y=aK[4]return n elseif n.name=="char"then n.name=b.CHAR;n.char=aK[2]return n elseif n.name=="key"then n.name=b.KEY;n.key=aK[2]return n elseif n.name=="key_up"then n.name=b.KEYUP;n.key=aK[2]return n elseif n.name=="paste"then n.name=b.PASTE;n.paste=aK[2]return n end;table.remove(aK,1)n.parameters=aK;return n end}k={_path="/.settings",set=function(aL,E)settings.set(aL,E)settings.save(k._path)end,unset=function(aL)settings.unset(aL)settings.save(k._path)end,get=function(aL)return settings.get(aL)end}l={get_monitors=function(aM)local aN={}for d,aO in next,aM do if aO=="terminal"then aN[aO]=term else if peripheral.getType(aO)=="monitor"then aN[aO]=peripheral.wrap(aO)end end end;return aN end,better_print=function(aP,aQ,aR,...)local aS=f.join({...},"")local aT=aP.getTextColor()local aU=aP.getBackgroundColor()if aQ then aP.setTextColor(aQ)end;if aR then aP.setBackgroundColor(aR)end;print(aS)aP.setTextColor(aT)aP.setBackgroundColor(aU)end,better_clear=function(aP)aP.clear()aP.setCursorPos(1,1)end}local aV={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,Z,_)Z=tostring(Z)_=tostring(_)if self.pixels[Z]then if self.pixels[Z][_]then return true end end;return false end,get_pixel=function(self,Z,_)Z=tostring(Z)_=tostring(_)if self:is_pixel_custom(Z,_)then return self.pixels[Z][_]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,Z,_,char,aQ,aR)Z=tostring(Z)_=tostring(_)local aW=self:get_pixel(Z,_)if char and#char==1 then aW.char=char end;aW.foreground=aQ or aW.background;aW.background=aR or aW.background;if not self.pixels[Z]then self.pixels[Z]={}end;self.pixels[Z][_]=aW end,clear=function(self)self.pixels={}end},set_screens=function(self,aX)self.screens=l.get_monitors(aX)end,set_monitors=function(self,aM)self:set_screens(aM)end,clear=function(self)self.buffer:clear()end,draw=function(self)local aY=self.screens;local aZ=self.buffer;for a_,b0 in next,aY do local b1,b2=b0.getCursorPos()local aI,aJ=b0.getSize()for _=1,aJ do local b3={text="",background="",foreground=""}for Z=1,aI do local aW=aZ:get_pixel(Z,_)b3.text=b3.text..aW.char;b3.background=b3.background..i.colors[aW.background]b3.foreground=b3.foreground..i.colors[aW.foreground]end;b0.setCursorPos(1,_)b0.blit(b3.text,b3.foreground,b3.background)end;b0.setCursorPos(b1,b2)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,Z,_,aD)self.buffer:set_pixel(Z,_," ",aD,aD)end,write=function(self,Z,_,b4,aQ,aR)for b5=0,#b4-1 do char=b4:sub(b5+1,b5+1)self.buffer:set_pixel(Z+b5,_,char,aQ,aR)end end,rectangle=function(self,Z,_,aI,aJ,aD)for b5=0,aI-1 do for b6=0,aJ-1 do self:point(Z+b5,_+b6,aD)end end end,line=function(self,b7,b8,b9,ba,aD)local function bb(b7,b8,b9,ba)local bc=1;if b7>b9 then bc=-1 end;local bd=b9-b7;local be=ba-b8;local bf=1;if be<0 then bf=-1;be=-be end;local bg=2*be-bd;local _=b8;for Z=b7,b9,bc do self:point(Z,_,aD)if bg>0 then _=_+bf;bg=bg-2*bd end;bg=bg+2*be end end;local function bh(b7,b8,b9,ba)local bc=1;if b8>ba then bc=-1 end;local bd=b9-b7;local be=ba-b8;local bi=1;if bd<0 then bi=-1;bd=-bd end;local bg=2*bd-be;local Z=b7;for _=b8,ba,bc do self:point(Z,_,aD)if bg>0 then Z=Z+bi;bg=bg-2*be end;bg=bg+2*bd end end;if math.abs(ba-b8)<math.abs(b9-b7)then if b7>b9 then bb(b9,ba,b7,b8)else bb(b7,b8,b9,ba)end else if b8>ba then bh(b9,ba,b7,b8)else bh(b7,b8,b9,ba)end end end,circle=function(self,bj,bk,bl,aD)local bm=bl*bl;self:point(bj,bk+bl,aD)self:point(bj,bk-bl,aD)self:point(bj+bl,bk,aD)self:point(bj-bl,bk,aD)local Z=1;local _=math.floor(math.sqrt(bm-1)+0.5)while Z<_ do self:point(bj+Z,bk+_,aD)self:point(bj+Z,bk-_,aD)self:point(bj-Z,bk+_,aD)self:point(bj-Z,bk-_,aD)self:point(bj+_,bk+Z,aD)self:point(bj+_,bk-Z,aD)self:point(bj-_,bk+Z,aD)self:point(bj-_,bk-Z,aD)Z=Z+1;_=math.floor(math.sqrt(bm-Z*Z)+0.5)end;if Z==_ then self:point(bj+Z,bk+_,aD)self:point(bj+Z,bk-_,aD)self:point(bj-Z,bk+_,aD)self:point(bj-Z,bk-_,aD)end end}local bn={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,bo,d)if self.pressed_keys[d]then if bo then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,bp,...)local keys={...}if not(#keys>0)then return false end;for bq,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if bp then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for bq,d in next,keys do self:remove_key(d)end end,manage_event=function(self,br)if br.name==b.KEY then self:add_key(br.key)elseif br.name==b.KEYUP then self:remove_key(br.key)end end}local bs={}bs={side=nil,protocol="YAGUI-"..a.ver.."_WSS",host_prefix="_Host:",default_timeout=0.5,open=function(self,bt)rednet.open(bt)self.side=bt end,close=function(self)rednet.close(self.side)self.side=nil end,server={root={},servername=nil,hostname=nil,host=function(self,bu)if not bu then bu=os.getComputerID()end;bu=tostring(bu)local bv=self.root.protocol..self.root.host_prefix..bu;if rednet.lookup(bv,bu)then return false,bu end;rednet.host(bv,bu)self.servername=bv;self.hostname=bu;return true,bu end,unhost=function(self)rednet.broadcast(b.DISCONNECTED,self.servername)rednet.unhost(self.servername,self.hostname)self.servername=nil;self.hostname=nil end,broadcast=function(self)rednet.broadcast(aV.frame,self.servername)end},client={root={},servername=nil,host_id=nil,connect=function(self,bu)bu=tostring(bu)local bv=self.root.protocol..self.root.host_prefix..bu;local bw=rednet.lookup(bv,bu)if not bw then return false,bu end;self.servername=bv;self.host_id=bw;return true,bu end,disconnect=function(self)self.servername=nil;self.host_id=nil end,listen=function(self,bx)if not bx then bx=self.root.default_timeout end;local by={rednet.receive(self.servername,bx)}if by[1]==self.host_id then local aZ=by[2]if not aZ then return false end;if aZ==b.DISCONNECTED then return aZ end;aV.buffer.background=aZ.background;aV.buffer.pixels=aZ.pixels;return true end;return false end}}bs.server.root=bs;bs.client.root=bs;local bz={}bz={Clock={new=function(bA)local bB={enabled=true,oneshot=false,clock=os.clock(),interval=bA,callbacks={onClock=function()end}}setmetatable(bB,bz.Clock)return bB end,event=function(self,br)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,br)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(Z,_,b4,aQ,aR)local bC={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_CENTER,text=b4,pos=g.Vector2.new(Z,_),colors={foreground=aQ,background=aR},callbacks={onDraw=function()end}}setmetatable(bC,bz.Label)return bC end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bD=f.split(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,bE in next,bD do aV:write(self.pos.x,self.pos.y+d-1,bE,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then local bF=0;for d,bE in next,bD do if d==1 then bF=math.floor(#bE/2)aV:write(self.pos.x,self.pos.y,bE,self.colors.foreground,self.colors.background)else aV:write(self.pos.x+bF-math.floor(#bE/2),self.pos.y+d-1,bE,self.colors.foreground,self.colors.background)end end end end},Button={new=function(Z,_,aI,aJ,b4,aQ,bG,bH)local bI={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=b4,pos=g.Vector2.new(Z,_),size=g.Vector2.new(aI,aJ),timed={enabled=false,clock=bz.Clock.new(0.5)},colors={foreground=aQ,active_background=bG,unactive_background=bH},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}bI.timed.clock.binded_button=bI;bI.timed.clock.oneshot=true;bI.timed.clock:stop()e.set_callback(bI.timed.clock,b.ONCLOCK,function(self,br)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,br)self.binded_button.callbacks.onTimeout(self.binded_button,br)end)setmetatable(bI,bz.Button)return bI end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then aV:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else aV:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local bD=f.split(self.text,"\n")local bJ=math.floor((self.size.y-#bD)/2)+self.pos.y;for b6=0,#bD-1 do local bE=bD[b6+1]local bK;if self.text_alignment==b.ALIGN_LEFT then bK=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then bK=math.floor((self.size.x-#bE)/2)+self.pos.x end;aV:write(bK,bJ+b6,bE,self.colors.foreground)end end,event=function(self,br)if self.hidden then return false end;if br.name==b.TOUCH then if j.is_area_pressed(br.x,br.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(br)return true else self.callbacks.onFailedPress(self,br)end elseif bn:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(br)end;if self.timed.enabled then self.timed.clock:event(br)end end,press=function(self,br)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,br)end else self.active=not self.active;self.callbacks.onPress(self,br)end end},Progressbar={new=function(Z,_,aI,aJ,bL,ae,af,aQ,bM,bN)local bO={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=g.Vector2.new(Z,_),size=g.Vector2.new(aI,aJ),value={max=af,min=ae,current=bL,draw_percentage=true,percentage_precision=2},colors={foreground=aQ,filled_background=bM,unfilled_background=bN},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(bO,bz.Progressbar)return bO end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bP=g.map(self.value.current,self.value.min,self.value.max,0,1,true)local bQ=math.floor(self.size.x*bP)aV:rectangle(self.pos.x,self.pos.y,bQ,self.size.y,self.colors.filled_background)aV:rectangle(self.pos.x+bQ,self.pos.y,self.size.x-bQ,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local bR=f.format_number(bP*100,self.value.percentage_precision).."%"local bS=math.floor((self.size.x-#bR)/2)+self.pos.x;local bJ=math.floor((self.size.y-1)/2)+self.pos.y;aV:write(bS,bJ,bR,self.colors.foreground)end end,event=function(self,br)if self.hidden then return false end;if br.name==b.TOUCH then if j.is_area_pressed(br.x,br.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,br)end end end,set=function(self,E)local bT=g.constrain(E,self.value.min,self.value.max)self.value.current=bT end},Memo={new=function(Z,_,aI,aJ,aQ,aR)local bU={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=g.Vector2.new(Z,_),size=g.Vector2.new(aI,aJ),editable=true,lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=bz.Clock.new(0.5),pos=g.Vector2.new(1,1)},limits=g.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=aQ,background=aR,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end}}bU.cursor.blink.binded_cursor=bU.cursor;e.set_callback(bU.cursor.blink,b.ONCLOCK,function(self,br)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(bU,bz.Memo)return bU end,draw=function(self)if self.hidden then return end;aV:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local bV=self.cursor.pos.x-self.first_visible_char;local bW=self.cursor.pos.y-self.first_visible_line;if bV>=self.size.x then self.first_visible_char=self.first_visible_char+bV-self.size.x+1;bV=self.cursor.pos.x-self.first_visible_char-1 elseif bV<1 then self.first_visible_char=self.first_visible_char+bV;bV=0 end;if bW>=self.size.y then self.first_visible_line=self.first_visible_line+bW-self.size.y+1;bW=self.cursor.pos.y-self.first_visible_line-1 elseif bW<1 then self.first_visible_line=self.first_visible_line+bW;bW=0 end;for _=1,self.size.y do local bE=self.lines[_+self.first_visible_line-1]or""local bX=bE:sub(self.first_visible_char,self.first_visible_char+self.size.x-1)aV:write(self.pos.x,self.pos.y+_-1,bX,self.colors.foreground)end;if self.cursor.visible then aV:write(bV+self.pos.x,bW+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,br)if self.hidden then return false end;if not self.editable then return false end;if br.name==b.TOUCH then if j.is_area_pressed(br.x,br.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then local Z=br.x-self.pos.x;local _=br.y-self.pos.y;self:set_cursor(Z+self.first_visible_char,_+self.first_visible_line)self:focus(true,br)self.callbacks.onPress(self,br)return true else self:focus(false,br)self.callbacks.onFailedPress(self,br)return false end elseif br.name==b.DELETED then self:focus(false,br)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,br)if br.name==b.PASTE then self:write(br.paste)elseif br.name==b.CHAR then if self.callbacks.onChar(self,br)then return true end;self:write(br.char)elseif br.name==b.KEY then if self.callbacks.onKey(self,br)then return true end;if br.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)elseif br.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)elseif br.key==b.KEY_RIGHT then local bE=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#bE+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end elseif br.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local bY=self.lines[self.cursor.pos.y-1]self:set_cursor(#bY+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif br.key==b.KEY_BACKSPACE then local bE=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local bZ=#self.lines[self.cursor.pos.y-1]+1;local b_=self.cursor.pos.y-1;self:set_cursor(bZ,b_)self:write(bE)self:set_cursor(bZ,b_)end else self.lines[self.cursor.pos.y]=bE:sub(1,self.cursor.pos.x-2)..bE:sub(self.cursor.pos.x)self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif br.key==b.KEY_DELETE then local bE=self.lines[self.cursor.pos.y]local c0=bE:sub(self.cursor.pos.x)if#c0>0 then self.lines[self.cursor.pos.y]=bE:sub(1,self.cursor.pos.x-1)..bE:sub(self.cursor.pos.x+1)else local c1=self.lines[self.cursor.pos.y+1]if c1 then local bZ=self.cursor.pos.x;local b_=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(c1)self:set_cursor(bZ,b_)end end elseif br.key==b.KEY_ENTER then self:write("\n")elseif br.key==b.KEY_TAB then self:write("  ")end elseif br.name==b.MOUSESCROLL then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+br.direction)end;return true end end,focus=function(self,c2,br)if c2 then self.focussed=true;self.callbacks.onFocus(self,br)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,br)end end,set_cursor=function(self,bZ,b_,c3)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then b_=g.constrain(b_,1,self.limits.y)end;if c3 then for _=#self.lines+1,b_ do if not self.lines[_]then self.lines[_]=""end end else b_=g.constrain(b_,1,#self.lines)end;bZ=g.constrain(bZ,1,#self.lines[b_]+1)self.cursor.pos=g.Vector2.new(bZ,b_)end,write=function(self,...)local b4=f.join({...},"")local bD=f.split(b4,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local G="[^"..f.escape_magic_characters(f.join(self.whitelist,"")).."]"for d,bE in next,bD do bD[d]=bE:gsub(G,"")end elseif#self.blacklist>0 then local G="["..f.escape_magic_characters(f.join(self.blacklist,"")).."]"for d,bE in next,bD do bD[d]=bE:gsub(G,"")end end;if self.limits.y>0 then for _=1,#self.lines+#bD-1-self.limits.y do table.remove(bD)end;if#bD==0 then return end end;if#bD>1 then for c4,bE in next,bD do if c4==1 then local c5=self.lines[self.cursor.pos.y]local c6=c5:sub(1,self.cursor.pos.x-1)local c0=c5:sub(self.cursor.pos.x)local c7=bD[#bD]if self.limits.x>0 then bE=bE:sub(1,self.limits.x-#c6)c7=c7:sub(1,self.limits.x-#c0)end;self.lines[self.cursor.pos.y]=c6 ..bE;self:set_cursor(1,self.cursor.pos.y+1,true)table.insert(self.lines,self.cursor.pos.y,c7 ..c0)self:set_cursor(#c7+1,self.cursor.pos.y)elseif c4==#bD then break else if self.limits.x>0 then bE=bE:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,bE)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local c5=self.lines[self.cursor.pos.y]local c6=c5:sub(1,self.cursor.pos.x-1)local c0=c5:sub(self.cursor.pos.x)if self.limits.x>0 then bD[1]=bD[1]:sub(1,self.limits.x-(#c6+#c0))end;self.lines[self.cursor.pos.y]=c6 ..bD[1]..c0;self:set_cursor(self.cursor.pos.x+#bD[1],self.cursor.pos.y)end end,print=function(self,...)local b4=f.join({...},"\n").."\n"self:write(b4)end,clear=function(self)self.lines={""}self:set_cursor(1,1)end},Window={new=function(Z,_,aI,aJ,aR,c8)local c9={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=g.Vector2.new(Z,_),size=g.Vector2.new(aI,aJ),drag_options={enabled=true,from=g.Vector2.new(1,1)},shadow={enabled=c8,offset=g.Vector2.new(1,1)},elements={},colors={background=aR,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end}}setmetatable(c9,bz.Window)return c9 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then aV:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;aV:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,br)if self.hidden then return false end;local ca=self:event_elements(br)if not ca then if br.name==b.TOUCH then if j.is_area_pressed(br.x,br.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=g.Vector2.new(br.x,br.y)self.focussed=true;self.callbacks.onPress(self,br)self.callbacks.onFocus(self,br)return true else self.focussed=false;self.callbacks.onFailedPress(self,br)self.callbacks.onFocus(self,br)end elseif br.name==b.MOUSEDRAG and self.focussed then self:drag(br.x,br.y)return true elseif br.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,br)end else self.focussed=false;self.callbacks.onFocus(self,br)end;return ca end,drag=function(self,Z,_)if self.drag_options.enabled then local cb=g.Vector2.new(Z-self.drag_options.from.x,_-self.drag_options.from.y)self.pos=self.pos+cb;for d,cc in next,self.elements do if cc.pos then cc.pos=cc.pos+cb end end;self.drag_options.from=g.Vector2.new(Z,_)end end,set_elements=function(self,cd,ce)self.elements={}for d,cc in next,cd do if ce then cc.pos=self.pos+cc.pos-g.Vector2.ONE end;table.insert(self.elements,cc)end end,draw_elements=function(self)for d=#self.elements,1,-1 do local cc=self.elements[d]if cc.draw then cc:draw()end end end,event_elements=function(self,br)local ca=false;for d,cc in next,self.elements do if cc.event then local cf=cc:event(br)ca=ca or cf;if cf then br={name=b.DELETED}end end end;return ca end}}bz.Clock.__index=bz.Clock;bz.Label.__index=bz.Label;bz.Button.__index=bz.Button;bz.Progressbar.__index=bz.Progressbar;bz.Memo.__index=bz.Memo;bz.Window.__index=bz.Window;local cg={}cg={new=function(ch,ci)local cj={options={enabled=false,FPS_target=ch,EPS_target=ci},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=bz.Clock.new(1/ch),stats_clock=bz.Clock.new(1),FPS_label=bz.Label.new(1,1,"1 FPS",colors.white),EPS_label=bz.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=g.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,ck)self.enabled=ck;self.elements.stats_clock.enabled=ck;self.elements.FPS_label.hidden=not ck;self.elements.EPS_label.hidden=not ck end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+g.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}cj.elements.loop.stats_clock.stats=cj.stats;cj.stats.elements=cj.elements.loop;e.set_callback(cj.elements.loop.stats_clock,b.ONCLOCK,function(self,br)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)cj.stats:enable(false)setmetatable(cj,cg)return cj end,set_monitors=function(self,aM)self.monitors=l.get_monitors(aM)end,set_elements=function(self,cd)self.elements.high_priority={}self.elements.low_priority={}for d,E in next,cd do if E.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,E)else table.insert(self.elements.low_priority,E)end end end,draw_elements=function(self)local function cl(B)for d=#B,1,-1 do local cc=B[d]if cc.draw then cc:draw()end end end;self.callbacks.onDraw(self)local cm=aV.screens;aV.screens=self.monitors;cl(self.elements.low_priority)cl(self.elements.high_priority)for d,cc in next,self.elements.loop do if cc.draw then cc:draw()end end;aV:draw()aV.screens=cm;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,br)local function aK(B)for d,cc in next,B do if cc.event then if cc:event(br)then br={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,br)then br={name=b.DELETED}end;if br.name==b.TOUCH then local cn=false;for co,aP in next,self.monitors do if br.from==co then cn=true;break end end;if not cn then br={name=b.DELETED}end end;aK(self.elements.loop)local cp={}for d,cc in next,self.elements.high_priority do if cc.event then local cq=cc:event(br)if cq then br={name=b.DELETED}if self.elements.high_priority~=cc then table.insert(cp,{element=cc,key=d})end end end end;if#cp>0 then for d,E in next,cp do table.insert(self.elements.high_priority,1,E.element)table.remove(self.elements.high_priority,E.key+#cp)end end;aK(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;bn:reset()e.set_callback(self.elements.loop.clock,b.ONCLOCK,function(cr,br)self.callbacks.onClock(self,br)self:draw_elements()cr.interval=1/self.options.FPS_target end)self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local cs=os.startTimer(1/self.options.EPS_target)local ct={os.pullEvent()}local br=j.format_event_table(ct)bn:manage_event(br)self:event_elements(br)os.cancelTimer(cs)end;bn:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}cg.__index=cg;local cu={...}if cu[1]=="help"then local bD={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,bE in next,bD do l.better_print(term,bE.foreground,bE.background,bE.text)end elseif cu[1]=="info"then l.better_print(term,colors.red,nil,"Library Version: ",a.ver)l.better_print(term,colors.yellow,nil,"Library Author: ",a.author)l.better_print(term,colors.green,nil,"Library Website: ",a.website)l.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif cu[1]=="ver"then l.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif cu[1]=="copyright"then local cv={colors.red,colors.yellow,colors.green}local cw=f.split(a.copyright,"\n\n")for d,cx in next,cw do l.better_print(term,cv[d],nil,cx)if d<#cw then read("")end end elseif cu[1]=="setup"then if shell then local cy="YAGUI_PATH"local R="/"..shell.getRunningProgram()k.set(cy,R)l.better_print(term,colors.green,nil,"Lib path was set to \"",k.get(cy),"\".")else l.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif cu[1]=="create"then if cu[2]then local R=shell.resolve(cu[2])local aL=fs.getName(R):lower()if f.get_extension(R)~="lua"then R=R..".lua"end;if fs.exists(R)then l.better_print(term,colors.red,nil,"PATH: \"/",R,"\" already exists, please use another path or delete it.")else local cz=fs.open(R,"w")cz.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")cz.close()l.better_print(term,colors.green,nil,"New project was created at \"/",R,"\".")end else l.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif cu[1]then l.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",cu[1],"\"")l.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local cA={info=a,generic_utils=e,string_utils=f,math_utils=g,table_utils=h,color_utils=i,event_utils=j,setting_utils=k,monitor_utils=l,screen_buffer=aV,input=bn,WSS=bs,wireless_screen_share=bs,gui_elements=bz,Loop=cg}for d,E in next,b do cA[d]=E end;return cA