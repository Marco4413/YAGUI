--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.9",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://yagui.readthedocs.io/en/latest/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",DELETED="DELETED",DISCONNECTED="DISCONNECTED",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2}for c,d in pairs(keys)do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={set_callback=function(f,g,h)if g==b.ONSTART then f.callbacks.onStart=h elseif g==b.ONSTOP then f.callbacks.onStop=h elseif g==b.ONDRAW then f.callbacks.onDraw=h elseif g==b.ONPRESS then f.callbacks.onPress=h elseif g==b.ONFAILEDPRESS then f.callbacks.onFailedPress=h elseif g==b.ONTIMEOUT then f.callbacks.onTimeout=h elseif g==b.ONCLOCK then f.callbacks.onClock=h elseif g==b.ONEVENT then f.callbacks.onEvent=h elseif g==b.ONFOCUS then f.callbacks.onFocus=h elseif g==b.ONKEY then f.callbacks.onKey=h elseif g==b.ONCHAR then f.callbacks.onChar=h end end,get_computer_type=function()local i=b.COMPUTER;if turtle then i=b.TURTLE elseif pocket then i=b.POCKET end;return i,term.isColor()end}local j={}j={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(k,l)if not l then l=""end;local m=""for d=1,#k do local n=k[d]m=m..tostring(n)if d<#k then m=m..l end end;return m end,split=function(m,l)local k={}while true do local o=m:find(l)if o then table.insert(k,m:sub(1,o-1))m=m:sub(o+1)else table.insert(k,m)break end end;return k end,compare_versions=function(p,q)local r=j.split(p,".")local s=j.split(q,".")local t=#r;local u=#s;for v=1,math.min(t,u)do if tonumber(r[v])>tonumber(s[v])then return 1 elseif tonumber(r[v])<tonumber(s[v])then return-1 end end;if t>u then return 1 elseif t<u then return-1 end;return 0 end,escape_magic_characters=function(m)for d,w in pairs(j.magic_characters)do m=m:gsub("[%"..w.."]",'%%%'..w)end;return m end,get_extension=function(x)local y,z=x:gsub(".*%.","")if z>0 then return y end;return""end}local A={}A={Vector2={new=function(B,C)local D={x=B or 0,y=C or 0}setmetatable(D,A.Vector2)return D end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,__tostring=function(self)return string.format("(%d; %d)",self.x,self.y)end,__add=function(self,E)return A.Vector2.new(self.x+E.x,self.y+E.y)end,__sub=function(self,E)return A.Vector2.new(self.x-E.x,self.y-E.y)end,__mul=function(self,F)return A.Vector2.new(self.x*F,self.y*F)end,__div=function(self,F)return A.Vector2.new(self.x/F,self.y/F)end,__eq=function(self,E)return self:length_sq()==E:length_sq()end,__lt=function(self,E)return self:length_sq()<E:length_sq()end,__le=function(self,E)return self:length_sq()<=E:length_sq()end},map=function(n,G,H,I,J,K)local L=(n-G)/(H-G)*(J-I)+I;if K then return A.constrain(L,I,J)end;return L end,constrain=function(n,M,N)return math.min(N,math.max(M,n))end}A.Vector2.__index=A.Vector2;A.Vector2.ONE=A.Vector2.new(1,1)A.Vector2.UP=A.Vector2.new(0,-1)A.Vector2.DOWN=A.Vector2.new(0,1)A.Vector2.LEFT=A.Vector2.new(-1,0)A.Vector2.RIGHT=A.Vector2.new(1,0)A.Vector2.ZERO=A.Vector2.new(0,0)local O={has_value=function(k,n)for P,Q in pairs(k)do if Q==n then return true,P end end;return false,nil end,has_key=function(k,d)if k[d]~=nil then return true,k[d]end;return false,nil end}local R={}R={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},color_to_paint=function(S)return R.colors[S]end,paint_to_color=function(T)local U,S=O.has_value(R.colors,T)if U then return S end end}local V={is_area_pressed=function(W,X,B,C,Y,Z)if W>=B and W<B+Y then if X>=C and X<C+Z then return true end end;return false end,format_event_table=function(_)local g={}g.name=_[1]if g.name=="mouse_click"then g.name=b.TOUCH;g.from="terminal"g.button=_[2]g.x=_[3]g.y=_[4]return g elseif g.name=="monitor_touch"then g.name=b.TOUCH;g.from=_[2]g.button=1;g.x=_[3]g.y=_[4]return g elseif g.name=="mouse_drag"then g.name=b.MOUSEDRAG;g.button=_[2]g.x=_[3]g.y=_[4]return g elseif g.name=="mouse_up"then g.name=b.MOUSEUP;g.button=_[2]g.x=_[3]g.y=_[4]return g elseif g.name=="mouse_scroll"then g.name=b.MOUSESCROLL;g.direction=_[2]g.x=_[3]g.y=_[4]return g elseif g.name=="char"then g.name=b.CHAR;g.char=_[2]return g elseif g.name=="key"then g.name=b.KEY;g.key=_[2]return g elseif g.name=="key_up"then g.name=b.KEYUP;g.key=_[2]return g elseif g.name=="paste"then g.name=b.PASTE;g.paste=_[2]return g end;table.remove(_,1)g.parameters=_;return g end}local a0={_path="/.settings",set=function(self,a1,n)settings.set(a1,n)settings.save(self._path)end,unset=function(self,a1)settings.unset(a1)settings.save(self._path)end,get=function(a1)return settings.get(a1)end}local a2={get_monitors=function(a3)local a4={}for d,a5 in pairs(a3)do if a5=="terminal"then a4[a5]=term else if peripheral.getType(a5)=="monitor"then a4[a5]=peripheral.wrap(a5)end end end;return a4 end,better_print=function(a6,a7,a8,...)local a9=j.join({...},"")local aa=a6.getTextColor()local ab=a6.getBackgroundColor()if a7 then a6.setTextColor(a7)end;if a8 then a6.setBackgroundColor(a8)end;print(a9)a6.setTextColor(aa)a6.setBackgroundColor(ab)end,better_clear=function(a6)a6.clear()a6.setCursorPos(1,1)end}local ac={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,B,C)B=tostring(B)C=tostring(C)if self.pixels[B]then if self.pixels[B][C]then return true end end;return false end,get_pixel=function(self,B,C)B=tostring(B)C=tostring(C)if self:is_pixel_custom(B,C)then return self.pixels[B][C]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,B,C,char,a7,a8)B=tostring(B)C=tostring(C)local ad=self:get_pixel(B,C)if char and#char==1 then ad.char=char end;ad.foreground=a7 or ad.background;ad.background=a8 or ad.background;if not self.pixels[B]then self.pixels[B]={}end;self.pixels[B][C]=ad end,clear=function(self)self.pixels={}end},set_screens=function(self,ae)self.screens=a2.get_monitors(ae)end,set_monitors=function(self,a3)self:set_screens(a3)end,clear=function(self)self.buffer:clear()end,draw=function(self)local af=self.screens;local ag=self.buffer;for ah,ai in pairs(af)do local aj,ak=ai.getCursorPos()local Y,Z=ai.getSize()for C=1,Z do local al={text="",background="",foreground=""}for B=1,Y do local ad=ag:get_pixel(B,C)al.text=al.text..ad.char;al.background=al.background..R.colors[ad.background]al.foreground=al.foreground..R.colors[ad.foreground]end;ai.setCursorPos(1,C)ai.blit(al.text,al.foreground,al.background)end;ai.setCursorPos(aj,ak)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,B,C,S)self.buffer:set_pixel(B,C," ",S,S)end,write=function(self,B,C,am,a7,a8)for an=0,#am-1 do char=am:sub(an+1,an+1)self.buffer:set_pixel(B+an,C,char,a7,a8)end end,rectangle=function(self,B,C,Y,Z,S)for an=0,Y-1 do for ao=0,Z-1 do self:point(B+an,C+ao,S)end end end,line=function(self,ap,aq,ar,as,S)local function at(ap,aq,ar,as)local au=1;if ap>ar then au=-1 end;local av=ar-ap;local aw=as-aq;local ax=1;if aw<0 then ax=-1;aw=-aw end;local ay=2*aw-av;local C=aq;for B=ap,ar,au do self:point(B,C,S)if ay>0 then C=C+ax;ay=ay-2*av end;ay=ay+2*aw end end;local function az(ap,aq,ar,as)local au=1;if aq>as then au=-1 end;local av=ar-ap;local aw=as-aq;local aA=1;if av<0 then aA=-1;av=-av end;local ay=2*av-aw;local B=ap;for C=aq,as,au do self:point(B,C,S)if ay>0 then B=B+aA;ay=ay-2*aw end;ay=ay+2*av end end;if math.abs(as-aq)<math.abs(ar-ap)then if ap>ar then at(ar,as,ap,aq)else at(ap,aq,ar,as)end else if aq>as then az(ar,as,ap,aq)else az(ap,aq,ar,as)end end end,circle=function(self,aB,aC,aD,S)local aE=aD*aD;self:point(aB,aC+aD,S)self:point(aB,aC-aD,S)self:point(aB+aD,aC,S)self:point(aB-aD,aC,S)local B=1;local C=math.floor(math.sqrt(aE-1)+0.5)while B<C do self:point(aB+B,aC+C,S)self:point(aB+B,aC-C,S)self:point(aB-B,aC+C,S)self:point(aB-B,aC-C,S)self:point(aB+C,aC+B,S)self:point(aB+C,aC-B,S)self:point(aB-C,aC+B,S)self:point(aB-C,aC-B,S)B=B+1;C=math.floor(math.sqrt(aE-B*B)+0.5)end;if B==C then self:point(aB+B,aC+C,S)self:point(aB+B,aC-C,S)self:point(aB-B,aC+C,S)self:point(aB-B,aC-C,S)end end}local aF={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,aG,d)if self.pressed_keys[d]then if aG then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,aH,...)local keys={...}if not(#keys>0)then return false end;for aI,d in pairs(keys)do if not self:is_key_pressed(false,d)then return false end end;if aH then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for aI,d in pairs(keys)do self:remove_key(d)end end,manage_event=function(self,aJ)if aJ.name==b.KEY then self:add_key(aJ.key)elseif aJ.name==b.KEYUP then self:remove_key(aJ.key)end end}local aK={}aK={side=nil,protocol="YAGUI-"..a.ver.."_WSS",host_prefix="_Host:",default_timeout=0.5,open=function(self,aL)rednet.open(aL)self.side=aL end,close=function(self)rednet.close(self.side)self.side=nil end,server={root={},servername=nil,hostname=nil,host=function(self,aM)if not aM then aM=os.getComputerID()end;aM=tostring(aM)local aN=self.root.protocol..self.root.host_prefix..aM;if rednet.lookup(aN,aM)then return false,aM end;rednet.host(aN,aM)self.servername=aN;self.hostname=aM;return true,aM end,unhost=function(self)rednet.broadcast(b.DISCONNECTED,self.servername)rednet.unhost(self.servername,self.hostname)self.servername=nil;self.hostname=nil end,broadcast=function(self)rednet.broadcast(ac.frame,self.servername)end},client={root={},servername=nil,host_id=nil,connect=function(self,aM)aM=tostring(aM)local aN=self.root.protocol..self.root.host_prefix..aM;local aO=rednet.lookup(aN,aM)if not aO then return false,aM end;self.servername=aN;self.host_id=aO;return true,aM end,disconnect=function(self)self.servername=nil;self.host_id=nil end,listen=function(self,aP)if not aP then aP=self.root.default_timeout end;local aQ={rednet.receive(self.servername,aP)}if aQ[1]==self.host_id then local ag=aQ[2]if not ag then return false end;if ag==b.DISCONNECTED then return ag end;ac.buffer.background=ag.background;ac.buffer.pixels=ag.pixels;return true end;return false end}}aK.server.root=aK;aK.client.root=aK;local aR={}aR={Clock={new=function(aS)local aT={enabled=true,oneshot=false,clock=os.clock(),interval=aS,callbacks={onClock=function()end}}setmetatable(aT,aR.Clock)return aT end,event=function(self,aJ)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,aJ)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(B,C,am,a7,a8)local aU={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_CENTER,text=am,pos=A.Vector2.new(B,C),colors={foreground=a7,background=a8},callbacks={onDraw=function()end}}setmetatable(aU,aR.Label)return aU end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local aV=j.split(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,aW in pairs(aV)do ac:write(self.pos.x,self.pos.y+d-1,aW,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then local aX=0;for d,aW in pairs(aV)do if d==1 then aX=math.floor(#aW/2)ac:write(self.pos.x,self.pos.y,aW,self.colors.foreground,self.colors.background)else ac:write(self.pos.x+aX-math.floor(#aW/2),self.pos.y+d-1,aW,self.colors.foreground,self.colors.background)end end end end},Button={new=function(B,C,Y,Z,am,a7,aY,aZ)local a_={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=am,pos=A.Vector2.new(B,C),size=A.Vector2.new(Y,Z),timed={enabled=false,clock=aR.Clock.new(0.5)},colors={foreground=a7,active_background=aY,unactive_background=aZ},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}a_.timed.clock.binded_button=a_;a_.timed.clock.oneshot=true;a_.timed.clock:stop()e.set_callback(a_.timed.clock,b.ONCLOCK,function(self,aJ)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,aJ)self.binded_button.callbacks.onTimeout(self.binded_button,aJ)end)setmetatable(a_,aR.Button)return a_ end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then ac:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else ac:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local aV=j.split(self.text,"\n")local b0=math.floor((self.size.y-#aV)/2)+self.pos.y;for ao=0,#aV-1 do local aW=aV[ao+1]local b1;if self.text_alignment==b.ALIGN_LEFT then b1=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then b1=math.floor((self.size.x-#aW)/2)+self.pos.x end;ac:write(b1,b0+ao,aW,self.colors.foreground)end end,event=function(self,aJ)if self.hidden then return false end;if aJ.name==b.TOUCH then if V.is_area_pressed(aJ.x,aJ.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(aJ)return true else self.callbacks.onFailedPress(self,aJ)end elseif aF:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(aJ)end;if self.timed.enabled then self.timed.clock:event(aJ)end end,press=function(self,aJ)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,aJ)end else self.active=not self.active;self.callbacks.onPress(self,aJ)end end},Progressbar={new=function(B,C,Y,Z,b2,M,N,a7,b3,b4)local b5={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=A.Vector2.new(B,C),size=A.Vector2.new(Y,Z),value={max=N,min=M,current=b2,draw_percentage=true},colors={foreground=a7,filled_background=b3,unfilled_background=b4},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(b5,aR.Progressbar)return b5 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local b6=A.map(self.value.current,self.value.min,self.value.max,0,1,true)local b7=math.floor(self.size.x*b6)ac:rectangle(self.pos.x,self.pos.y,b7,self.size.y,self.colors.filled_background)ac:rectangle(self.pos.x+b7,self.pos.y,self.size.x-b7,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local b8=tostring(b6*100).."%"local b9=math.floor((self.size.x-#b8)/2)+self.pos.x;local b0=math.floor((self.size.y-1)/2)+self.pos.y;ac:write(b9,b0,b8,self.colors.foreground)end end,event=function(self,aJ)if self.hidden then return false end;if aJ.name==b.TOUCH then if V.is_area_pressed(aJ.x,aJ.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,aJ)end end end,set=function(self,n)local ba=A.constrain(n,self.value.min,self.value.max)self.value.current=ba end},Memo={new=function(B,C,Y,Z,a7,a8)local bb={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=A.Vector2.new(B,C),size=A.Vector2.new(Y,Z),editable=true,lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=aR.Clock.new(0.5),pos=A.Vector2.new(1,1)},limits=A.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=a7,background=a8,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end}}bb.cursor.blink.binded_cursor=bb.cursor;e.set_callback(bb.cursor.blink,b.ONCLOCK,function(self,aJ)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(bb,aR.Memo)return bb end,draw=function(self)if self.hidden then return end;ac:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local bc=self.cursor.pos.x-self.first_visible_char;local bd=self.cursor.pos.y-self.first_visible_line;if bc>=self.size.x then self.first_visible_char=self.first_visible_char+bc-self.size.x+1;bc=self.cursor.pos.x-self.first_visible_char-1 elseif bc<1 then self.first_visible_char=self.first_visible_char+bc;bc=0 end;if bd>=self.size.y then self.first_visible_line=self.first_visible_line+bd-self.size.y+1;bd=self.cursor.pos.y-self.first_visible_line-1 elseif bd<1 then self.first_visible_line=self.first_visible_line+bd;bd=0 end;for C=1,self.size.y do local aW=self.lines[C+self.first_visible_line-1]or""local be=aW:sub(self.first_visible_char,self.first_visible_char+self.size.x-1)ac:write(self.pos.x,self.pos.y+C-1,be,self.colors.foreground)end;if self.cursor.visible then ac:write(bc+self.pos.x,bd+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,aJ)if self.hidden then return false end;if not self.editable then return false end;if aJ.name==b.TOUCH then if V.is_area_pressed(aJ.x,aJ.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then local B=aJ.x-self.pos.x;local C=aJ.y-self.pos.y;self:set_cursor(B+self.first_visible_char,C+self.first_visible_line)self:focus(true,aJ)self.callbacks.onPress(self,aJ)return true else self:focus(false,aJ)self.callbacks.onFailedPress(self,aJ)return false end elseif aJ.name==b.DELETED then self:focus(false,aJ)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,aJ)if aJ.name==b.PASTE then self:write(aJ.paste)elseif aJ.name==b.CHAR then if self.callbacks.onChar(self,aJ)then return true end;self:write(aJ.char)elseif aJ.name==b.KEY then if self.callbacks.onKey(self,aJ)then return true end;if aJ.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)elseif aJ.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)elseif aJ.key==b.KEY_RIGHT then local aW=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#aW+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end elseif aJ.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local bf=self.lines[self.cursor.pos.y-1]self:set_cursor(#bf+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif aJ.key==b.KEY_BACKSPACE then local aW=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local bg=#self.lines[self.cursor.pos.y-1]+1;local bh=self.cursor.pos.y-1;self:set_cursor(bg,bh)self:write(aW)self:set_cursor(bg,bh)end else self.lines[self.cursor.pos.y]=aW:sub(1,self.cursor.pos.x-2)..aW:sub(self.cursor.pos.x)self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif aJ.key==b.KEY_DELETE then local aW=self.lines[self.cursor.pos.y]local bi=aW:sub(self.cursor.pos.x)if#bi>0 then self.lines[self.cursor.pos.y]=aW:sub(1,self.cursor.pos.x-1)..aW:sub(self.cursor.pos.x+1)else local bj=self.lines[self.cursor.pos.y+1]if bj then local bg=self.cursor.pos.x;local bh=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(bj)self:set_cursor(bg,bh)end end elseif aJ.key==b.KEY_ENTER then self:write("\n")elseif aJ.key==b.KEY_TAB then self:write("  ")end elseif aJ.name==b.MOUSESCROLL then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+aJ.direction)end;return true end end,focus=function(self,bk,aJ)if bk then self.focussed=true;self.callbacks.onFocus(self,aJ)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,aJ)end end,set_cursor=function(self,bg,bh,bl)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then bh=A.constrain(bh,1,self.limits.y)end;if bl then for C=#self.lines+1,bh do if not self.lines[C]then self.lines[C]=""end end else bh=A.constrain(bh,1,#self.lines)end;bg=A.constrain(bg,1,#self.lines[bh]+1)self.cursor.pos=A.Vector2.new(bg,bh)end,write=function(self,...)local am=j.join({...},"")local aV=j.split(am,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local bm="[^"..j.escape_magic_characters(j.join(self.whitelist,"")).."]"for d,aW in pairs(aV)do aV[d]=aW:gsub(bm,"")end elseif#self.blacklist>0 then local bm="["..j.escape_magic_characters(j.join(self.blacklist,"")).."]"for d,aW in pairs(aV)do aV[d]=aW:gsub(bm,"")end end;if self.limits.y>0 then for C=1,#self.lines+#aV-1-self.limits.y do table.remove(aV)end;if#aV==0 then return end end;if#aV>1 then for bn,aW in pairs(aV)do if bn==1 then local bo=self.lines[self.cursor.pos.y]local bp=bo:sub(1,self.cursor.pos.x-1)local bi=bo:sub(self.cursor.pos.x)local bq=aV[#aV]if self.limits.x>0 then aW=aW:sub(1,self.limits.x-#bp)bq=bq:sub(1,self.limits.x-#bi)end;self.lines[self.cursor.pos.y]=bp..aW;self:set_cursor(1,self.cursor.pos.y+1,true)table.insert(self.lines,self.cursor.pos.y,bq..bi)self:set_cursor(#bq+1,self.cursor.pos.y)elseif bn==#aV then break else if self.limits.x>0 then aW=aW:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,aW)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local bo=self.lines[self.cursor.pos.y]local bp=bo:sub(1,self.cursor.pos.x-1)local bi=bo:sub(self.cursor.pos.x)if self.limits.x>0 then aV[1]=aV[1]:sub(1,self.limits.x-(#bp+#bi))end;self.lines[self.cursor.pos.y]=bp..aV[1]..bi;self:set_cursor(self.cursor.pos.x+#aV[1],self.cursor.pos.y)end end,print=function(self,...)local am=j.join({...},"\n").."\n"self:write(am)end,clear=function(self)self.lines={""}self:set_cursor(1,1)end},Window={new=function(B,C,Y,Z,a8,br)local bs={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=A.Vector2.new(B,C),size=A.Vector2.new(Y,Z),drag_options={enabled=true,from=A.Vector2.new(1,1)},shadow={enabled=br,offset=A.Vector2.new(1,1)},elements={},colors={background=a8,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end}}setmetatable(bs,aR.Window)return bs end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then ac:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;ac:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,aJ)if self.hidden then return false end;local bt=self:event_elements(aJ)if not bt then if aJ.name==b.TOUCH then if V.is_area_pressed(aJ.x,aJ.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=A.Vector2.new(aJ.x,aJ.y)self.focussed=true;self.callbacks.onPress(self,aJ)self.callbacks.onFocus(self,aJ)return true else self.focussed=false;self.callbacks.onFailedPress(self,aJ)self.callbacks.onFocus(self,aJ)end elseif aJ.name==b.MOUSEDRAG and self.focussed then self:drag(aJ.x,aJ.y)return true elseif aJ.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,aJ)end else self.focussed=false;self.callbacks.onFocus(self,aJ)end;return bt end,drag=function(self,B,C)if self.drag_options.enabled then local bu=A.Vector2.new(B-self.drag_options.from.x,C-self.drag_options.from.y)self.pos=self.pos+bu;for d,bv in pairs(self.elements)do if bv.pos then bv.pos=bv.pos+bu end end;self.drag_options.from=A.Vector2.new(B,C)end end,set_elements=function(self,bw,bx)self.elements={}for d,bv in pairs(bw)do if bx then bv.pos=self.pos+bv.pos-A.Vector2.ONE end;table.insert(self.elements,bv)end end,draw_elements=function(self)for d=#self.elements,1,-1 do local bv=self.elements[d]if bv.draw then bv:draw()end end end,event_elements=function(self,aJ)local bt=false;for d,bv in pairs(self.elements)do if bv.event then local by=bv:event(aJ)bt=bt or by;if by then aJ={name=b.DELETED}end end end;return bt end}}aR.Clock.__index=aR.Clock;aR.Label.__index=aR.Label;aR.Button.__index=aR.Button;aR.Progressbar.__index=aR.Progressbar;aR.Memo.__index=aR.Memo;aR.Window.__index=aR.Window;local bz={}bz={new=function(bA,bB)local bC={options={enabled=false,FPS_target=bA,EPS_target=bB},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=aR.Clock.new(1/bA),stats_clock=aR.Clock.new(1),FPS_label=aR.Label.new(1,1,"1 FPS",colors.white),EPS_label=aR.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=A.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,bD)self.enabled=bD;self.elements.stats_clock.enabled=bD;self.elements.FPS_label.hidden=not bD;self.elements.EPS_label.hidden=not bD end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+A.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}bC.elements.loop.stats_clock.stats=bC.stats;bC.stats.elements=bC.elements.loop;e.set_callback(bC.elements.loop.stats_clock,b.ONCLOCK,function(self,aJ)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)bC.stats:enable(false)setmetatable(bC,bz)return bC end,set_monitors=function(self,a3)self.monitors=a2.get_monitors(a3)end,set_elements=function(self,bw)self.elements.high_priority={}self.elements.low_priority={}for d,n in pairs(bw)do if n.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,n)else table.insert(self.elements.low_priority,n)end end end,draw_elements=function(self)local function bE(k)for d=#k,1,-1 do local bv=k[d]if bv.draw then bv:draw()end end end;self.callbacks.onDraw(self)local bF=ac.screens;ac.screens=self.monitors;bE(self.elements.low_priority)bE(self.elements.high_priority)for d,bv in pairs(self.elements.loop)do if bv.draw then bv:draw()end end;ac:draw()ac.screens=bF;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,aJ)local function _(k)for d,bv in pairs(k)do if bv.event then if bv:event(aJ)then aJ={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,aJ)then aJ={name=b.DELETED}end;if aJ.name==b.TOUCH then local bG=false;for bH,a6 in pairs(self.monitors)do if aJ.from==bH then bG=true;break end end;if not bG then aJ={name=b.DELETED}end end;_(self.elements.loop)local bI={}for d,bv in pairs(self.elements.high_priority)do if bv.event then local bJ=bv:event(aJ)if bJ then aJ={name=b.DELETED}if self.elements.high_priority~=bv then table.insert(bI,{element=bv,key=d})end end end end;if#bI>0 then for d,n in pairs(bI)do table.insert(self.elements.high_priority,1,n.element)table.remove(self.elements.high_priority,n.key+#bI)end end;_(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;aF:reset()e.set_callback(self.elements.loop.clock,b.ONCLOCK,function(bK,aJ)self.callbacks.onClock(self,aJ)self:draw_elements()bK.interval=1/self.options.FPS_target end)self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local bL=os.startTimer(1/self.options.EPS_target)local bM={os.pullEvent()}local aJ=V.format_event_table(bM)aF:manage_event(aJ)self:event_elements(aJ)os.cancelTimer(bL)end;aF:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}bz.__index=bz;local bN={...}if bN[1]=="help"then local aV={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,aW in pairs(aV)do a2.better_print(term,aW.foreground,aW.background,aW.text)end elseif bN[1]=="info"then a2.better_print(term,colors.red,nil,"Library Version: ",a.ver)a2.better_print(term,colors.yellow,nil,"Library Author: ",a.author)a2.better_print(term,colors.green,nil,"Library Website: ",a.website)a2.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif bN[1]=="ver"then a2.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif bN[1]=="copyright"then local bO={colors.red,colors.yellow,colors.green}local bP=j.split(a.copyright,"\n\n")for d,bQ in pairs(bP)do a2.better_print(term,bO[d],nil,bQ)if d<#bP then read("")end end elseif bN[1]=="setup"then if shell then local bR="YAGUI_PATH"local x="/"..shell.getRunningProgram()a0:set(bR,x)a2.better_print(term,colors.green,nil,"Lib path was set to \"",a0.get(bR),"\".")else a2.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif bN[1]=="create"then if bN[2]then local x=shell.resolve(bN[2])local a1=fs.getName(x):lower()if j.get_extension(x)~="lua"then x=x..".lua"end;if fs.exists(x)then a2.better_print(term,colors.red,nil,"PATH: \"/",x,"\" already exists, please use another path or delete it.")else local bS=fs.open(x,"w")bS.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")bS.close()a2.better_print(term,colors.green,nil,"New project was created at \"/",x,"\".")end else a2.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif bN[1]then a2.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",bN[1],"\"")a2.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local bT={info=a,generic_utils=e,string_utils=j,math_utils=A,table_utils=O,color_utils=R,event_utils=V,setting_utils=a0,monitor_utils=a2,screen_buffer=ac,input=aF,WSS=aK,wireless_screen_share=aK,gui_elements=aR,Loop=bz}for d,n in pairs(b)do bT[d]=n end;return bT