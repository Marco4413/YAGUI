--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="0.3",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI"}local b={TOUCH="screen_touch",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONDRAW=3,ONPRESS=4,ONCLOCK=5,ONEVENT=6}local c={set_callback=function(d,e,f)if e==b.ONDRAW then d.callbacks.onDraw=f elseif e==b.ONPRESS then d.callbacks.onPress=f elseif e==b.ONCLOCK then d.callbacks.onClock=f end end,get_monitors=function(g)local h={}for i,j in pairs(g)do if j=="terminal"then h[j]=term else if peripheral.getType(j)=="monitor"then h[j]=peripheral.wrap(j)end end end;return h end}local k={}k={join=function(l,m)if not m then m=""end;local n=""for i=1,#l do local o=l[i]n=n..tostring(o)if i<#l then n=n..m end end;return n end,split=function(n,m)local l={}while true do local p=n:find(m)if p then table.insert(l,n:sub(1,p-1))n=n:sub(p+1)else table.insert(l,n)break end end;return l end,compare_versions=function(q,r)local s=k.split(q,".")local t=k.split(r,".")local u=#s;local v=#t;for w=1,math.min(u,v)do if tonumber(s[w])>tonumber(t[w])then return 1 elseif tonumber(s[w])<tonumber(t[w])then return-1 end end;if u>v then return 1 elseif u<v then return-1 end;return 0 end}local x={}x={vector2=function(y,z)return{x=y,y=z}end,map=function(o,A,B,C,D,E)local F=(o-A)/(B-A)*(D-C)+C;if E then return x.constrain(F,C,D)end;return F end,constrain=function(o,G,H)return math.min(H,math.max(G,o))end}local I={is_area_pressed=function(J,K,y,z,L,M)if J>=y and J<y+L then if K>=z and K<z+M then return true end end;return false end,format_event_table=function(N)local e={}e.name=N[1]if e.name=="mouse_click"then e.name=b.TOUCH;e.from="terminal"e.button=N[2]e.x=N[3]e.y=N[4]return e elseif e.name=="monitor_touch"then e.name=b.TOUCH;e.from=N[2]e.button=1;e.x=N[3]e.y=N[4]return e end;table.remove(N,1)e.parameters=N;return e end}local O={screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,y,z)y=tostring(y)z=tostring(z)if self.pixels[y]then if self.pixels[y][z]then return true end end;return false end,get_pixel=function(self,y,z)y=tostring(y)z=tostring(z)if self:is_pixel_custom(y,z)then return self.pixels[y][z]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,y,z,char,P,Q)y=tostring(y)z=tostring(z)local R=self:get_pixel(y,z)if char and#char==1 then R.char=char end;if P then R.foreground=P end;if Q then R.background=Q end;if not self.pixels[y]then self.pixels[y]={}end;self.pixels[y][z]=R end,clear=function(self)self.pixels={}end},set_screens=function(self,S)self.screens=c.get_monitors(S)end,clear=function(self)self.buffer:clear()end,draw=function(self)local T=self.screens;local U=self.buffer;for V,W in pairs(T)do local X=W.getBackgroundColor()local Y=W.getTextColor()local Z,_=W.getCursorPos()local L,M=W.getSize()for y=1,L do for z=1,M do W.setCursorPos(y,z)local R=U:get_pixel(y,z)W.setBackgroundColor(R.background)W.setTextColor(R.foreground)W.write(R.char)end end;W.setBackgroundColor(X)W.setTextColor(Y)W.setCursorPos(Z,_)end;if self.clear_after_draw then self:clear()end end,point=function(self,y,z,a0)self.buffer:set_pixel(y,z," ",a0,a0)end,write=function(self,y,z,a1,P,Q)for a2=0,#a1-1 do char=a1:sub(a2+1,a2+1)self.buffer:set_pixel(y+a2,z,char,P,Q)end end,rectangle=function(self,y,z,L,M,a0)for a2=0,L-1 do for a3=0,M-1 do self:point(y+a2,z+a3,a0)end end end,line=function(self,a4,a5,a6,a7,a0)local function a8(a4,a5,a6,a7)local a9=1;if a4>a6 then a9=-1 end;local aa=a6-a4;local ab=a7-a5;local ac=1;if ab<0 then ac=-1;ab=-ab end;local ad=2*ab-aa;local z=a5;for y=a4,a6,a9 do self:point(y,z,a0)if ad>0 then z=z+ac;ad=ad-2*aa end;ad=ad+2*ab end end;local function ae(a4,a5,a6,a7)local a9=1;if a5>a7 then a9=-1 end;local aa=a6-a4;local ab=a7-a5;local af=1;if aa<0 then af=-1;aa=-aa end;local ad=2*aa-ab;local y=a4;for z=a5,a7,a9 do self:point(y,z,a0)if ad>0 then y=y+af;ad=ad-2*ab end;ad=ad+2*aa end end;if math.abs(a7-a5)<math.abs(a6-a4)then if a4>a6 then a8(a6,a7,a4,a5)else a8(a4,a5,a6,a7)end else if a5>a7 then ae(a6,a7,a4,a5)else ae(a4,a5,a6,a7)end end end,circle=function(self,ag,ah,ai,a0)local aj=ai*ai;self:point(ag,ah+ai,a0)self:point(ag,ah-ai,a0)self:point(ag+ai,ah,a0)self:point(ag-ai,ah,a0)local y=1;local z=math.floor(math.sqrt(aj-1)+0.5)while y<z do self:point(ag+y,ah+z,a0)self:point(ag+y,ah-z,a0)self:point(ag-y,ah+z,a0)self:point(ag-y,ah-z,a0)self:point(ag+z,ah+y,a0)self:point(ag+z,ah-y,a0)self:point(ag-z,ah+y,a0)self:point(ag-z,ah-y,a0)y=y+1;z=math.floor(math.sqrt(aj-y*y)+0.5)end;if y==z then self:point(ag+y,ah+z,a0)self:point(ag+y,ah-z,a0)self:point(ag-y,ah+z,a0)self:point(ag-y,ah-z,a0)end end}local ak={}ak={Clock={new=function(al)local am={clock=os.clock(),interval=al,callbacks={onClock=function()end}}setmetatable(am,ak.Clock)return am end,event=function(self,an)if os.clock()>=self.clock+self.interval then self.clock=os.clock()self.callbacks.onClock(self,an)return true end;return false end},Label={new=function(y,z,a1,P,Q)local ao={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text=a1,pos=x.vector2(y,z),colors={foreground=P,background=Q},callbacks={onDraw=function()end,onPress=function()end}}setmetatable(ao,ak.Label)return ao end,draw=function(self)self.callbacks.onDraw(self)O:write(self.pos.x,self.pos.y,self.text,self.colors.foreground,self.colors.background)end,event=function(self,an)if an.name==b.TOUCH then if I.is_area_pressed(an.x,an.y,self.pos.x,self.pos.y,#self.text,1)then self.callbacks.onPress(self,an)end end end},Button={new=function(y,z,L,M,a1,P,ap,aq)local ar={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,text=a1,pos=x.vector2(y,z),size=x.vector2(L,M),colors={foreground=P,active_background=ap,unactive_background=aq},callbacks={onDraw=function()end,onPress=function()end}}setmetatable(ar,ak.Button)return ar end,draw=function(self)self.callbacks.onDraw(self)if self.active then O:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else O:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local as=k.split(self.text,"\n")local at=math.floor((self.size.y-#as)/2)+self.pos.y;for a3=0,#as-1 do local o=as[a3+1]local au=math.floor((self.size.x-#o)/2)+self.pos.x;O:write(au,at+a3,o,self.colors.foreground)end end,event=function(self,an)if an.name==b.TOUCH then if I.is_area_pressed(an.x,an.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press()self.callbacks.onPress(self,an)else self.focussed=false end end end,press=function(self)self.active=not self.active end},Progressbar={new=function(y,z,L,M,av,G,H,P,aw,ax)local ay={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=x.vector2(y,z),size=x.vector2(L,M),value={max=H,min=G,current=av,draw_percentage=true},colors={foreground=P,filled_background=aw,unfilled_background=ax},callbacks={onDraw=function()end,onPress=function()end}}setmetatable(ay,ak.Progressbar)return ay end,draw=function(self)self.callbacks.onDraw(self)local az=x.map(self.value.current,self.value.min,self.value.max,0,1,true)local aA=math.floor(self.size.x*az)O:rectangle(self.pos.x,self.pos.y,aA,self.size.y,self.colors.filled_background)O:rectangle(self.pos.x+aA,self.pos.y,self.size.x-aA,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local aB=tostring(az*100).."%"local aC=math.floor((self.size.x-#aB)/2)+self.pos.x;local at=math.floor((self.size.y-1)/2)+self.pos.y;O:write(aC,at,aB,self.colors.foreground)end end,event=function(self,an)if an.name==b.TOUCH then if I.is_area_pressed(an.x,an.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,an)else self.focussed=false end end end,set=function(self,o)local aD=x.constrain(o,self.value.min,self.value.max)self.value.current=aD end}}ak.Clock.__index=ak.Clock;ak.Label.__index=ak.Label;ak.Button.__index=ak.Button;ak.Progressbar.__index=ak.Progressbar;local aE={}aE={new=function(aF,aG)local aH={options={enabled=false,FPS_target=aF,EPS_target=aG},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=ak.Clock.new(1/aF)}},callbacks={onDraw=function()end,onClock=function()end,onEvent=function()end}}setmetatable(aH,aE)return aH end,set_monitors=function(self,g)self.monitors=c.get_monitors(g)end,set_elements=function(self,aI)self.elements.high_priority={}self.elements.low_priority={}for i,o in pairs(aI)do if o.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,o)else table.insert(self.elements.low_priority,o)end end end,draw_elements=function(self)self.callbacks.onDraw(self)local aJ=O.screens;O.screens=self.monitors;for i,aK in pairs(self.elements.low_priority)do if aK.draw then aK:draw()end end;for i,aK in pairs(self.elements.high_priority)do if aK.draw then aK:draw()end end;for i,aK in pairs(self.elements.loop)do if aK.draw then aK:draw()end end;O:draw()O.screens=aJ end,event_elements=function(self,aL)local an=I.format_event_table(aL)self.callbacks.onEvent(self,an)if an.name==b.TOUCH then local aM=false;for aN,aO in pairs(self.monitors)do if an.from==aN then aM=true;break end end;if not aM then return end end;local aP=false;for i,aK in pairs(self.elements.loop)do if aP then aK.focussed=false else aK:event(an)aP=aK.focussed end end;for i,aK in pairs(self.elements.high_priority)do if aP then aK.focussed=false else aK:event(an)aP=aK.focussed end end;for i,aK in pairs(self.elements.low_priority)do if aP then aK.focussed=false else aK:event(an)aP=aK.focussed end end end,start=function(self)self.enabled=true;c.set_callback(self.elements.loop.clock,b.ONCLOCK,function(aQ,an)self.callbacks.onClock(self,an)self:draw_elements()end)while self.enabled do local aR=os.startTimer(1/self.options.EPS_target)local aL={os.pullEvent()}self:event_elements(aL)os.cancelTimer(aR)end end,stop=function(self)self.enabled=false end}aE.__index=aE;local aS={info=a,generic_utils=c,string_utils=k,math_utils=x,event_utils=I,screen_buffer=O,gui_elements=ak,Loop=aE}for i,o in pairs(b)do aS[i]=o end;return aS