--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.27",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI/",documentation="https://hds536jhmk.github.io/YAGUI/",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TIMER="timer",TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",KEYUP="key_up",PASTE="paste",REDNET="rednet_message",MODEM="modem_message",TERMINATE="terminate",DELETED="DELETED",NONE="NONE",ALL="ALL",SEND="SEND",RECEIVE="RECEIVE",HOST="HOST",USER="USER",DISCONNECTED="DISCONNECTED",CONNECTION_REQUEST="CONNECTION_REQUEST",OK="OK",NO="NO",ERROR="ERROR",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,ONMOUSESCROLL=12,ONCURSORCHANGE=13,ONWRITE=14,ONCONNECT=15,ONDISCONNECT=16,ONSEND=17,ONRECEIVE=18,ONDRAG=19,ONRESIZE=20,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",TURTLE="turtle",POCKET="pocket",ALIGN_LEFT=1,ALIGN_CENTER=2,ALIGN_RIGHT=3}for c,d in next,keys do if type(d)=="number"then b["KEY_"..c:upper()]=d end end;local e={__call=function(self,...)return self.new(...)end}e.__index=e;local f={}local g={}local h={}local i={}local j={}local k={}local l={}local m={}f={set_callback=function(n,o,p)if o==b.ONSTART then n.callbacks.onStart=p elseif o==b.ONSTOP then n.callbacks.onStop=p elseif o==b.ONDRAW then n.callbacks.onDraw=p elseif o==b.ONPRESS then n.callbacks.onPress=p elseif o==b.ONFAILEDPRESS then n.callbacks.onFailedPress=p elseif o==b.ONTIMEOUT then n.callbacks.onTimeout=p elseif o==b.ONCLOCK then n.callbacks.onClock=p elseif o==b.ONEVENT then n.callbacks.onEvent=p elseif o==b.ONFOCUS then n.callbacks.onFocus=p elseif o==b.ONKEY then n.callbacks.onKey=p elseif o==b.ONCHAR then n.callbacks.onChar=p elseif o==b.ONMOUSESCROLL then n.callbacks.onMouseScroll=p elseif o==b.ONCURSORCHANGE then n.callbacks.onCursorChange=p elseif o==b.ONWRITE then n.callbacks.onWrite=p elseif o==b.ONCONNECT then n.callbacks.onConnect=p elseif o==b.ONDISCONNECT then n.callbacks.onDisconnect=p elseif o==b.ONSEND then n.callbacks.onSend=p elseif o==b.ONRECEIVE then n.callbacks.onReceive=p elseif o==b.ONDRAG then n.callbacks.onDrag=p elseif o==b.ONRESIZE then n.callbacks.onResize=p end end,get_computer_type=function()local q=b.COMPUTER;if turtle then q=b.TURTLE elseif pocket then q=b.POCKET end;return q,term.isColor()end,expect=function(r,...)local s={...}local t="[/%.,]"r=r or"unknown"r=tostring(r)local u=false;local v;for w=1,#s,2 do local x=tostring(s[w])local y=true;local z;for A,B in next,g.split(x,t)do local C=s[w+1]local D=type(C)if D~=B then z=D else y=false;break end end;if y then local E=x:gsub(t,", ")v=string.format("\"%s\": Bad argument #%d (expected %s, got %s)",r,(w+1)/2,E,z)u=true;break end end;if u then error(v,3)return false end;return true end}g={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(F,G)G=G or""local H=""for d=1,#F do local I=F[d]H=H..tostring(I)..(d<#F and G or"")end;return H end,split=function(H,G)if not string.find(H,G)then return{H}end;local J={}local K="(.-)"..G.."()"local L;for M,N in string.gfind(H,K)do table.insert(J,M)L=N end;table.insert(J,string.sub(H,L))return J end,split_by_char=function(H,O)local P={}local Q=1;for w=1,#H do if H:sub(w,w)==O then table.insert(P,w==Q and""or H:sub(Q,w-1))Q=w+1 end end;table.insert(P,H:sub(Q,#H))return P end,compare_versions=function(R,S)local T=g.split(R,".")local U=g.split(S,".")local V=#T;local W=#U;for w=1,math.min(V,W)do if tonumber(T[w])>tonumber(U[w])then return 1 elseif tonumber(T[w])<tonumber(U[w])then return-1 end end;if V>W then return 1 elseif V<W then return-1 end;return 0 end,escape_magic_characters=function(H)for d,X in next,g.magic_characters do H=H:gsub("[%"..X.."]",'%%%'..X)end;return H end,get_extension=function(Y)local Z,_=Y:gsub(".*%.","")if _>0 then return Z end;return""end,format_number=function(a0,a1)a0=tostring(a0)a1=a1 or 0;local a2=a0:gsub("(.*)%..*","%1")if a1<=0 then return a2 end;local a3=#a2+1;local a4=a0:sub(a3+1,a3+a1)a4=a4:reverse():gsub("0*(.*)","%1"):reverse()if#a4>0 then return a2 .."."..a4 end;return a2 end,trim=function(H)return H:gsub("^%s*(.*)%s*$","%1")end}h={Vector2={new=function(a5,a6)local a7={x=a5 or 0,y=a6 or 0}setmetatable(a7,h.Vector2)return a7 end,duplicate=function(self)return h.Vector2.new(self.x,self.y)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a8)return self.x*a8.x+self.y*a8.y end,cross=function(self,a8)return self.x*a8.y-self.y*a8.x end,rotate=function(self,a9)local aa=math.cos(a9)local ab=math.sin(a9)return h.Vector2.new(aa*self.x-ab*self.y,ab*self.x+aa*self.y)end,string=function(self,a1)if a1 then return string.format("(%."..tostring(a1).."f; %."..tostring(a1).."f)",self.x,self.y)else return string.format("(%f; %f)",self.x,self.y)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a8)return h.Vector2.new(self.x+a8.x,self.y+a8.y)end,__sub=function(self,a8)return h.Vector2.new(self.x-a8.x,self.y-a8.y)end,__mul=function(self,a0)if type(self)=="number"then return h.Vector2.new(a0.x*self,a0.y*self)else return h.Vector2.new(self.x*a0,self.y*a0)end end,__div=function(self,a0)return h.Vector2.new(self.x/a0,self.y/a0)end,__eq=function(self,a8)return self.x==a8.x and self.y==a8.y end,__lt=function(self,a8)return self:length_sq()<a8:length_sq()end,__le=function(self,a8)return self:length_sq()<=a8:length_sq()end},Vector3={new=function(a5,a6,ac)local ad={x=a5 or 0,y=a6 or 0,z=ac or 0}setmetatable(ad,h.Vector3)return ad end,duplicate=function(self)return h.Vector3.new(self.x,self.y,self.z)end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)+math.pow(self.z,2)end,length=function(self)return math.sqrt(self:length_sq())end,unit=function(self)return self/self:length()end,dot=function(self,a8)return self.x*a8.x+self.y*a8.y+self.z*a8.z end,cross=function(self,a8)return h.Vector3.new(self.y*a8.z-self.z*a8.y,self.z*a8.x-self.x*a8.z,self.x*a8.y-self.y*a8.x)end,rotate=function(self,ae,a9)local aa=math.cos(a9)return aa*self+math.sin(a9)*ae:cross(self)+(1-aa)*ae:dot(self)*ae end,string=function(self,a1)if a1 then return string.format("(%."..tostring(a1).."f; %."..tostring(a1).."f; %."..tostring(a1).."f)",self.x,self.y,self.z)else return string.format("(%f; %f; %f)",self.x,self.y,self.z)end end,__tostring=function(self)return self:string(0)end,__len=function(self)return self:length()end,__add=function(self,a8)return h.Vector3.new(self.x+a8.x,self.y+a8.y,self.z+a8.z)end,__sub=function(self,a8)return h.Vector3.new(self.x-a8.x,self.y-a8.y,self.z-a8.z)end,__mul=function(self,a0)if type(self)=="number"then return h.Vector3.new(a0.x*self,a0.y*self,a0.z*self)else return h.Vector3.new(self.x*a0,self.y*a0,self.z*a0)end end,__div=function(self,a0)return h.Vector3.new(self.x/a0,self.y/a0,self.z/a0)end,__eq=function(self,a8)return self.x==a8.x and self.y==a8.y and self.z==a8.z end,__lt=function(self,a8)return self:length_sq()<a8:length_sq()end,__le=function(self,a8)return self:length_sq()<=a8:length_sq()end},map=function(I,af,ag,ah,ai,aj)local ak=(I-af)/(ag-af)*(ai-ah)+ah;if aj then return h.constrain(ak,ah,ai)end;return ak end,constrain=function(I,al,am)return math.min(am,math.max(al,I))end,round=function(a0)return math.floor(a0+0.5)end,round_numbers=function(...)local an={...}local ao={}for d,a0 in next,an do table.insert(ao,h.round(a0))end;return table.unpack(ao)end,floor_numbers=function(...)local an={...}local ap={}for d,a0 in next,an do table.insert(ap,math.floor(a0))end;return table.unpack(ap)end,ceil_numbers=function(...)local an={...}local aq={}for d,a0 in next,an do table.insert(aq,math.ceil(a0))end;return table.unpack(aq)end}h.Vector2.__index=h.Vector2;h.Vector3.__index=h.Vector3;h.Vector2.ONE=h.Vector2.new(1,1)h.Vector2.UP=h.Vector2.new(0,-1)h.Vector2.DOWN=h.Vector2.new(0,1)h.Vector2.LEFT=h.Vector2.new(-1,0)h.Vector2.RIGHT=h.Vector2.new(1,0)h.Vector2.ZERO=h.Vector2.new(0,0)h.Vector3.ONE=h.Vector3.new(1,1,1)h.Vector3.UP=h.Vector3.new(0,1,0)h.Vector3.DOWN=h.Vector3.new(0,-1,0)h.Vector3.LEFT=h.Vector3.new(-1,0,0)h.Vector3.RIGHT=h.Vector3.new(1,0,0)h.Vector3.FORWARD=h.Vector3.new(0,0,1)h.Vector3.BACK=h.Vector3.new(0,0,-1)h.Vector3.ZERO=h.Vector3.new(0,0,0)i={has_value=function(F,I)for ar,as in next,F do if as==I then return true,ar end end;return false,nil end,has_key=function(F,d)if F[d]~=nil then return true,F[d]end;return false,nil end,serialise=function(F,at,au,av,aw,ax,ay,az,aA)local at=at or 0;local ay=ay or"  "local aB=0;local az=az or"\n"local aA=aA or" "if not au then ay,az,aA="","",""end;local aC={}local aD="root"local function aE(F,Y)local aF=ay:rep(aB+1)local aG="{"..az;local function aH(F)for d,I in next,F do local aI=type(d)local aJ;if aI=="string"or aI=="table"then aJ=string.format("%q",tostring(d))else aJ=tostring(d)end;if not ax and d=="__index"then I={}end;local aK=type(I)aG=aG..string.format("%s[%s]%s=%s",aF,aJ,aA,aA)if aK=="table"then if not next(I)then aG=aG.."{}"elseif at<=-1 or aB<at then if aC[I]and not av then aG=aG..string.format("%q",aC[I])else local aL=Y.."."..tostring(d)aC[I]=aL;aB=aB+1;aG=aG..aE(I,aL)aB=aB-1 end else aG=aG.."{}"end elseif aK=="string"or aK=="function"then aG=aG..string.format("%q",tostring(I))else aG=aG..string.format("%s",tostring(I))end;if next(F,d)then aG=aG..","..az else aG=aG..az end end end;local aM=getmetatable(F)if aw and aM then aH(aM)if next(F)then aG=aG:sub(1,#aG-#az)..","..aG:sub(#aG-#az+1)end end;aH(F)aG=aG..ay:rep(aB).."}"return aG end;return aE(F,aD)end,unserialise=textutils.unserialise,unserialize=textutils.unserialize,better_unpack=function(F,w,aN)w=w or 1;aN=aN or#F;if w<=aN then return F[w],i.better_unpack(F,w+1,aN)end end}i.serialize=i.serialise;j={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},paint={},color_to_paint=function(aO)return j.colors[aO]end,paint_to_color=function(aP)return j.paint[aP]end}for d,I in next,j.colors do j.paint[I]=d end;k={is_area_pressed=function(aQ,aR,a5,a6,aS,aT)if aQ>=a5 and aQ<a5+aS then if aR>=a6 and aR<a6+aT then return true end end;return false end,format_event_table=function(aU)local o={}o.name=aU[1]if o.name=="timer"then o.name=b.TIMER;o.id=o[2]elseif o.name=="mouse_click"then o.name=b.TOUCH;o.from="terminal"o.button=aU[2]o.x=aU[3]o.y=aU[4]elseif o.name=="monitor_touch"then o.name=b.TOUCH;o.from=aU[2]o.button=1;o.x=aU[3]o.y=aU[4]elseif o.name=="mouse_drag"then o.name=b.MOUSEDRAG;o.button=aU[2]o.x=aU[3]o.y=aU[4]elseif o.name=="mouse_up"then o.name=b.MOUSEUP;o.button=aU[2]o.x=aU[3]o.y=aU[4]elseif o.name=="mouse_scroll"then o.name=b.MOUSESCROLL;o.direction=aU[2]o.x=aU[3]o.y=aU[4]elseif o.name=="char"then o.name=b.CHAR;o.char=aU[2]elseif o.name=="key"then o.name=b.KEY;o.key=aU[2]elseif o.name=="key_up"then o.name=b.KEYUP;o.key=aU[2]elseif o.name=="paste"then o.name=b.PASTE;o.paste=aU[2]elseif o.name=="rednet_message"then o.name=b.REDNET;o.from=aU[2]o.message=aU[3]local aV=aU[4]if type(aV)=="number"then o.distance=aV else o.protocol=tostring(aV)end elseif o.name=="modem_message"then local aW=aU[5]o.name=b.MODEM;o.side=aU[2]o.from=aU[4]o.protocol=aW.sProtocol or""o.message=aW.message elseif o.name=="terminate"then o.name=b.TERMINATE else o.parameters={}for d=2,#aU do table.insert(o.parameters,aU[d])end end;o.raw=aU;return o end}l={_path="/.settings",set=function(aX,I)settings.set(aX,I)settings.save(l._path)end,unset=function(aX)settings.unset(aX)settings.save(l._path)end,get=function(aX)return settings.get(aX)end}m={get_monitors=function(aY)local aZ={}for d,a_ in next,aY do if a_=="terminal"then aZ[a_]=term else if peripheral.getType(a_)=="monitor"then aZ[a_]=peripheral.wrap(a_)end end end;return aZ end,better_print=function(b0,b1,b2,...)local b3=g.join({...},"")local b4=b0.getTextColor()local b5=b0.getBackgroundColor()if b1 then b0.setTextColor(b1)end;if b2 then b0.setBackgroundColor(b2)end;print(b3)b0.setTextColor(b4)b0.setBackgroundColor(b5)end,better_clear=function(b0)b0.clear()b0.setCursorPos(1,1)end}local b6={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,a5,a6)if self.pixels[a5]then if self.pixels[a5][a6]then return true end end;return false end,get_pixel=function(self,a5,a6)if self:is_pixel_custom(a5,a6)then return self.pixels[a5][a6]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,a5,a6,O,b1,b2)local b7=self:get_pixel(a5,a6)if O and#O==1 then b7.char=O end;b7.foreground=b1 or b7.background;b7.background=b2 or b7.background;if not self.pixels[a5]then self.pixels[a5]={}end;self.pixels[a5][a6]=b7 end,clear=function(self)self.pixels={}end},set_screens=function(self,b8)self.screens=m.get_monitors(b8)end,set_monitors=function(self,aY)self:set_screens(aY)end,clear=function(self)self.buffer:clear()end,draw=function(self)local b9=self.screens;local ba=self.buffer;for bb,bc in next,b9 do local bd,be=bc.getCursorPos()local aS,aT=bc.getSize()for a6=1,aT do local bf={text="",background="",foreground=""}for a5=1,aS do local b7=ba:get_pixel(a5,a6)bf.text=bf.text..b7.char;bf.background=bf.background..j.colors[b7.background]bf.foreground=bf.foreground..j.colors[b7.foreground]end;bc.setCursorPos(1,a6)bc.blit(bf.text,bf.foreground,bf.background)end;bc.setCursorPos(bd,be)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,a5,a6,aO)self.buffer:set_pixel(a5,a6," ",aO,aO)end,write=function(self,a5,a6,bg,b1,b2)for bh=0,#bg-1 do local O=bg:sub(bh+1,bh+1)self.buffer:set_pixel(a5+bh,a6,O,b1,b2)end end,blit=function(self,a5,a6,bg,b1,b2)local bi=""local bj=""b1=b1 or""b2=b2 or""for bh=0,#bg-1 do local O=bg:sub(bh+1,bh+1)local bk=b1:sub(bh+1,bh+1)bk=#bk>0 and bk or bi;local bl=b2:sub(bh+1,bh+1)bl=#bl>0 and bl or bj;self.buffer:set_pixel(a5+bh,a6,O,j.paint[bk],j.paint[bl])bi=bk;bj=bl end end,rectangle=function(self,a5,a6,aS,aT,aO)for bh=0,aS-1 do for bm=0,aT-1 do self:point(a5+bh,a6+bm,aO)end end end,line=function(self,bn,bo,bp,bq,aO)local function br(bn,bo,bp,bq)local bs=1;if bn>bp then bs=-1 end;local bt=bp-bn;local bu=bq-bo;local bv=1;if bu<0 then bv=-1;bu=-bu end;local bw=2*bu-bt;local a6=bo;for a5=bn,bp,bs do self:point(a5,a6,aO)if bw>0 then a6=a6+bv;bw=bw-2*bt end;bw=bw+2*bu end end;local function bx(bn,bo,bp,bq)local bs=1;if bo>bq then bs=-1 end;local bt=bp-bn;local bu=bq-bo;local by=1;if bt<0 then by=-1;bt=-bt end;local bw=2*bt-bu;local a5=bn;for a6=bo,bq,bs do self:point(a5,a6,aO)if bw>0 then a5=a5+by;bw=bw-2*bu end;bw=bw+2*bt end end;if math.abs(bq-bo)<math.abs(bp-bn)then if bn>bp then br(bp,bq,bn,bo)else br(bn,bo,bp,bq)end else if bo>bq then bx(bp,bq,bn,bo)else bx(bn,bo,bp,bq)end end end,circle=function(self,bz,bA,bB,aO)local bC=bB*bB;self:point(bz,bA+bB,aO)self:point(bz,bA-bB,aO)self:point(bz+bB,bA,aO)self:point(bz-bB,bA,aO)local a5=1;local a6=math.floor(math.sqrt(bC-1)+0.5)while a5<a6 do self:point(bz+a5,bA+a6,aO)self:point(bz+a5,bA-a6,aO)self:point(bz-a5,bA+a6,aO)self:point(bz-a5,bA-a6,aO)self:point(bz+a6,bA+a5,aO)self:point(bz+a6,bA-a5,aO)self:point(bz-a6,bA+a5,aO)self:point(bz-a6,bA-a5,aO)a5=a5+1;a6=math.floor(math.sqrt(bC-a5*a5)+0.5)end;if a5==a6 then self:point(bz+a5,bA+a6,aO)self:point(bz+a5,bA-a6,aO)self:point(bz-a5,bA+a6,aO)self:point(bz-a5,bA-a6,aO)end end}local bD={pressed_keys={},reset=function(self)self.pressed_keys={}end,is_key_pressed=function(self,bE,d)if self.pressed_keys[d]then if bE then self:remove_key(d)end;return true end;return false end,are_keys_pressed=function(self,bF,...)local keys={...}if not(#keys>0)then return false end;for bG,d in next,keys do if not self:is_key_pressed(false,d)then return false end end;if bF then self:remove_keys(table.unpack(keys))end;return true end,add_key=function(self,d)self.pressed_keys[d]=true end,remove_key=function(self,d)self.pressed_keys[d]=nil end,remove_keys=function(self,...)local keys={...}for bG,d in next,keys do self:remove_key(d)end end,manage_event=function(self,formatted_event)if formatted_event.name==b.KEY then self:add_key(formatted_event.key)elseif formatted_event.name==b.KEYUP then self:remove_key(formatted_event.key)end end}local bH={}bH={Clock={new=function(bI)local bJ={enabled=true,oneshot=false,clock=os.clock(),interval=bI,callbacks={onClock=function()end}}setmetatable(bJ,bH.Clock)return bJ end,event=function(self,formatted_event)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,formatted_event)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(a5,a6,bg,b1,b2)local bK={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text_alignment=b.ALIGN_LEFT,text=bg,pos=h.Vector2.new(a5,a6),colors={foreground=b1,background=b2},callbacks={onDraw=function()end}}setmetatable(bK,bH.Label)return bK end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local P=g.split_by_char(self.text,"\n")if self.text_alignment==b.ALIGN_LEFT then for d,bL in next,P do b6:write(self.pos.x,self.pos.y+d-1,bL,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_CENTER then for d,bL in next,P do b6:write(self.pos.x-math.floor(#bL/2),self.pos.y+d-1,bL,self.colors.foreground,self.colors.background)end elseif self.text_alignment==b.ALIGN_RIGHT then for d,bL in next,P do b6:write(self.pos.x-#bL+1,self.pos.y+d-1,bL,self.colors.foreground,self.colors.background)end end end},Button={new=function(a5,a6,aS,aT,bg,b1,bM,bN)local bO={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,shortcut_once=true,shortcut={},text_alignment=b.ALIGN_CENTER,text=bg,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(aS,aT),timed={enabled=false,clock=bH.Clock.new(0.5)},colors={foreground=b1,active_background=bM,unactive_background=bN},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}bO.timed.clock.binded_button=bO;bO.timed.clock.oneshot=true;bO.timed.clock:stop()f.set_callback(bO.timed.clock,b.ONCLOCK,function(self,formatted_event)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,formatted_event)self.binded_button.callbacks.onTimeout(self.binded_button,formatted_event)end)setmetatable(bO,bH.Button)return bO end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then b6:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else b6:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local P=g.split_by_char(self.text,"\n")local bP=math.floor((self.size.y-#P)/2)+self.pos.y;for bm=0,#P-1 do local bL=P[bm+1]local bQ;if self.text_alignment==b.ALIGN_LEFT then bQ=self.pos.x elseif self.text_alignment==b.ALIGN_CENTER then bQ=math.floor((self.size.x-#bL)/2)+self.pos.x elseif self.text_alignment==b.ALIGN_RIGHT then bQ=self.pos.x+self.size.x-#bL end;b6:write(bQ,bP+bm,bL,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self:press(formatted_event)return true else self.callbacks.onFailedPress(self,formatted_event)end elseif bD:are_keys_pressed(self.shortcut_once,table.unpack(self.shortcut))then self:press(formatted_event)end;if self.timed.enabled then self.timed.clock:event(formatted_event)end end,press=function(self,formatted_event)if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,formatted_event)end else self.active=not self.active;self.callbacks.onPress(self,formatted_event)end end},Progressbar={new=function(a5,a6,aS,aT,bR,al,am,b1,bS,bT)local bU={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(aS,aT),value={max=am,min=al,current=bR,draw_percentage=true,percentage_precision=2},colors={foreground=b1,filled_background=bS,unfilled_background=bT},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(bU,bH.Progressbar)return bU end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local bV=h.map(self.value.current,self.value.min,self.value.max,0,1,true)local bW=math.floor(self.size.x*bV)b6:rectangle(self.pos.x,self.pos.y,bW,self.size.y,self.colors.filled_background)b6:rectangle(self.pos.x+bW,self.pos.y,self.size.x-bW,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local bX=g.format_number(bV*100,self.value.percentage_precision).."%"local bY=math.floor((self.size.x-#bX)/2)+self.pos.x;local bP=math.floor((self.size.y-1)/2)+self.pos.y;b6:write(bY,bP,bX,self.colors.foreground)end end,event=function(self,formatted_event)if self.hidden then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)end end end,set=function(self,I)local bZ=h.constrain(I,self.value.min,self.value.max)self.value.current=bZ end},Memo={new=function(a5,a6,aS,aT,b1,b2)local b_={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(aS,aT),editable=true,tab_spaces="  ",rich_text={},lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=bH.Clock.new(0.5),pos=h.Vector2.new(1,1)},limits=h.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=b1,background=b2,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end,onMouseScroll=function()end,onCursorChange=function()end,onWrite=function()end}}b_.cursor.blink.binded_cursor=b_.cursor;f.set_callback(b_.cursor.blink,b.ONCLOCK,function(self,formatted_event)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(b_,bH.Memo)return b_ end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)b6:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local c0=self.cursor.pos.x-self.first_visible_char;local c1=self.cursor.pos.y-self.first_visible_line;for a6=1,self.size.y do local c2=a6+self.first_visible_line-1;local c3=self.rich_text[c2]or{}local bL=self.lines[c2]or""local c4=self.first_visible_char;local c5=self.first_visible_char+self.size.x-1;local c6=bL:sub(c4,c5)local c7=self.pos.y+a6-1;if c3.background then if type(c3.background)=="string"then local c8=c3.background:sub(c4,c5)c8=#c8>0 and c8 or c3.background:sub(#c3.background)b6:blit(self.pos.x,c7,string.rep(" ",self.size.x),nil,c8)else b6:rectangle(self.pos.x,c7,self.size.x,1,c3.background)end end;if c3.foreground then if type(c3.foreground)=="string"then local c9=c3.foreground:sub(c4,c5)c9=#c9>0 and c9 or c3.foreground:sub(#c3.foreground)b6:blit(self.pos.x,c7,c6,c9)else b6:write(self.pos.x,c7,c6,c3.foreground)end else b6:write(self.pos.x,c7,c6,self.colors.foreground)end end;if self.cursor.visible and c0>=0 and c0<self.size.x and c1>=0 and c1<self.size.y then b6:write(c0+self.pos.x,c1+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,formatted_event)if self.hidden then return false end;if not self.editable then return false end;if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,formatted_event)self:focus(true,formatted_event)local a5=formatted_event.x-self.pos.x;local a6=formatted_event.y-self.pos.y;self:set_cursor(a5+self.first_visible_char,a6+self.first_visible_line)return true else self.callbacks.onFailedPress(self,formatted_event)self:focus(false,formatted_event)return false end elseif formatted_event.name==b.DELETED then self:focus(false,formatted_event)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,formatted_event)if formatted_event.name==b.PASTE then self:write(formatted_event.paste)return true elseif formatted_event.name==b.CHAR then if self.callbacks.onChar(self,formatted_event)then return true end;self:write(formatted_event.char)return true elseif formatted_event.name==b.KEY then if self.callbacks.onKey(self,formatted_event)then return true end;if bD:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_UP)then if self.cursor.pos.y>1 then local ca=self.lines[self.cursor.pos.y-1]local cb=self.lines[self.cursor.pos.y]self.lines[self.cursor.pos.y-1]=""table.remove(self.lines,self.cursor.pos.y)local bd=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y-1)self:write(cb.."\n"..ca)self:set_cursor(bd,self.cursor.pos.y-1)end;return true elseif bD:are_keys_pressed(false,b.KEY_LEFTALT,b.KEY_DOWN)then local cb=self.lines[self.cursor.pos.y]local cc=self.lines[self.cursor.pos.y+1]if not cc then return false end;self.lines[self.cursor.pos.y]=""table.remove(self.lines,self.cursor.pos.y+1)local bd=self.cursor.pos.x;self:set_cursor(1,self.cursor.pos.y)self:write(cc.."\n"..cb)self:set_cursor(bd,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_UP then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)return true elseif formatted_event.key==b.KEY_DOWN then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)return true elseif formatted_event.key==b.KEY_RIGHT then local bL=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#bL+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_LEFT then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local cd=self.lines[self.cursor.pos.y-1]self:set_cursor(#cd+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end;return true elseif formatted_event.key==b.KEY_BACKSPACE then local bL=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 then if self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local ce=#self.lines[self.cursor.pos.y-1]+1;local cf=self.cursor.pos.y-1;self:set_cursor(ce,cf)self:write(bL)self:set_cursor(ce,cf)end else local az=bL:sub(1,self.cursor.pos.x-2)..bL:sub(self.cursor.pos.x)self.lines[self.cursor.pos.y]=az;self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)self.callbacks.onWrite(self,az,{az})end;return true elseif formatted_event.key==b.KEY_DELETE then local bL=self.lines[self.cursor.pos.y]local cg=bL:sub(self.cursor.pos.x)if#cg>0 then local az=bL:sub(1,self.cursor.pos.x-1)..bL:sub(self.cursor.pos.x+1)self.lines[self.cursor.pos.y]=az;self.callbacks.onWrite(self,az,{az})else local cc=self.lines[self.cursor.pos.y+1]if cc then local ce=self.cursor.pos.x;local cf=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(cc)self:set_cursor(ce,cf)end end;return true elseif formatted_event.key==b.KEY_ENTER then local ch=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local ci=ch:gsub("(%s*).*","%1")self:write("\n"..ci)return true elseif formatted_event.key==b.KEY_END then self:set_cursor(#self.lines[self.cursor.pos.y]+1,self.cursor.pos.y)return true elseif formatted_event.key==b.KEY_HOME then local ch=self.lines[self.cursor.pos.y]:sub(0,self.cursor.pos.x-1)local ci=ch:gsub("(%s*).*","%1")self:set_cursor(#ci+1,self.cursor.pos.y)return true elseif bD:are_keys_pressed(false,b.KEY_LEFTSHIFT,b.KEY_TAB)then local cj=self.lines[self.cursor.pos.y]local ci=cj:gsub("^(%s*).*$","%1")local ck=math.min(#self.tab_spaces,#ci)local az=cj:sub(ck+1)self.lines[self.cursor.pos.y]=az;self:set_cursor(self.cursor.pos.x-ck,self.cursor.pos.y)self.callbacks.onWrite(self,az,{az})return true elseif formatted_event.key==b.KEY_TAB then local bd=self.cursor.pos.x;local cl=#self.lines[self.cursor.pos.y]self:set_cursor(1,self.cursor.pos.y)self:write(self.tab_spaces)local cm=#self.lines[self.cursor.pos.y]-cl;self:set_cursor(bd+cm,self.cursor.pos.y)return true end elseif formatted_event.name==b.MOUSESCROLL then if self.callbacks.onMouseScroll(self,formatted_event)then return true end;self.first_visible_line=h.constrain(self.first_visible_line+formatted_event.direction,1,#self.lines)return true end end end,focus=function(self,cn,formatted_event)if cn then self.focussed=true;self.callbacks.onFocus(self,formatted_event)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,formatted_event)end end,set_cursor=function(self,ce,cf,co)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then cf=h.constrain(cf,1,self.limits.y)end;if co then for a6=#self.lines+1,cf do if not self.lines[a6]then self.lines[a6]=""end end else cf=h.constrain(cf,1,#self.lines)end;ce=h.constrain(ce,1,#self.lines[cf]+1)local c0=ce-self.first_visible_char;local c1=cf-self.first_visible_line;if c0>=self.size.x then self.first_visible_char=self.first_visible_char+c0-self.size.x+1 elseif c0<0 then self.first_visible_char=self.first_visible_char+c0 end;if c1>=self.size.y then self.first_visible_line=self.first_visible_line+c1-self.size.y+1 elseif c1<0 then self.first_visible_line=self.first_visible_line+c1 end;self.callbacks.onCursorChange(self,ce,cf)self.cursor.pos=h.Vector2.new(ce,cf)end,write=function(self,...)local bg=g.join({...},"")local P=g.split_by_char(bg,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local K="[^"..g.escape_magic_characters(g.join(self.whitelist,"")).."]"for d,bL in next,P do P[d]=bL:gsub(K,"")end elseif#self.blacklist>0 then local K="["..g.escape_magic_characters(g.join(self.blacklist,"")).."]"for d,bL in next,P do P[d]=bL:gsub(K,"")end end;if self.limits.y>0 then for a6=1,#self.lines+#P-1-self.limits.y do table.remove(P)end;if#P==0 then return end end;if#P>1 then for cp,bL in next,P do if cp==1 then local cq=self.lines[self.cursor.pos.y]local cr=cq:sub(1,self.cursor.pos.x-1)local cg=cq:sub(self.cursor.pos.x)local cs=P[#P]if self.limits.x>0 then bL=bL:sub(1,self.limits.x-#cr)cs=cs:sub(1,self.limits.x-#cg)end;self.lines[self.cursor.pos.y]=cr..bL;table.insert(self.lines,self.cursor.pos.y+1,cs..cg)self:set_cursor(#cs+1,self.cursor.pos.y+1)elseif cp==#P then break else if self.limits.x>0 then bL=bL:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,bL)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local cq=self.lines[self.cursor.pos.y]local cr=cq:sub(1,self.cursor.pos.x-1)local cg=cq:sub(self.cursor.pos.x)if self.limits.x>0 then P[1]=P[1]:sub(1,self.limits.x-(#cr+#cg))end;self.lines[self.cursor.pos.y]=cr..P[1]..cg;self:set_cursor(self.cursor.pos.x+#P[1],self.cursor.pos.y)end;self.callbacks.onWrite(self,bg,P)end,print=function(self,...)local bg=g.join({...},"")local az=#self.lines>0 and"\n"or""self:write(az..bg)end,clear=function(self)self.lines={}self.callbacks.onCursorChange(self,1,1)self.cursor.pos=h.Vector2.new(1,1)end},Window={new=function(a5,a6,aS,aT,b2,ct)local cu={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=h.Vector2.new(a5,a6),size=h.Vector2.new(aS,aT),can_drag=false,dragging={enabled=true,from=h.Vector2.new(1,1)},resizing={enabled=true,corner=h.Vector2.new(-1,1),enabled_directions={[-1]={[1]=true,[0]=true,[-1]=true},[0]={[1]=true,[0]=false,[-1]=true},[1]={[1]=true,[0]=true,[-1]=true}},pinned={x=false,y=false},min_size=h.Vector2.new(aS,aT),max_size=h.Vector2.new(aS,aT)*2},shadow={enabled=ct,offset=h.Vector2.new(1,1)},elements={},colors={background=b2,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onDrag=function()end,onResize=function()end}}setmetatable(cu,bH.Window)return cu end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then b6:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;b6:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,formatted_event)if self.hidden then return false end;local cv=self:event_elements(formatted_event)if not cv then if formatted_event.name==b.TOUCH then if k.is_area_pressed(formatted_event.x,formatted_event.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.can_drag=false;if self.resizing.enabled then local cw=true;local cx=formatted_event.y==self.pos.y+self.size.y-1;local cy=formatted_event.y==self.pos.y;if formatted_event.x==self.pos.x+self.size.x-1 then if self.resizing.enabled_directions[1][1]and cx then self.resizing.corner=self.pos.ONE:duplicate()self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][-1]and cy then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[1][0]and not(cx or cy)then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cw=false end elseif formatted_event.x==self.pos.x then if self.resizing.enabled_directions[-1][1]and cx then self.resizing.corner=self.pos.DOWN+self.pos.LEFT;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][-1]and cy then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[-1][0]and not(cx or cy)then self.resizing.corner=self.pos.ONE*-1;self.resizing.pinned.x=false;self.resizing.pinned.y=true else cw=false end elseif self.resizing.enabled_directions[0][1]and cx then self.resizing.corner=self.pos.DOWN+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false elseif self.resizing.enabled_directions[0][-1]and cy then self.resizing.corner=self.pos.UP+self.pos.RIGHT;self.resizing.pinned.x=true;self.resizing.pinned.y=false else cw=false end;if not cw then self.resizing.corner=self.pos.ZERO:duplicate()self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end else self.dragging.from=h.Vector2.new(formatted_event.x,formatted_event.y)self.can_drag=self.dragging.enabled and true end;self.focussed=true;self.callbacks.onPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)return true else self.focussed=false;self.callbacks.onFailedPress(self,formatted_event)self.callbacks.onFocus(self,formatted_event)end elseif formatted_event.name==b.MOUSEDRAG and self.focussed then if self.can_drag then self:drag(formatted_event.x,formatted_event.y)else self:resize(formatted_event.x,formatted_event.y,self.resizing.pinned.x,self.resizing.pinned.y)end;return true elseif formatted_event.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,formatted_event)end else self.focussed=false;self.callbacks.onFocus(self,formatted_event)end;return cv end,drag=function(self,a5,a6)if self.dragging.enabled then local cz=self.pos:duplicate()local cA=h.Vector2.new(a5-self.dragging.from.x,a6-self.dragging.from.y)self.pos=self.pos+cA;self.dragging.from=h.Vector2.new(a5,a6)self.callbacks.onDrag(self,cz.x,cz.y)end end,resize=function(self,a5,a6,cB,cC)if self.resizing.enabled and self.resizing.corner~=self.pos.ZERO then local function cD()self.size.x=h.constrain(self.size.x,self.resizing.min_size.x,self.resizing.max_size.x)self.size.y=h.constrain(self.size.y,self.resizing.min_size.y,self.resizing.max_size.y)end;local cE=h.Vector2.new(a5,a6)local cz=self.pos:duplicate()local cF=self.size:duplicate()if self.resizing.corner==self.pos.ONE then self.size=cE-self.pos+self.pos.ONE;cD()elseif self.resizing.corner==self.pos.ONE*-1 then self.size=self.size+self.pos-cE;cD()local cG=cF-self.size;self.pos=self.pos+cG elseif self.resizing.corner==self.pos.UP+self.pos.RIGHT then self.size.x=cE.x-self.pos.x+1;self.size.y=self.size.y+self.pos.y-cE.y;cD()local cH=cF.y-self.size.y;self.pos.y=self.pos.y+cH elseif self.resizing.corner==self.pos.DOWN+self.pos.LEFT then local cI=self.size.x;self.size.x=self.size.x+self.pos.x-cE.x;self.size.y=cE.y-self.pos.y+1;cD()local cm=cF.x-self.size.x;self.pos.x=self.pos.x+cm end;if cB then self.size.x=cF.x;self.pos.x=cz.x end;if cC then self.size.y=cF.y;self.pos.y=cz.y end;self.callbacks.onResize(self,cz.x,cz.y,cF.x,cF.y)end end,set_elements=function(self,cJ)self.elements={}for d,cK in next,cJ do table.insert(self.elements,cK)end end,draw_elements=function(self)for d=#self.elements,1,-1 do local cK=self.elements[d]if cK.draw then cK.pos=cK.pos+self.pos-self.pos.ONE;cK:draw()cK.pos=cK.pos-self.pos+self.pos.ONE end end end,event_elements=function(self,formatted_event)local cL=formatted_event;if cL.name==b.TOUCH then cL=k.format_event_table(cL.raw)cL.x,cL.y=cL.x-self.pos.x+1,cL.y-self.pos.y+1 end;local cv=false;for d,cK in next,self.elements do if cK.event then local cM=cK:event(cL)cv=cv or cM;if cM then cL={name=b.DELETED}end end end;return cv end}}bH.Clock.__index=bH.Clock;bH.Label.__index=bH.Label;bH.Button.__index=bH.Button;bH.Progressbar.__index=bH.Progressbar;bH.Memo.__index=bH.Memo;bH.Window.__index=bH.Window;local cN={}cN={new=function(cO)local cP={draw_priority=b.LOW_PRIORITY,enabled=false,buffer={},events_whitelist={[b.TOUCH]=true,[b.KEY]=true,[b.KEYUP]=true,[b.CHAR]=true,[b.MOUSEDRAG]=true,[b.MOUSESCROLL]=true,[b.MOUSEUP]=true},close_on_host_disconnect=true,side=b.NONE,mode=b.NONE,host_id=b.NONE,users={},protocol="YAGUI-"..a.ver.."_WSS",broadcast_clock=bH.Clock.new(cO or 4),callbacks={onDraw=function()end,onEvent=function()end,onConnect=function()end,onDisconnect=function()end}}cP.broadcast_clock.WSS=cP;f.set_callback(cP.broadcast_clock,b.ONCLOCK,function(self,formatted_event)rednet.broadcast(b6.frame,self.WSS.protocol)end)setmetatable(cP,cN)return cP end,draw=function(self)if not self.enabled then return false end;self.callbacks.onDraw(self)if self.mode==b.USER then if self.buffer and self.buffer.background and self.buffer.pixels then b6.buffer.background=self.buffer.background;b6.buffer.pixels=self.buffer.pixels end end end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;local cQ=false;if formatted_event.name==b.REDNET then if formatted_event.protocol==self.protocol then local aW=formatted_event.message;if self.mode==b.HOST then if aW==b.CONNECTION_REQUEST then rednet.send(formatted_event.from,b.OK,self.protocol)self.users[formatted_event.from]=true;cQ=true;self.callbacks.onConnect(self,formatted_event)elseif aW==b.DISCONNECTED then self.users[formatted_event.from]=nil;cQ=true;self.callbacks.onDisconnect(self,formatted_event)elseif self.events_whitelist[aW.name or"nil"]and self.users[formatted_event.from]and type(aW)=="table"then if aW.raw then os.queueEvent(table.unpack(aW.raw))end;cQ=true end elseif self.mode==b.USER then if formatted_event.from==self.host_id then if aW==b.DISCONNECTED then if self.close_on_host_disconnect then self:close()end;cQ=true;self.callbacks.onDisconnect(self,formatted_event)elseif type(aW)=="table"then self.buffer=aW;cQ=true end end end end end;if self.mode==b.USER then if formatted_event.name==b.TOUCH then cQ=true end;if self.events_whitelist[tostring(formatted_event.name)]then rednet.send(self.host_id,formatted_event,self.protocol)cQ=true end elseif self.mode==b.HOST then self.broadcast_clock:event(formatted_event)end;return cQ end,use_side=function(self,cR)self.side=cR end,connect=function(self,cS,cT,cU)cT=cT or 2;cU=cU or 10;rednet.open(self.side)self.host_id=cS;self.mode=b.USER;rednet.send(self.host_id,b.CONNECTION_REQUEST,self.protocol)local cV=0;while true do cV=cV+1;local cW={rednet.receive(self.protocol,cT)}if cW[1]==cS and cW[2]==b.OK and cW[3]==self.protocol then return b.OK elseif cV>=cU then local cX=string.format("Connection timed out on attempt %d after %d ms",cV,cT*1000)if#cW>0 then cX=string.format("Connection timed out on attempt %d: invalid response (The traffic on the network may be high, try to increase max attempts)",cV,cT*1000)end;cN:close()error(cX,2)end end;self.callbacks.onConnect(self,cS)end,host=function(self)rednet.open(self.side)self.host_id=os.getComputerID()self.mode=b.HOST end,close=function(self)if rednet.isOpen()then if self.mode==b.HOST then rednet.broadcast(b.DISCONNECTED,self.protocol)elseif self.mode==b.USER then rednet.send(self.host_id,b.DISCONNECTED,self.protocol)end;rednet.close(self.side)end;self.host_id=b.NONE;self.mode=b.NONE end}cN.__index=cN;local cY={}cY={new=function(cZ)local c_={enabled=true,computer_whitelist={},side=b.NONE,mode=b.ALL,password=cZ or b.NONE,protocol="YAGUI-"..a.ver.."_FT",save_dir="/FT",callbacks={onEvent=function()end,onConnect=function()end,onSend=function()end,onReceive=function()end}}setmetatable(c_,cY)return c_ end,event=function(self,formatted_event)if not self.enabled then return false end;if self.callbacks.onEvent(self,formatted_event)then return true end;if formatted_event.name==b.REDNET or formatted_event.protocol==self.protocol then if self.mode==b.ALL or self.mode==b.RECEIVE then local cS=formatted_event.from;if self.computer_whitelist[cS]or self.callbacks.onConnect(self,formatted_event)then local aW=formatted_event.message;if type(aW)=="table"and aW.name and aW.content then if aW.psw==self.password then local aX=fs.getName(tostring(aW.name))local Y=fs.combine(self.save_dir,aX)if fs.exists(Y)then rednet.send(cS,b.NO,self.protocol)else local d0=tostring(aW.content)if self.callbacks.onReceive(self,formatted_event,cS,aX,Y,d0)then return true end;local d1=fs.open(Y,"w")if d1 then d1.write(d0)d1.close()rednet.send(cS,b.OK,self.protocol)else rednet.send(cS,b.ERROR,self.protocol)end end else rednet.send(cS,b.NO,self.protocol)end else rednet.send(cS,b.ERROR,self.protocol)end else rednet.send(cS,b.NO,self.protocol)end end end end,send=function(self,d2,d3,d4,d5)if self.mode==b.ALL or self.mode==b.SEND then d4=d4 or fs.getName(d5)d3=d3 or b.NONE;local d1=fs.open(d5,"r")local d0=d1.readAll()d1.close()local aW={psw=d3,name=d4,content=d0}if self.callbacks.onSend(self,formatted_event,aW)then return true end;rednet.send(d2,aW,self.protocol)end end,open=function(self,cR)self.side=cR;rednet.open(cR)end,close=function(self)if rednet.isOpen()then rednet.close(self.side)end end}cY.__index=cY;local d6={}d6={new=function(d7,d8)local d9={enabled=false,options={raw_mode=false,stop_on_terminate=true,FPS_target=d7,EPS_target=d8},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=bH.Clock.new(1/d7),stats_clock=bH.Clock.new(1),FPS_label=bH.Label.new(1,1,"1 FPS",colors.white),EPS_label=bH.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=h.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,da)self.enabled=da;self.elements.stats_clock.enabled=da;self.elements.FPS_label.hidden=not da;self.elements.EPS_label.hidden=not da end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+h.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}d9.elements.loop.stats_clock.stats=d9.stats;d9.stats.elements=d9.elements.loop;f.set_callback(d9.elements.loop.stats_clock,b.ONCLOCK,function(self,formatted_event)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)d9.stats:enable(false)d9.elements.loop.clock.Loop=d9;f.set_callback(d9.elements.loop.clock,b.ONCLOCK,function(self,formatted_event)self.Loop.callbacks.onClock(self.Loop,formatted_event)self.Loop:draw_elements()self.interval=1/self.Loop.options.FPS_target end)setmetatable(d9,d6)return d9 end,set_monitors=function(self,aY)self.monitors=m.get_monitors(aY)end,set_elements=function(self,cJ)self.elements.high_priority={}self.elements.low_priority={}for d,I in next,cJ do if I.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,I)else table.insert(self.elements.low_priority,I)end end end,draw_elements=function(self)local function db(F)for d=#F,1,-1 do local cK=F[d]if cK.draw then cK:draw()end end end;self.callbacks.onDraw(self)local dc=b6.screens;b6.screens=self.monitors;db(self.elements.low_priority)db(self.elements.high_priority)for d,cK in next,self.elements.loop do if cK.draw then cK:draw()end end;b6:draw()b6.screens=dc;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,formatted_event)local function aU(F)for d,cK in next,F do if cK.event then if cK:event(formatted_event)then formatted_event={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,formatted_event)then formatted_event={name=b.DELETED}end;if self.options.stop_on_terminate and formatted_event.name==b.TERMINATE then self:stop()return end;if formatted_event.name==b.TOUCH then local dd=false;for de,b0 in next,self.monitors do if formatted_event.from==de then dd=true;break end end;if not dd then formatted_event={name=b.DELETED}end end;aU(self.elements.loop)local df={}for d,cK in next,self.elements.high_priority do if cK.event then local dg=cK:event(formatted_event)if dg then formatted_event={name=b.DELETED}if self.elements.high_priority~=cK then table.insert(df,{element=cK,key=d})end end end end;if#df>0 then for d,I in next,df do table.insert(self.elements.high_priority,1,I.element)table.remove(self.elements.high_priority,I.key+#df)end end;aU(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;bD:reset()self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local dh=os.startTimer(1/self.options.EPS_target)local di;if self.options.raw_mode then di={os.pullEventRaw()}else di={os.pullEvent()}end;local formatted_event=k.format_event_table(di)bD:manage_event(formatted_event)self:event_elements(formatted_event)os.cancelTimer(dh)end;bD:reset()self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}d6.__index=d6;setmetatable(h.Vector2,e)setmetatable(h.Vector3,e)setmetatable(cN,e)setmetatable(cY,e)for d,cK in next,bH do setmetatable(cK,e)end;setmetatable(d6,e)local dj={...}if dj[1]=="help"then local P={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for d,bL in next,P do m.better_print(term,bL.foreground,bL.background,bL.text)end elseif dj[1]=="info"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)m.better_print(term,colors.yellow,nil,"Library Author: ",a.author)m.better_print(term,colors.green,nil,"Library Website: ",a.website)m.better_print(term,colors.blue,nil,"Library Documentation: ",a.documentation)elseif dj[1]=="ver"then m.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif dj[1]=="copyright"then local dk={colors.red,colors.yellow,colors.green}local dl=g.split(a.copyright,"\n\n")for d,dm in next,dl do m.better_print(term,dk[d],nil,dm)if d<#dl then read("")end end elseif dj[1]=="setup"then if shell then local dn="YAGUI_PATH"local Y="/"..shell.getRunningProgram()l.set(dn,Y)m.better_print(term,colors.green,nil,"Lib path was set to \"",l.get(dn),"\".")else m.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif dj[1]=="create"then if dj[2]then local Y=shell.resolve(dj[2])if g.get_extension(Y)~="lua"then Y=Y..".lua"end;if fs.exists(Y)then m.better_print(term,colors.red,nil,"PATH: \"/",Y,"\" already exists, please use another path or delete it.")else local d1=fs.open(Y,"w")d1.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")d1.close()m.better_print(term,colors.green,nil,"New project was created at \"/",Y,"\".")end else m.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif dj[1]then m.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",dj[1],"\"")m.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local dp={info=a,generic_utils=f,string_utils=g,math_utils=h,table_utils=i,color_utils=j,event_utils=k,setting_utils=l,monitor_utils=m,screen_buffer=b6,input=bD,WSS=cN,wireless_screen_share=cN,FT=cY,file_transfer=cY,gui_elements=bH,Loop=d6}for d,I in next,b do dp[d]=I end;return dp