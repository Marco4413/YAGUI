--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.7",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",DELETED="DELETED",DISCONNECTED="DISCONNECTED",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,KEY_BACKSPACE=14,KEY_TAB=15,KEY_ENTER=28,KEY_LCONTROL=29,KEY_LSHIFT=42,KEY_RSHIFT=54,KEY_ALT=56,KEY_CAPSLOCK=58,KEY_RCONTROL=157,KEY_UP_ARROW=200,KEY_LEFT_ARROW=203,KEY_RIGHT_ARROW=205,KEY_DOWN_ARROW=208,KEY_DELETE=211,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",COMPUTER_ADVANCED="computer_advanced",TURTLE="turtle",TURTLE_ADVANCED="turtle_advanced",POCKET="pocket",POCKET_ADVANCED="pocket_advanced"}local c={set_callback=function(d,e,f)if e==b.ONSTART then d.callbacks.onStart=f elseif e==b.ONSTOP then d.callbacks.onStop=f elseif e==b.ONDRAW then d.callbacks.onDraw=f elseif e==b.ONPRESS then d.callbacks.onPress=f elseif e==b.ONFAILEDPRESS then d.callbacks.onFailedPress=f elseif e==b.ONTIMEOUT then d.callbacks.onTimeout=f elseif e==b.ONCLOCK then d.callbacks.onClock=f elseif e==b.ONEVENT then d.callbacks.onEvent=f elseif e==b.ONFOCUS then d.callbacks.onFocus=f elseif e==b.ONKEY then d.callbacks.onKey=f elseif e==b.ONCHAR then d.callbacks.onChar=f end end,get_computer_type=function(g)if turtle then if g and term.isColor()then return b.TURTLE_ADVANCED else return b.TURTLE end elseif pocket then if g and term.isColor()then return b.POCKET_ADVANCED else return b.POCKET end else if g and term.isColor()then return b.COMPUTER_ADVANCED else return b.COMPUTER end end end}local h={}h={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(i,j)if not j then j=""end;local k=""for l=1,#i do local m=i[l]k=k..tostring(m)if l<#i then k=k..j end end;return k end,split=function(k,j)local i={}while true do local n=k:find(j)if n then table.insert(i,k:sub(1,n-1))k=k:sub(n+1)else table.insert(i,k)break end end;return i end,compare_versions=function(o,p)local q=h.split(o,".")local r=h.split(p,".")local s=#q;local t=#r;for u=1,math.min(s,t)do if tonumber(q[u])>tonumber(r[u])then return 1 elseif tonumber(q[u])<tonumber(r[u])then return-1 end end;if s>t then return 1 elseif s<t then return-1 end;return 0 end,escape_magic_characters=function(k)for l,v in pairs(h.magic_characters)do k=k:gsub("[%"..v.."]",'%%%'..v)end;return k end,get_extension=function(w)local x,y=w:gsub(".*%.","")if y>0 then return x end;return""end}local z={}z={Vector2={new=function(A,B)local C={x=A or 0,y=B or 0}setmetatable(C,z.Vector2)return C end,length_sq=function(self)return math.pow(self.x,2)+math.pow(self.y,2)end,length=function(self)return math.sqrt(self:length_sq())end,__tostring=function(self)return string.format("(%d; %d)",self.x,self.y)end,__add=function(self,D)return z.Vector2.new(self.x+D.x,self.y+D.y)end,__sub=function(self,D)return z.Vector2.new(self.x-D.x,self.y-D.y)end,__mul=function(self,E)return z.Vector2.new(self.x*E,self.y*E)end,__div=function(self,E)return z.Vector2.new(self.x/E,self.y/E)end,__eq=function(self,D)return self:length_sq()==D:length_sq()end,__lt=function(self,D)return self:length_sq()<D:length_sq()end,__le=function(self,D)return self:length_sq()<=D:length_sq()end},map=function(m,F,G,H,I,J)local K=(m-F)/(G-F)*(I-H)+H;if J then return z.constrain(K,H,I)end;return K end,constrain=function(m,L,M)return math.min(M,math.max(L,m))end}z.Vector2.__index=z.Vector2;z.Vector2.ONE=z.Vector2.new(1,1)z.Vector2.UP=z.Vector2.new(0,-1)z.Vector2.DOWN=z.Vector2.new(0,1)z.Vector2.LEFT=z.Vector2.new(-1,0)z.Vector2.RIGHT=z.Vector2.new(1,0)z.Vector2.ZERO=z.Vector2.new(0,0)local N={has_value=function(i,m)for O,P in pairs(i)do if P==m then return true,O end end;return false,nil end,has_key=function(i,l)if i[l]~=nil then return true,i[l]end;return false,nil end}local Q={}Q={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},color_to_paint=function(R)return Q.colors[R]end,paint_to_color=function(S)local T,R=N.has_value(Q.colors,S)if T then return R end end}local U={is_area_pressed=function(V,W,A,B,X,Y)if V>=A and V<A+X then if W>=B and W<B+Y then return true end end;return false end,format_event_table=function(Z)local e={}e.name=Z[1]if e.name=="mouse_click"then e.name=b.TOUCH;e.from="terminal"e.button=Z[2]e.x=Z[3]e.y=Z[4]return e elseif e.name=="monitor_touch"then e.name=b.TOUCH;e.from=Z[2]e.button=1;e.x=Z[3]e.y=Z[4]return e elseif e.name=="mouse_drag"then e.name=b.MOUSEDRAG;e.button=Z[2]e.x=Z[3]e.y=Z[4]return e elseif e.name=="mouse_scroll"then e.name=b.MOUSESCROLL;e.direction=Z[2]e.x=Z[3]e.y=Z[4]return e elseif e.name=="char"then e.name=b.CHAR;e.char=Z[2]return e elseif e.name=="key"then e.name=b.KEY;e.key=Z[2]return e end;table.remove(Z,1)e.parameters=Z;return e end}local _={_path="/.settings",set=function(self,a0,m)settings.set(a0,m)settings.save(self._path)end,unset=function(self,a0)settings.unset(a0)settings.save(self._path)end,get=function(a0)return settings.get(a0)end}local a1={get_monitors=function(a2)local a3={}for l,a4 in pairs(a2)do if a4=="terminal"then a3[a4]=term else if peripheral.getType(a4)=="monitor"then a3[a4]=peripheral.wrap(a4)end end end;return a3 end,better_print=function(a5,a6,a7,...)local a8=h.join({...},"")local a9=a5.getTextColor()local aa=a5.getBackgroundColor()if a6 then a5.setTextColor(a6)end;if a7 then a5.setBackgroundColor(a7)end;print(a8)a5.setTextColor(a9)a5.setBackgroundColor(aa)end,better_clear=function(a5)a5.clear()a5.setCursorPos(1,1)end}local ab={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,A,B)A=tostring(A)B=tostring(B)if self.pixels[A]then if self.pixels[A][B]then return true end end;return false end,get_pixel=function(self,A,B)A=tostring(A)B=tostring(B)if self:is_pixel_custom(A,B)then return self.pixels[A][B]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,A,B,char,a6,a7)A=tostring(A)B=tostring(B)local ac=self:get_pixel(A,B)if char and#char==1 then ac.char=char end;if a6 then ac.foreground=a6 end;if a7 then ac.background=a7 end;if not self.pixels[A]then self.pixels[A]={}end;self.pixels[A][B]=ac end,clear=function(self)self.pixels={}end},set_screens=function(self,ad)self.screens=a1.get_monitors(ad)end,set_monitors=function(self,a2)self:set_screens(a2)end,clear=function(self)self.buffer:clear()end,draw=function(self)local ae=self.screens;local af=self.buffer;for ag,ah in pairs(ae)do local ai,aj=ah.getCursorPos()local X,Y=ah.getSize()for B=1,Y do local ak={text="",background="",foreground=""}for A=1,X do local ac=af:get_pixel(A,B)ak.text=ak.text..ac.char;ak.background=ak.background..Q.colors[ac.background]ak.foreground=ak.foreground..Q.colors[ac.foreground]end;ah.setCursorPos(1,B)ah.blit(ak.text,ak.foreground,ak.background)end;ah.setCursorPos(ai,aj)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,A,B,R)self.buffer:set_pixel(A,B," ",R,R)end,write=function(self,A,B,al,a6,a7)for am=0,#al-1 do char=al:sub(am+1,am+1)self.buffer:set_pixel(A+am,B,char,a6,a7)end end,rectangle=function(self,A,B,X,Y,R)for am=0,X-1 do for an=0,Y-1 do self:point(A+am,B+an,R)end end end,line=function(self,ao,ap,aq,ar,R)local function as(ao,ap,aq,ar)local at=1;if ao>aq then at=-1 end;local au=aq-ao;local av=ar-ap;local aw=1;if av<0 then aw=-1;av=-av end;local ax=2*av-au;local B=ap;for A=ao,aq,at do self:point(A,B,R)if ax>0 then B=B+aw;ax=ax-2*au end;ax=ax+2*av end end;local function ay(ao,ap,aq,ar)local at=1;if ap>ar then at=-1 end;local au=aq-ao;local av=ar-ap;local az=1;if au<0 then az=-1;au=-au end;local ax=2*au-av;local A=ao;for B=ap,ar,at do self:point(A,B,R)if ax>0 then A=A+az;ax=ax-2*av end;ax=ax+2*au end end;if math.abs(ar-ap)<math.abs(aq-ao)then if ao>aq then as(aq,ar,ao,ap)else as(ao,ap,aq,ar)end else if ap>ar then ay(aq,ar,ao,ap)else ay(ao,ap,aq,ar)end end end,circle=function(self,aA,aB,aC,R)local aD=aC*aC;self:point(aA,aB+aC,R)self:point(aA,aB-aC,R)self:point(aA+aC,aB,R)self:point(aA-aC,aB,R)local A=1;local B=math.floor(math.sqrt(aD-1)+0.5)while A<B do self:point(aA+A,aB+B,R)self:point(aA+A,aB-B,R)self:point(aA-A,aB+B,R)self:point(aA-A,aB-B,R)self:point(aA+B,aB+A,R)self:point(aA+B,aB-A,R)self:point(aA-B,aB+A,R)self:point(aA-B,aB-A,R)A=A+1;B=math.floor(math.sqrt(aD-A*A)+0.5)end;if A==B then self:point(aA+A,aB+B,R)self:point(aA+A,aB-B,R)self:point(aA-A,aB+B,R)self:point(aA-A,aB-B,R)end end}local aE={}aE={side=nil,protocol="YAGUI-"..a.ver.."_WSS",host_prefix="_Host:",default_timeout=0.5,open=function(self,aF)rednet.open(aF)self.side=aF end,close=function(self)rednet.close(self.side)self.side=nil end,server={root={},servername=nil,hostname=nil,host=function(self,aG)if not aG then aG=os.getComputerID()end;aG=tostring(aG)local aH=self.root.protocol..self.root.host_prefix..aG;if rednet.lookup(aH,aG)then return false,aG end;rednet.host(aH,aG)self.servername=aH;self.hostname=aG;return true,aG end,unhost=function(self)rednet.broadcast(b.DISCONNECTED,self.servername)rednet.unhost(self.servername,self.hostname)self.servername=nil;self.hostname=nil end,broadcast=function(self)rednet.broadcast(ab.frame,self.servername)end},client={root={},servername=nil,host_id=nil,connect=function(self,aG)aG=tostring(aG)local aH=self.root.protocol..self.root.host_prefix..aG;local aI=rednet.lookup(aH,aG)if not aI then return false,aG end;self.servername=aH;self.host_id=aI;return true,aG end,disconnect=function(self)self.servername=nil;self.host_id=nil end,listen=function(self,aJ)if not aJ then aJ=self.root.default_timeout end;local aK={rednet.receive(self.servername,aJ)}if aK[1]==self.host_id then local af=aK[2]if not af then return false end;if af==b.DISCONNECTED then return af end;ab.buffer.background=af.background;ab.buffer.pixels=af.pixels;return true end;return false end}}aE.server.root=aE;aE.client.root=aE;local aL={}aL={Clock={new=function(aM)local aN={enabled=true,oneshot=false,clock=os.clock(),interval=aM,callbacks={onClock=function()end}}setmetatable(aN,aL.Clock)return aN end,event=function(self,aO)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,aO)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(A,B,al,a6,a7)local aP={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text=al,pos=z.Vector2.new(A,B),colors={foreground=a6,background=a7},callbacks={onDraw=function()end}}setmetatable(aP,aL.Label)return aP end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local aQ=h.split(self.text,"\n")local aR=0;for l,aS in pairs(aQ)do if l==1 then aR=math.floor(#aS/2)ab:write(self.pos.x,self.pos.y,aS,self.colors.foreground,self.colors.background)else ab:write(self.pos.x+aR-math.floor(#aS/2),self.pos.y+l-1,aS,self.colors.foreground,self.colors.background)end end end},Button={new=function(A,B,X,Y,al,a6,aT,aU)local aV={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,text=al,pos=z.Vector2.new(A,B),size=z.Vector2.new(X,Y),timed={enabled=false,clock=aL.Clock.new(0.5)},colors={foreground=a6,active_background=aT,unactive_background=aU},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}aV.timed.clock.binded_button=aV;aV.timed.clock.oneshot=true;aV.timed.clock:stop()c.set_callback(aV.timed.clock,b.ONCLOCK,function(self,aO)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,aO)self.binded_button.callbacks.onTimeout(self.binded_button,aO)end)setmetatable(aV,aL.Button)return aV end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then ab:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else ab:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local aW=h.split(self.text,"\n")local aX=math.floor((self.size.y-#aW)/2)+self.pos.y;for an=0,#aW-1 do local m=aW[an+1]local aY=math.floor((self.size.x-#m)/2)+self.pos.x;ab:write(aY,aX+an,m,self.colors.foreground)end end,event=function(self,aO)if self.hidden then return false end;if aO.name==b.TOUCH then if U.is_area_pressed(aO.x,aO.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,aO)end else self:press(aO)end;return true else self.callbacks.onFailedPress(self,aO)end end;if self.timed.enabled then self.timed.clock:event(aO)end end,press=function(self,aO)self.active=not self.active;self.callbacks.onPress(self,aO)end},Progressbar={new=function(A,B,X,Y,aZ,L,M,a6,a_,b0)local b1={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=z.Vector2.new(A,B),size=z.Vector2.new(X,Y),value={max=M,min=L,current=aZ,draw_percentage=true},colors={foreground=a6,filled_background=a_,unfilled_background=b0},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(b1,aL.Progressbar)return b1 end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local b2=z.map(self.value.current,self.value.min,self.value.max,0,1,true)local b3=math.floor(self.size.x*b2)ab:rectangle(self.pos.x,self.pos.y,b3,self.size.y,self.colors.filled_background)ab:rectangle(self.pos.x+b3,self.pos.y,self.size.x-b3,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local b4=tostring(b2*100).."%"local b5=math.floor((self.size.x-#b4)/2)+self.pos.x;local aX=math.floor((self.size.y-1)/2)+self.pos.y;ab:write(b5,aX,b4,self.colors.foreground)end end,event=function(self,aO)if self.hidden then return false end;if aO.name==b.TOUCH then if U.is_area_pressed(aO.x,aO.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,aO)end end end,set=function(self,m)local b6=z.constrain(m,self.value.min,self.value.max)self.value.current=b6 end},Memo={new=function(A,B,X,Y,a6,a7)local b7={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=z.Vector2.new(A,B),size=z.Vector2.new(X,Y),editable=true,lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=aL.Clock.new(0.5),pos=z.Vector2.new(1,1)},limits=z.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=a6,background=a7,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end}}b7.cursor.blink.binded_cursor=b7.cursor;c.set_callback(b7.cursor.blink,b.ONCLOCK,function(self,aO)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(b7,aL.Memo)return b7 end,draw=function(self)if self.hidden then return end;ab:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local b8=self.cursor.pos.x-self.first_visible_char;local b9=self.cursor.pos.y-self.first_visible_line;if b8>=self.size.x then self.first_visible_char=self.first_visible_char+b8-self.size.x+1;b8=self.cursor.pos.x-self.first_visible_char-1 elseif b8<1 then self.first_visible_char=self.first_visible_char+b8;b8=0 end;if b9>=self.size.y then self.first_visible_line=self.first_visible_line+b9-self.size.y+1;b9=self.cursor.pos.y-self.first_visible_line-1 elseif b9<1 then self.first_visible_line=self.first_visible_line+b9;b9=0 end;for B=1,self.size.y do local aS=self.lines[B+self.first_visible_line-1]or""local ba=aS:sub(self.first_visible_char,self.first_visible_char+self.size.x-1)ab:write(self.pos.x,self.pos.y+B-1,ba,self.colors.foreground)end;if self.cursor.visible then ab:write(b8+self.pos.x,b9+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,aO)if self.hidden then return false end;if not self.editable then return false end;if aO.name==b.TOUCH then if U.is_area_pressed(aO.x,aO.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then local A=aO.x-self.pos.x;local B=aO.y-self.pos.y;self:set_cursor(A+self.first_visible_char,B+self.first_visible_line)self:focus(true,aO)self.callbacks.onPress(self,aO)return true else self:focus(false,aO)self.callbacks.onFailedPress(self,aO)return false end elseif aO.name==b.DELETED then self:focus(false,aO)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,aO)if aO.name==b.CHAR then if self.callbacks.onChar(self,aO)then return true end;self:write(aO.char)return true elseif aO.name==b.KEY then if self.callbacks.onKey(self,aO)then return true end;if aO.key==b.KEY_UP_ARROW then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)elseif aO.key==b.KEY_DOWN_ARROW then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)elseif aO.key==b.KEY_RIGHT_ARROW then local aS=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#aS+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end elseif aO.key==b.KEY_LEFT_ARROW then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local bb=self.lines[self.cursor.pos.y-1]self:set_cursor(#bb+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif aO.key==b.KEY_BACKSPACE then local aS=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local bc=#self.lines[self.cursor.pos.y-1]+1;local bd=self.cursor.pos.y-1;self:set_cursor(bc,bd)self:write(aS)self:set_cursor(bc,bd)else self.lines[self.cursor.pos.y]=aS:sub(1,self.cursor.pos.x-2)..aS:sub(self.cursor.pos.x)self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif aO.key==b.KEY_DELETE then local aS=self.lines[self.cursor.pos.y]local be=aS:sub(self.cursor.pos.x)if#be>0 then self.lines[self.cursor.pos.y]=aS:sub(1,self.cursor.pos.x-1)..aS:sub(self.cursor.pos.x+1)else local bf=self.lines[self.cursor.pos.y+1]if bf then local bc=self.cursor.pos.x;local bd=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(bf)self:set_cursor(bc,bd)end end elseif aO.key==b.KEY_ENTER then self:write("\n")elseif aO.key==b.KEY_TAB then self:write("  ")end;return true elseif aO.name==b.MOUSESCROLL then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+aO.direction)end end end,focus=function(self,bg,aO)if bg then self.focussed=true;self.callbacks.onFocus(self,aO)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,aO)end end,set_cursor=function(self,bc,bd,bh)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then bd=z.constrain(bd,1,self.limits.y)end;if bh then for B=#self.lines+1,bd do if not self.lines[B]then self.lines[B]=""end end else bd=z.constrain(bd,1,#self.lines)end;bc=z.constrain(bc,1,#self.lines[bd]+1)self.cursor.pos=z.Vector2.new(bc,bd)end,write=function(self,...)local al=h.join({...},"")local aQ=h.split(al,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local bi="[^"..h.escape_magic_characters(h.join(self.whitelist,"")).."]"for l,aS in pairs(aQ)do aQ[l]=aS:gsub(bi,"")end elseif#self.blacklist>0 then local bi="["..h.escape_magic_characters(h.join(self.blacklist,"")).."]"for l,aS in pairs(aQ)do aQ[l]=aS:gsub(bi,"")end end;if self.limits.y>0 then for B=1,#self.lines+#aQ-1-self.limits.y do table.remove(aQ)end;if#aQ==0 then return end end;if#aQ>1 then for bj,aS in pairs(aQ)do if bj==1 then local bk=self.lines[self.cursor.pos.y]local bl=bk:sub(1,self.cursor.pos.x-1)local be=bk:sub(self.cursor.pos.x)local bm=aQ[#aQ]if self.limits.x>0 then aS=aS:sub(1,self.limits.x-#bl)bm=bm:sub(1,self.limits.x-#be)end;self.lines[self.cursor.pos.y]=bl..aS;self:set_cursor(1,self.cursor.pos.y+1,true)table.insert(self.lines,self.cursor.pos.y,bm..be)self:set_cursor(#bm+1,self.cursor.pos.y)elseif bj==#aQ then break else if self.limits.x>0 then aS=aS:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,aS)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local bk=self.lines[self.cursor.pos.y]local bl=bk:sub(1,self.cursor.pos.x-1)local be=bk:sub(self.cursor.pos.x)if self.limits.x>0 then aQ[1]=aQ[1]:sub(1,self.limits.x-(#bl+#be))end;self.lines[self.cursor.pos.y]=bl..aQ[1]..be;self:set_cursor(self.cursor.pos.x+#aQ[1],self.cursor.pos.y)end end,print=function(self,...)local al=h.join({...},"\n").."\n"self:write(al)end,clear=function(self)self.lines={""}self:set_cursor(1,1)end},Window={new=function(A,B,X,Y,a7,bn)local bo={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=z.Vector2.new(A,B),size=z.Vector2.new(X,Y),drag_options={enabled=true,from=z.Vector2.new(1,1)},shadow={enabled=bn,offset=z.Vector2.new(1,1)},elements={},colors={background=a7,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end}}setmetatable(bo,aL.Window)return bo end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then ab:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;ab:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,aO)if self.hidden then return false end;local bp=self:event_elements(aO)if not bp then if aO.name==b.TOUCH then if U.is_area_pressed(aO.x,aO.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=z.Vector2.new(aO.x,aO.y)self.focussed=true;self.callbacks.onPress(self,aO)self.callbacks.onFocus(self,aO)return true else self.focussed=false;self.callbacks.onFailedPress(self,aO)self.callbacks.onFocus(self,aO)end elseif aO.name==b.MOUSEDRAG and self.focussed then self:drag(aO.x,aO.y)return true elseif aO.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,aO)end else self.focussed=false;self.callbacks.onFocus(self,aO)end;return bp end,drag=function(self,A,B)if self.drag_options.enabled then local bq=z.Vector2.new(A-self.drag_options.from.x,B-self.drag_options.from.y)self.pos=self.pos+bq;for l,br in pairs(self.elements)do if br.pos then br.pos=br.pos+bq end end;self.drag_options.from=z.Vector2.new(A,B)end end,set_elements=function(self,bs,bt)self.elements={}for l,br in pairs(bs)do if bt then br.pos=self.pos+br.pos-z.Vector2.ONE end;table.insert(self.elements,br)end end,draw_elements=function(self)for l=#self.elements,1,-1 do local br=self.elements[l]if br.draw then br:draw()end end end,event_elements=function(self,aO)local bp=false;for l,br in pairs(self.elements)do if br.event then local bu=br:event(aO)bp=bp or bu;if bu then aO={name=b.DELETED}end end end;return bp end}}aL.Clock.__index=aL.Clock;aL.Label.__index=aL.Label;aL.Button.__index=aL.Button;aL.Progressbar.__index=aL.Progressbar;aL.Memo.__index=aL.Memo;aL.Window.__index=aL.Window;local bv={}bv={new=function(bw,bx)local by={options={enabled=false,FPS_target=bw,EPS_target=bx},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=aL.Clock.new(1/bw),stats_clock=aL.Clock.new(1),FPS_label=aL.Label.new(1,1,"1 FPS",colors.white),EPS_label=aL.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=z.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,bz)self.enabled=bz;self.elements.stats_clock.enabled=bz;self.elements.FPS_label.hidden=not bz;self.elements.EPS_label.hidden=not bz end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+z.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}by.elements.loop.stats_clock.stats=by.stats;by.stats.elements=by.elements.loop;c.set_callback(by.elements.loop.stats_clock,b.ONCLOCK,function(self,aO)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)by.stats:enable(false)setmetatable(by,bv)return by end,set_monitors=function(self,a2)self.monitors=a1.get_monitors(a2)end,set_elements=function(self,bs)self.elements.high_priority={}self.elements.low_priority={}for l,m in pairs(bs)do if m.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,m)else table.insert(self.elements.low_priority,m)end end end,draw_elements=function(self)local function bA(i)for l=#i,1,-1 do local br=i[l]if br.draw then br:draw()end end end;self.callbacks.onDraw(self)local bB=ab.screens;ab.screens=self.monitors;bA(self.elements.low_priority)bA(self.elements.high_priority)for l,br in pairs(self.elements.loop)do if br.draw then br:draw()end end;ab:draw()ab.screens=bB;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,bC)local aO=U.format_event_table(bC)local function Z(i)for l,br in pairs(i)do if br.event then if br:event(aO)then aO={name=b.DELETED}end end end end;if self.callbacks.onEvent(self,aO)then aO={name=b.DELETED}end;if aO.name==b.TOUCH then local bD=false;for bE,a5 in pairs(self.monitors)do if aO.from==bE then bD=true;break end end;if not bD then aO={name=b.DELETED}end end;Z(self.elements.loop)local bF={}for l,br in pairs(self.elements.high_priority)do if br.event then local bG=br:event(aO)if bG then aO={name=b.DELETED}if self.elements.high_priority~=br then table.insert(bF,{element=br,key=l})end end end end;if#bF>0 then for l,m in pairs(bF)do table.insert(self.elements.high_priority,1,m.element)table.remove(self.elements.high_priority,m.key+#bF)end end;Z(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;c.set_callback(self.elements.loop.clock,b.ONCLOCK,function(bH,aO)self.callbacks.onClock(self,aO)self:draw_elements()bH.interval=1/self.options.FPS_target end)self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local bI=os.startTimer(1/self.options.EPS_target)local bC={os.pullEvent()}self:event_elements(bC)os.cancelTimer(bI)end;self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}bv.__index=bv;local bJ={...}if bJ[1]=="help"then local aQ={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil},{text=" - create <PATH> (creates a new YAGUI project)",foreground=colors.green,background=nil}}for l,aS in pairs(aQ)do a1.better_print(term,aS.foreground,aS.background,aS.text)end elseif bJ[1]=="info"then a1.better_print(term,colors.red,nil,"Library Version: ",a.ver)a1.better_print(term,colors.yellow,nil,"Library Author: ",a.author)a1.better_print(term,colors.green,nil,"Library Website: ",a.website)elseif bJ[1]=="ver"then a1.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif bJ[1]=="copyright"then local bK={colors.red,colors.yellow,colors.green}local bL=h.split(a.copyright,"\n\n")for l,bM in pairs(bL)do a1.better_print(term,bK[l],nil,bM)if l<#bL then read("")end end elseif bJ[1]=="setup"then if shell then local bN="YAGUI_PATH"local w="/"..shell.getRunningProgram()_:set(bN,w)a1.better_print(term,colors.green,nil,"Lib path was set to \"",_.get(bN),"\".")else a1.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE!")end elseif bJ[1]=="create"then if bJ[2]then local w=shell.resolve(bJ[2])local a0=fs.getName(w):lower()if h.get_extension(w)~="lua"then w=w..".lua"end;if fs.exists(w)then a1.better_print(term,colors.red,nil,"PATH: \"/",w,"\" already exists, please use another path or delete it.")else local bO=fs.open(w,"w")bO.write("\n-- AUTO-GENERATED with \"YAGUI create\"\nlocal YAGUI_PATH = settings.get(\"YAGUI_PATH\")\nif not (type(YAGUI_PATH) == \"string\") then printError(\"YAGUI is not installed, please install it by opening it with argument \\\"setup\\\".\"); return; end\nif not fs.exists(YAGUI_PATH) then printError(\"Couldn't find YAGUI in path: \\\"\"..YAGUI_PATH..\"\\\", Please reinstall it by opening it with argument \\\"setup\\\".\"); return; end\nlocal YAGUI = dofile(YAGUI_PATH)\n-- End of AUTO-GENERATED code\n\n")bO.close()a1.better_print(term,colors.green,nil,"New project was created at \"/",w,"\".")end else a1.better_print(term,colors.red,nil,"You must specify a path to create a new project.")end elseif bJ[1]then a1.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",bJ[1],"\"")a1.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local bP={info=a,generic_utils=c,string_utils=h,math_utils=z,table_utils=N,color_utils=Q,event_utils=U,setting_utils=_,monitor_utils=a1,screen_buffer=ab,WSS=aE,wireless_screen_share=aE,gui_elements=aL,Loop=bv}for l,m in pairs(b)do bP[l]=m end;return bP