--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.5.1",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",CHAR="char",KEY="key",DELETED="DELETED",DISCONNECTED="DISCONNECTED",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,KEY_BACKSPACE=14,KEY_TAB=15,KEY_ENTER=28,KEY_LCONTROL=29,KEY_LSHIFT=42,KEY_RSHIFT=54,KEY_ALT=56,KEY_CAPSLOCK=58,KEY_RCONTROL=157,KEY_UP_ARROW=200,KEY_LEFT_ARROW=203,KEY_RIGHT_ARROW=205,KEY_DOWN_ARROW=208,KEY_DELETE=211,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,COMPUTER="computer",COMPUTER_ADVANCED="computer_advanced",TURTLE="turtle",TURTLE_ADVANCED="turtle_advanced",POCKET="pocket",POCKET_ADVANCED="pocket_advanced"}local c={set_callback=function(d,e,f)if e==b.ONSTART then d.callbacks.onStart=f elseif e==b.ONSTOP then d.callbacks.onStop=f elseif e==b.ONDRAW then d.callbacks.onDraw=f elseif e==b.ONPRESS then d.callbacks.onPress=f elseif e==b.ONFAILEDPRESS then d.callbacks.onFailedPress=f elseif e==b.ONTIMEOUT then d.callbacks.onTimeout=f elseif e==b.ONCLOCK then d.callbacks.onClock=f elseif e==b.ONEVENT then d.callbacks.onEvent=f elseif e==b.ONFOCUS then d.callbacks.onFocus=f elseif e==b.ONKEY then d.callbacks.onKey=f elseif e==b.ONCHAR then d.callbacks.onChar=f end end,get_computer_type=function(g)if turtle then if g and term.isColor()then return b.TURTLE_ADVANCED else return b.TURTLE end elseif pocket then if g and term.isColor()then return b.POCKET_ADVANCED else return b.POCKET end else if g and term.isColor()then return b.COMPUTER_ADVANCED else return b.COMPUTER end end end}local h={}h={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(i,j)if not j then j=""end;local k=""for l=1,#i do local m=i[l]k=k..tostring(m)if l<#i then k=k..j end end;return k end,split=function(k,j)local i={}for n in k:gmatch("[^"..h.escape_magic_characters(j).."]+")do table.insert(i,n)end;if not(#i>0)then table.insert(i,k)end;return i end,compare_versions=function(o,p)local q=h.split(o,".")local r=h.split(p,".")local s=#q;local t=#r;for u=1,math.min(s,t)do if tonumber(q[u])>tonumber(r[u])then return 1 elseif tonumber(q[u])<tonumber(r[u])then return-1 end end;if s>t then return 1 elseif s<t then return-1 end;return 0 end,escape_magic_characters=function(k)for l,v in pairs(h.magic_characters)do k=k:gsub("[%"..v.."]",'%%%'..v)end;return k end}local w={}w={Vector2={new=function(x,y)local z={x=x,y=y}setmetatable(z,w.Vector2)return z end,__add=function(self,A)return w.Vector2.new(self.x+A.x,self.y+A.y)end,__sub=function(self,A)return w.Vector2.new(self.x-A.x,self.y-A.y)end,__mul=function(self,B)return w.Vector2.new(self.x*B,self.y*B)end,__div=function(self,B)return w.Vector2.new(self.x/B,self.y/B)end},map=function(m,C,D,E,F,G)local H=(m-C)/(D-C)*(F-E)+E;if G then return w.constrain(H,E,F)end;return H end,constrain=function(m,I,J)return math.min(J,math.max(I,m))end}w.Vector2.__index=w.Vector2;local K={has_value=function(i,m)for L,M in pairs(i)do if M==m then return true,L end end;return false,nil end,has_key=function(i,l)if i[l]~=nil then return true,i[l]end;return false,nil end}local N={}N={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},color_to_paint=function(O)return N.colors[O]end,paint_to_color=function(P)local Q,O=K.has_value(N.colors,P)if Q then return O end end}local R={is_area_pressed=function(S,T,x,y,U,V)if S>=x and S<x+U then if T>=y and T<y+V then return true end end;return false end,format_event_table=function(W)local e={}e.name=W[1]if e.name=="mouse_click"then e.name=b.TOUCH;e.from="terminal"e.button=W[2]e.x=W[3]e.y=W[4]return e elseif e.name=="monitor_touch"then e.name=b.TOUCH;e.from=W[2]e.button=1;e.x=W[3]e.y=W[4]return e elseif e.name=="char"then e.name=b.CHAR;e.char=W[2]return e elseif e.name=="key"then e.name=b.KEY;e.key=W[2]return e elseif e.name=="mouse_drag"then e.name=b.MOUSEDRAG;e.button=W[2]e.x=W[3]e.y=W[4]return e end;table.remove(W,1)e.parameters=W;return e end}local X={_path="/.settings",set=function(self,Y,m)settings.set(Y,m)settings.save(self._path)end,unset=function(self,Y)settings.unset(Y)settings.save(self._path)end,get=function(Y)return settings.get(Y)end}local Z={get_monitors=function(_)local a0={}for l,a1 in pairs(_)do if a1=="terminal"then a0[a1]=term else if peripheral.getType(a1)=="monitor"then a0[a1]=peripheral.wrap(a1)end end end;return a0 end,better_print=function(a2,a3,a4,...)local a5=h.join({...},"")local a6=a2.getTextColor()local a7=a2.getBackgroundColor()if a3 then a2.setTextColor(a3)end;if a4 then a2.setBackgroundColor(a4)end;print(a5)a2.setTextColor(a6)a2.setBackgroundColor(a7)end,better_clear=function(a2)a2.clear()a2.setCursorPos(1,1)end}local a8={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,x,y)x=tostring(x)y=tostring(y)if self.pixels[x]then if self.pixels[x][y]then return true end end;return false end,get_pixel=function(self,x,y)x=tostring(x)y=tostring(y)if self:is_pixel_custom(x,y)then return self.pixels[x][y]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,x,y,char,a3,a4)x=tostring(x)y=tostring(y)local a9=self:get_pixel(x,y)if char and#char==1 then a9.char=char end;if a3 then a9.foreground=a3 end;if a4 then a9.background=a4 end;if not self.pixels[x]then self.pixels[x]={}end;self.pixels[x][y]=a9 end,clear=function(self)self.pixels={}end},set_screens=function(self,aa)self.screens=Z.get_monitors(aa)end,set_monitors=function(self,_)self:set_screens(_)end,clear=function(self)self.buffer:clear()end,draw=function(self)local ab=self.screens;local ac=self.buffer;for ad,ae in pairs(ab)do local af,ag=ae.getCursorPos()local U,V=ae.getSize()for y=1,V do local ah={text="",background="",foreground=""}for x=1,U do local a9=ac:get_pixel(x,y)ah.text=ah.text..a9.char;ah.background=ah.background..N.colors[a9.background]ah.foreground=ah.foreground..N.colors[a9.foreground]end;ae.setCursorPos(1,y)ae.blit(ah.text,ah.foreground,ah.background)end;ae.setCursorPos(af,ag)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,x,y,O)self.buffer:set_pixel(x,y," ",O,O)end,write=function(self,x,y,n,a3,a4)for ai=0,#n-1 do char=n:sub(ai+1,ai+1)self.buffer:set_pixel(x+ai,y,char,a3,a4)end end,rectangle=function(self,x,y,U,V,O)for ai=0,U-1 do for aj=0,V-1 do self:point(x+ai,y+aj,O)end end end,line=function(self,ak,al,am,an,O)local function ao(ak,al,am,an)local ap=1;if ak>am then ap=-1 end;local aq=am-ak;local ar=an-al;local as=1;if ar<0 then as=-1;ar=-ar end;local at=2*ar-aq;local y=al;for x=ak,am,ap do self:point(x,y,O)if at>0 then y=y+as;at=at-2*aq end;at=at+2*ar end end;local function au(ak,al,am,an)local ap=1;if al>an then ap=-1 end;local aq=am-ak;local ar=an-al;local av=1;if aq<0 then av=-1;aq=-aq end;local at=2*aq-ar;local x=ak;for y=al,an,ap do self:point(x,y,O)if at>0 then x=x+av;at=at-2*ar end;at=at+2*aq end end;if math.abs(an-al)<math.abs(am-ak)then if ak>am then ao(am,an,ak,al)else ao(ak,al,am,an)end else if al>an then au(am,an,ak,al)else au(ak,al,am,an)end end end,circle=function(self,aw,ax,ay,O)local az=ay*ay;self:point(aw,ax+ay,O)self:point(aw,ax-ay,O)self:point(aw+ay,ax,O)self:point(aw-ay,ax,O)local x=1;local y=math.floor(math.sqrt(az-1)+0.5)while x<y do self:point(aw+x,ax+y,O)self:point(aw+x,ax-y,O)self:point(aw-x,ax+y,O)self:point(aw-x,ax-y,O)self:point(aw+y,ax+x,O)self:point(aw+y,ax-x,O)self:point(aw-y,ax+x,O)self:point(aw-y,ax-x,O)x=x+1;y=math.floor(math.sqrt(az-x*x)+0.5)end;if x==y then self:point(aw+x,ax+y,O)self:point(aw+x,ax-y,O)self:point(aw-x,ax+y,O)self:point(aw-x,ax-y,O)end end}local aA={}aA={side=nil,protocol="YAGUI-"..a.ver.."_WSS",host_prefix="_Host:",default_timeout=0.5,open=function(self,aB)rednet.open(aB)self.side=aB end,close=function(self)rednet.close(self.side)self.side=nil end,server={root={},servername=nil,hostname=nil,host=function(self,aC)if not aC then aC=os.getComputerID()end;aC=tostring(aC)local aD=self.root.protocol..self.root.host_prefix..aC;if rednet.lookup(aD,aC)then return false,aC end;rednet.host(aD,aC)self.servername=aD;self.hostname=aC;return true,aC end,unhost=function(self)rednet.broadcast(b.DISCONNECTED,self.servername)rednet.unhost(self.servername,self.hostname)self.servername=nil;self.hostname=nil end,broadcast=function(self)rednet.broadcast(a8.frame,self.servername)end},client={root={},servername=nil,host_id=nil,connect=function(self,aC)aC=tostring(aC)local aD=self.root.protocol..self.root.host_prefix..aC;local aE=rednet.lookup(aD,aC)if not aE then return false,aC end;self.servername=aD;self.host_id=aE;return true,aC end,disconnect=function(self)self.servername=nil;self.host_id=nil end,listen=function(self,aF)if not aF then aF=self.root.default_timeout end;local aG={rednet.receive(self.servername,aF)}if aG[1]==self.host_id then local ac=aG[2]if not ac then return false end;if ac==b.DISCONNECTED then return ac end;a8.buffer.background=ac.background;a8.buffer.pixels=ac.pixels;return true end;return false end}}aA.server.root=aA;aA.client.root=aA;local aH={}aH={Clock={new=function(aI)local aJ={enabled=true,oneshot=false,clock=os.clock(),interval=aI,callbacks={onClock=function()end}}setmetatable(aJ,aH.Clock)return aJ end,event=function(self,aK)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,aK)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(x,y,n,a3,a4)local aL={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text=n,pos=w.Vector2.new(x,y),colors={foreground=a3,background=a4},callbacks={onDraw=function()end}}setmetatable(aL,aH.Label)return aL end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local aM=h.split(self.text,"\n")local aN=0;for l,aO in pairs(aM)do if l==1 then aN=math.floor(#aO/2)a8:write(self.pos.x,self.pos.y,aO,self.colors.foreground,self.colors.background)else a8:write(self.pos.x+aN-math.floor(#aO/2),self.pos.y+l-1,aO,self.colors.foreground,self.colors.background)end end end,event=function(self,aK)if self.hidden then return false end;return false end},Button={new=function(x,y,U,V,n,a3,aP,aQ)local aR={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,text=n,pos=w.Vector2.new(x,y),size=w.Vector2.new(U,V),timed={enabled=false,clock=aH.Clock.new(0.5)},colors={foreground=a3,active_background=aP,unactive_background=aQ},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}aR.timed.clock.binded_button=aR;aR.timed.clock.oneshot=true;aR.timed.clock:stop()c.set_callback(aR.timed.clock,b.ONCLOCK,function(self,aK)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,aK)self.binded_button.callbacks.onTimeout(self.binded_button,aK)end)setmetatable(aR,aH.Button)return aR end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then a8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else a8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local aS=h.split(self.text,"\n")local aT=math.floor((self.size.y-#aS)/2)+self.pos.y;for aj=0,#aS-1 do local m=aS[aj+1]local aU=math.floor((self.size.x-#m)/2)+self.pos.x;a8:write(aU,aT+aj,m,self.colors.foreground)end end,event=function(self,aK)if self.hidden then return false end;if aK.name==b.TOUCH then if R.is_area_pressed(aK.x,aK.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,aK)end else self:press(aK)end;return true else self.callbacks.onFailedPress(self,aK)end end;if self.timed.enabled then self.timed.clock:event(aK)end end,press=function(self,aK)self.active=not self.active;self.callbacks.onPress(self,aK)end},Progressbar={new=function(x,y,U,V,aV,I,J,a3,aW,aX)local aY={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=w.Vector2.new(x,y),size=w.Vector2.new(U,V),value={max=J,min=I,current=aV,draw_percentage=true},colors={foreground=a3,filled_background=aW,unfilled_background=aX},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(aY,aH.Progressbar)return aY end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local aZ=w.map(self.value.current,self.value.min,self.value.max,0,1,true)local a_=math.floor(self.size.x*aZ)a8:rectangle(self.pos.x,self.pos.y,a_,self.size.y,self.colors.filled_background)a8:rectangle(self.pos.x+a_,self.pos.y,self.size.x-a_,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local b0=tostring(aZ*100).."%"local b1=math.floor((self.size.x-#b0)/2)+self.pos.x;local aT=math.floor((self.size.y-1)/2)+self.pos.y;a8:write(b1,aT,b0,self.colors.foreground)end end,event=function(self,aK)if self.hidden then return false end;if aK.name==b.TOUCH then if R.is_area_pressed(aK.x,aK.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,aK)end end end,set=function(self,m)local b2=w.constrain(m,self.value.min,self.value.max)self.value.current=b2 end},Memo={new=function(x,y,U,V,a3,a4)local b3={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=w.Vector2.new(x,y),size=w.Vector2.new(U,V),editable=true,lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=aH.Clock.new(0.5),pos=w.Vector2.new(1,1)},limits=w.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=a3,background=a4,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end}}b3.cursor.blink.binded_cursor=b3.cursor;c.set_callback(b3.cursor.blink,b.ONCLOCK,function(self,aK)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(b3,aH.Memo)return b3 end,draw=function(self)if self.hidden then return end;a8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local b4=self.cursor.pos.x-self.first_visible_char;local b5=self.cursor.pos.y-self.first_visible_line;if b4>=self.size.x then self.first_visible_char=self.first_visible_char+b4-self.size.x+1;b4=self.cursor.pos.x-self.first_visible_char-1 elseif b4<1 then self.first_visible_char=self.first_visible_char+b4;b4=0 end;if b5>=self.size.y then self.first_visible_line=self.first_visible_line+b5-self.size.y+1;b5=self.cursor.pos.y-self.first_visible_line-1 elseif b5<1 then self.first_visible_line=self.first_visible_line+b5;b5=0 end;for y=1,self.size.y do local aO=self.lines[y+self.first_visible_line-1]or""local b6=aO:sub(self.first_visible_char,self.first_visible_char+self.size.x-1)a8:write(self.pos.x,self.pos.y+y-1,b6,self.colors.foreground)end;if self.cursor.visible then a8:write(b4+self.pos.x,b5+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,aK)if self.hidden then return false end;if not self.editable then return false end;if aK.name==b.TOUCH then if R.is_area_pressed(aK.x,aK.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then local x=aK.x-self.pos.x;local y=aK.y-self.pos.y;self:set_cursor(x+self.first_visible_char,y+self.first_visible_line)self:focus(true,aK)self.callbacks.onPress(self,aK)return true else self:focus(false,aK)self.callbacks.onFailedPress(self,aK)return false end elseif aK.name==b.DELETED then self:focus(false,aK)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,aK)if aK.name==b.CHAR then if self.callbacks.onChar(self,aK)then return true end;self:write(aK.char)return true elseif aK.name==b.KEY then if self.callbacks.onKey(self,aK)then return true end;if aK.key==b.KEY_UP_ARROW then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)elseif aK.key==b.KEY_DOWN_ARROW then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)elseif aK.key==b.KEY_RIGHT_ARROW then local aO=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#aO+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end elseif aK.key==b.KEY_LEFT_ARROW then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local b7=self.lines[self.cursor.pos.y-1]self:set_cursor(#b7+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif aK.key==b.KEY_BACKSPACE then local aO=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local b8=#self.lines[self.cursor.pos.y-1]+1;local b9=self.cursor.pos.y-1;self:set_cursor(b8,b9)self:write(aO)self:set_cursor(b8,b9)else self.lines[self.cursor.pos.y]=aO:sub(1,self.cursor.pos.x-2)..aO:sub(self.cursor.pos.x)self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif aK.key==b.KEY_DELETE then local aO=self.lines[self.cursor.pos.y]local ba=aO:sub(self.cursor.pos.x)if#ba>0 then self.lines[self.cursor.pos.y]=aO:sub(1,self.cursor.pos.x-1)..aO:sub(self.cursor.pos.x+1)else local bb=self.lines[self.cursor.pos.y+1]if bb then local b8=self.cursor.pos.x;local b9=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(bb)self:set_cursor(b8,b9)end end elseif aK.key==b.KEY_ENTER then self:write("\n")elseif aK.key==b.KEY_TAB then self:write("  ")end;return true end end end,focus=function(self,bc,aK)if bc then self.focussed=true;self.callbacks.onFocus(self,aK)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,aK)end end,set_cursor=function(self,b8,b9,bd)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then b9=w.constrain(b9,1,self.limits.y)end;if bd then for y=#self.lines+1,b9 do if not self.lines[y]then self.lines[y]=""end end else b9=w.constrain(b9,1,#self.lines)end;b8=w.constrain(b8,1,#self.lines[b9]+1)self.cursor.pos=w.Vector2.new(b8,b9)end,write=function(self,...)local n=h.join({...},"")local aM=h.split(n,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local be="[^"..h.escape_magic_characters(h.join(self.whitelist,"")).."]"for l,aO in pairs(aM)do aM[l]=aO:gsub(be,"")end elseif#self.blacklist>0 then local be="["..h.escape_magic_characters(h.join(self.blacklist,"")).."]"for l,aO in pairs(aM)do aM[l]=aO:gsub(be,"")end end;if self.limits.y>0 then for y=1,#self.lines+#aM-1-self.limits.y do table.remove(aM)end;if#aM==0 then return end end;if#aM>1 then for bf,aO in pairs(aM)do if bf==1 then local bg=self.lines[self.cursor.pos.y]local bh=bg:sub(1,self.cursor.pos.x-1)local ba=bg:sub(self.cursor.pos.x)local bi=aM[#aM]if self.limits.x>0 then aO=aO:sub(1,self.limits.x-#bh)bi=bi:sub(1,self.limits.x-#ba)end;self.lines[self.cursor.pos.y]=bh..aO;self:set_cursor(1,self.cursor.pos.y+1,true)table.insert(self.lines,self.cursor.pos.y,bi..ba)self:set_cursor(#bi+1,self.cursor.pos.y)elseif bf==#aM then break else if self.limits.x>0 then aO=aO:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,aO)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local bg=self.lines[self.cursor.pos.y]local bh=bg:sub(1,self.cursor.pos.x-1)local ba=bg:sub(self.cursor.pos.x)if self.limits.x>0 then aM[1]=aM[1]:sub(1,self.limits.x-(#bh+#ba))end;self.lines[self.cursor.pos.y]=bh..aM[1]..ba;self:set_cursor(self.cursor.pos.x+#aM[1],self.cursor.pos.y)end end,print=function(self,...)local n=h.join({...},"\n").."\n"self:write(n)end,clear=function(self)self.lines={""}self:set_cursor(1,1)end},Window={new=function(x,y,U,V,a4,bj)local bk={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=w.Vector2.new(x,y),size=w.Vector2.new(U,V),drag_options={enabled=true,from=w.Vector2.new(1,1)},shadow={enabled=bj,offset=w.Vector2.new(1,1)},elements={},colors={background=a4,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end}}setmetatable(bk,aH.Window)return bk end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then a8:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;a8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,aK)if self.hidden then return false end;local bl=self:event_elements(aK)if not bl then if aK.name==b.TOUCH then if R.is_area_pressed(aK.x,aK.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=w.Vector2.new(aK.x,aK.y)self.focussed=true;self.callbacks.onPress(self,aK)self.callbacks.onFocus(self,aK)return true else self.focussed=false;self.callbacks.onFailedPress(self,aK)self.callbacks.onFocus(self,aK)end elseif aK.name==b.MOUSEDRAG and self.focussed then self:drag(aK.x,aK.y)return true elseif aK.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,aK)end else self.focussed=false;self.callbacks.onFocus(self,aK)end;return bl end,drag=function(self,x,y)if self.drag_options.enabled then local bm=w.Vector2.new(x-self.drag_options.from.x,y-self.drag_options.from.y)self.pos=self.pos+bm;for l,bn in pairs(self.elements)do if bn.pos then bn.pos=bn.pos+bm end end;self.drag_options.from=w.Vector2.new(x,y)end end,set_elements=function(self,bo)self.elements={}for l,m in pairs(bo)do table.insert(self.elements,m)end end,draw_elements=function(self)for l=#self.elements,1,-1 do local bn=self.elements[l]if bn.draw then bn:draw()end end end,event_elements=function(self,aK)local bl=false;for l,bn in pairs(self.elements)do local bp=bn:event(aK)bl=bl or bp;if bp then aK={name=b.DELETED}end end;return bl end}}aH.Clock.__index=aH.Clock;aH.Label.__index=aH.Label;aH.Button.__index=aH.Button;aH.Progressbar.__index=aH.Progressbar;aH.Memo.__index=aH.Memo;aH.Window.__index=aH.Window;local bq={}bq={new=function(br,bs)local bt={options={enabled=false,FPS_target=br,EPS_target=bs},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=aH.Clock.new(1/br),stats_clock=aH.Clock.new(1),FPS_label=aH.Label.new(1,1,"1 FPS",colors.white),EPS_label=aH.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=w.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,bu)self.enabled=bu;self.elements.stats_clock.enabled=bu;self.elements.FPS_label.hidden=not bu;self.elements.EPS_label.hidden=not bu end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+w.Vector2.new(0,1)end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}bt.elements.loop.stats_clock.stats=bt.stats;bt.stats.elements=bt.elements.loop;c.set_callback(bt.elements.loop.stats_clock,b.ONCLOCK,function(self,aK)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)bt.stats:enable(false)setmetatable(bt,bq)return bt end,set_monitors=function(self,_)self.monitors=Z.get_monitors(_)end,set_elements=function(self,bo)self.elements.high_priority={}self.elements.low_priority={}for l,m in pairs(bo)do if m.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,m)else table.insert(self.elements.low_priority,m)end end end,draw_elements=function(self)local function bv(i)for l=#i,1,-1 do local bn=i[l]if bn.draw then bn:draw()end end end;self.callbacks.onDraw(self)local bw=a8.screens;a8.screens=self.monitors;bv(self.elements.low_priority)bv(self.elements.high_priority)for l,bn in pairs(self.elements.loop)do if bn.draw then bn:draw()end end;a8:draw()a8.screens=bw;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,bx)local aK=R.format_event_table(bx)local function W(i)for l,bn in pairs(i)do if bn:event(aK)then aK={name=b.DELETED}end end end;if self.callbacks.onEvent(self,aK)then aK={name=b.DELETED}end;if aK.name==b.TOUCH then local by=false;for bz,a2 in pairs(self.monitors)do if aK.from==bz then by=true;break end end;if not by then aK={name=b.DELETED}end end;W(self.elements.loop)local bA={}for l,bn in pairs(self.elements.high_priority)do local bB=bn:event(aK)if bB then aK={name=b.DELETED}if self.elements.high_priority~=bn then table.insert(bA,{element=bn,key=l})end end end;if#bA>0 then for l,m in pairs(bA)do table.insert(self.elements.high_priority,1,m.element)table.remove(self.elements.high_priority,m.key+#bA)end end;W(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;c.set_callback(self.elements.loop.clock,b.ONCLOCK,function(bC,aK)self.callbacks.onClock(self,aK)self:draw_elements()bC.interval=1/self.options.FPS_target end)self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local bD=os.startTimer(1/self.options.EPS_target)local bx={os.pullEvent()}self:event_elements(bx)os.cancelTimer(bD)end;self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}bq.__index=bq;local bE={...}if bE[1]=="help"then local aM={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil}}for l,aO in pairs(aM)do Z.better_print(term,aO.foreground,aO.background,aO.text)end elseif bE[1]=="info"then Z.better_print(term,colors.red,nil,"Library Version: ",a.ver)Z.better_print(term,colors.yellow,nil,"Library Author: ",a.author)Z.better_print(term,colors.green,nil,"Library Website: ",a.website)elseif bE[1]=="ver"then Z.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif bE[1]=="copyright"then local bF={colors.red,colors.yellow,colors.green}local bG=h.split(a.copyright,"\n\n")for l,bH in pairs(bG)do Z.better_print(term,bF[l],nil,bH)if l<#bG then read("")end end elseif bE[1]=="setup"then if shell then local bI="YAGUI_PATH"local bJ="/"..shell.getRunningProgram()X:set(bI,bJ)Z.better_print(term,colors.green,nil,"Lib path was set to ",X.get(bI))else Z.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE")end elseif bE[1]then Z.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",bE[1],"\"")Z.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local bK={info=a,generic_utils=c,string_utils=h,math_utils=w,table_utils=K,color_utils=N,event_utils=R,setting_utils=X,monitor_utils=Z,screen_buffer=a8,WSS=aA,wireless_screen_share=aA,gui_elements=aH,Loop=bq}for l,m in pairs(b)do bK[l]=m end;return bK