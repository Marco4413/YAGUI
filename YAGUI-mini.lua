--[[
Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
--]]
local a={ver="1.6",author="hds536jhmk",website="https://github.com/hds536jhmk/YAGUI",copyright="Copyright (c) 2019, hds536jhmk : https://github.com/hds536jhmk/YAGUI\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE."}local b={TOUCH="screen_touch",MOUSEUP="mouse_up",MOUSEDRAG="mouse_drag",MOUSESCROLL="mouse_scroll",CHAR="char",KEY="key",DELETED="DELETED",DISCONNECTED="DISCONNECTED",LOW_PRIORITY=1,HIGH_PRIORITY=2,ONSTART=1,ONSTOP=2,ONDRAW=3,ONPRESS=4,ONFAILEDPRESS=5,ONTIMEOUT=6,ONCLOCK=7,ONEVENT=8,ONFOCUS=9,ONKEY=10,ONCHAR=11,KEY_BACKSPACE=14,KEY_TAB=15,KEY_ENTER=28,KEY_LCONTROL=29,KEY_LSHIFT=42,KEY_RSHIFT=54,KEY_ALT=56,KEY_CAPSLOCK=58,KEY_RCONTROL=157,KEY_UP_ARROW=200,KEY_LEFT_ARROW=203,KEY_RIGHT_ARROW=205,KEY_DOWN_ARROW=208,KEY_DELETE=211,MOUSE_LEFT=1,MOUSE_RIGHT=2,MOUSE_MIDDLE=3,SCROLL_UP=-1,SCROLL_DOWN=1,COMPUTER="computer",COMPUTER_ADVANCED="computer_advanced",TURTLE="turtle",TURTLE_ADVANCED="turtle_advanced",POCKET="pocket",POCKET_ADVANCED="pocket_advanced"}local c={set_callback=function(d,e,f)if e==b.ONSTART then d.callbacks.onStart=f elseif e==b.ONSTOP then d.callbacks.onStop=f elseif e==b.ONDRAW then d.callbacks.onDraw=f elseif e==b.ONPRESS then d.callbacks.onPress=f elseif e==b.ONFAILEDPRESS then d.callbacks.onFailedPress=f elseif e==b.ONTIMEOUT then d.callbacks.onTimeout=f elseif e==b.ONCLOCK then d.callbacks.onClock=f elseif e==b.ONEVENT then d.callbacks.onEvent=f elseif e==b.ONFOCUS then d.callbacks.onFocus=f elseif e==b.ONKEY then d.callbacks.onKey=f elseif e==b.ONCHAR then d.callbacks.onChar=f end end,get_computer_type=function(g)if turtle then if g and term.isColor()then return b.TURTLE_ADVANCED else return b.TURTLE end elseif pocket then if g and term.isColor()then return b.POCKET_ADVANCED else return b.POCKET end else if g and term.isColor()then return b.COMPUTER_ADVANCED else return b.COMPUTER end end end}local h={}h={magic_characters={"(",")",".","%","+","-","*","?","[","]","^","$"},join=function(i,j)if not j then j=""end;local k=""for l=1,#i do local m=i[l]k=k..tostring(m)if l<#i then k=k..j end end;return k end,split=function(k,j)local i={}while true do local n=k:find(j)if n then table.insert(i,k:sub(1,n-1))k=k:sub(n+1)else table.insert(i,k)break end end;return i end,compare_versions=function(o,p)local q=h.split(o,".")local r=h.split(p,".")local s=#q;local t=#r;for u=1,math.min(s,t)do if tonumber(q[u])>tonumber(r[u])then return 1 elseif tonumber(q[u])<tonumber(r[u])then return-1 end end;if s>t then return 1 elseif s<t then return-1 end;return 0 end,escape_magic_characters=function(k)for l,v in pairs(h.magic_characters)do k=k:gsub("[%"..v.."]",'%%%'..v)end;return k end}local w={}w={Vector2={new=function(x,y)local z={x=x,y=y}setmetatable(z,w.Vector2)return z end,__add=function(self,A)return w.Vector2.new(self.x+A.x,self.y+A.y)end,__sub=function(self,A)return w.Vector2.new(self.x-A.x,self.y-A.y)end,__mul=function(self,B)return w.Vector2.new(self.x*B,self.y*B)end,__div=function(self,B)return w.Vector2.new(self.x/B,self.y/B)end},map=function(m,C,D,E,F,G)local H=(m-C)/(D-C)*(F-E)+E;if G then return w.constrain(H,E,F)end;return H end,constrain=function(m,I,J)return math.min(J,math.max(I,m))end}w.Vector2.__index=w.Vector2;w.Vector2.ONE=w.Vector2.new(1,1)w.Vector2.UP=w.Vector2.new(0,-1)w.Vector2.DOWN=w.Vector2.new(0,1)w.Vector2.LEFT=w.Vector2.new(-1,0)w.Vector2.RIGHT=w.Vector2.new(1,0)local K={has_value=function(i,m)for L,M in pairs(i)do if M==m then return true,L end end;return false,nil end,has_key=function(i,l)if i[l]~=nil then return true,i[l]end;return false,nil end}local N={}N={colors={[1]="0",[2]="1",[4]="2",[8]="3",[16]="4",[32]="5",[64]="6",[128]="7",[256]="8",[512]="9",[1024]="a",[2048]="b",[4096]="c",[8192]="d",[16384]="e",[32768]="f"},color_to_paint=function(O)return N.colors[O]end,paint_to_color=function(P)local Q,O=K.has_value(N.colors,P)if Q then return O end end}local R={is_area_pressed=function(S,T,x,y,U,V)if S>=x and S<x+U then if T>=y and T<y+V then return true end end;return false end,format_event_table=function(W)local e={}e.name=W[1]if e.name=="mouse_click"then e.name=b.TOUCH;e.from="terminal"e.button=W[2]e.x=W[3]e.y=W[4]return e elseif e.name=="monitor_touch"then e.name=b.TOUCH;e.from=W[2]e.button=1;e.x=W[3]e.y=W[4]return e elseif e.name=="mouse_drag"then e.name=b.MOUSEDRAG;e.button=W[2]e.x=W[3]e.y=W[4]return e elseif e.name=="mouse_scroll"then e.name=b.MOUSESCROLL;e.direction=W[2]e.x=W[3]e.y=W[4]return e elseif e.name=="char"then e.name=b.CHAR;e.char=W[2]return e elseif e.name=="key"then e.name=b.KEY;e.key=W[2]return e end;table.remove(W,1)e.parameters=W;return e end}local X={_path="/.settings",set=function(self,Y,m)settings.set(Y,m)settings.save(self._path)end,unset=function(self,Y)settings.unset(Y)settings.save(self._path)end,get=function(Y)return settings.get(Y)end}local Z={get_monitors=function(_)local a0={}for l,a1 in pairs(_)do if a1=="terminal"then a0[a1]=term else if peripheral.getType(a1)=="monitor"then a0[a1]=peripheral.wrap(a1)end end end;return a0 end,better_print=function(a2,a3,a4,...)local a5=h.join({...},"")local a6=a2.getTextColor()local a7=a2.getBackgroundColor()if a3 then a2.setTextColor(a3)end;if a4 then a2.setBackgroundColor(a4)end;print(a5)a2.setTextColor(a6)a2.setBackgroundColor(a7)end,better_clear=function(a2)a2.clear()a2.setCursorPos(1,1)end}local a8={frame={pixels={},background=nil},screens={terminal=term},clear_after_draw=true,buffer={pixels={},background=colors.black,is_pixel_custom=function(self,x,y)x=tostring(x)y=tostring(y)if self.pixels[x]then if self.pixels[x][y]then return true end end;return false end,get_pixel=function(self,x,y)x=tostring(x)y=tostring(y)if self:is_pixel_custom(x,y)then return self.pixels[x][y]end;return{char=" ",foreground=self.background,background=self.background}end,set_pixel=function(self,x,y,char,a3,a4)x=tostring(x)y=tostring(y)local a9=self:get_pixel(x,y)if char and#char==1 then a9.char=char end;if a3 then a9.foreground=a3 end;if a4 then a9.background=a4 end;if not self.pixels[x]then self.pixels[x]={}end;self.pixels[x][y]=a9 end,clear=function(self)self.pixels={}end},set_screens=function(self,aa)self.screens=Z.get_monitors(aa)end,set_monitors=function(self,_)self:set_screens(_)end,clear=function(self)self.buffer:clear()end,draw=function(self)local ab=self.screens;local ac=self.buffer;for ad,ae in pairs(ab)do local af,ag=ae.getCursorPos()local U,V=ae.getSize()for y=1,V do local ah={text="",background="",foreground=""}for x=1,U do local a9=ac:get_pixel(x,y)ah.text=ah.text..a9.char;ah.background=ah.background..N.colors[a9.background]ah.foreground=ah.foreground..N.colors[a9.foreground]end;ae.setCursorPos(1,y)ae.blit(ah.text,ah.foreground,ah.background)end;ae.setCursorPos(af,ag)end;self.frame.pixels=self.buffer.pixels;self.frame.background=self.buffer.background;if self.clear_after_draw then self:clear()end end,point=function(self,x,y,O)self.buffer:set_pixel(x,y," ",O,O)end,write=function(self,x,y,ai,a3,a4)for aj=0,#ai-1 do char=ai:sub(aj+1,aj+1)self.buffer:set_pixel(x+aj,y,char,a3,a4)end end,rectangle=function(self,x,y,U,V,O)for aj=0,U-1 do for ak=0,V-1 do self:point(x+aj,y+ak,O)end end end,line=function(self,al,am,an,ao,O)local function ap(al,am,an,ao)local aq=1;if al>an then aq=-1 end;local ar=an-al;local as=ao-am;local at=1;if as<0 then at=-1;as=-as end;local au=2*as-ar;local y=am;for x=al,an,aq do self:point(x,y,O)if au>0 then y=y+at;au=au-2*ar end;au=au+2*as end end;local function av(al,am,an,ao)local aq=1;if am>ao then aq=-1 end;local ar=an-al;local as=ao-am;local aw=1;if ar<0 then aw=-1;ar=-ar end;local au=2*ar-as;local x=al;for y=am,ao,aq do self:point(x,y,O)if au>0 then x=x+aw;au=au-2*as end;au=au+2*ar end end;if math.abs(ao-am)<math.abs(an-al)then if al>an then ap(an,ao,al,am)else ap(al,am,an,ao)end else if am>ao then av(an,ao,al,am)else av(al,am,an,ao)end end end,circle=function(self,ax,ay,az,O)local aA=az*az;self:point(ax,ay+az,O)self:point(ax,ay-az,O)self:point(ax+az,ay,O)self:point(ax-az,ay,O)local x=1;local y=math.floor(math.sqrt(aA-1)+0.5)while x<y do self:point(ax+x,ay+y,O)self:point(ax+x,ay-y,O)self:point(ax-x,ay+y,O)self:point(ax-x,ay-y,O)self:point(ax+y,ay+x,O)self:point(ax+y,ay-x,O)self:point(ax-y,ay+x,O)self:point(ax-y,ay-x,O)x=x+1;y=math.floor(math.sqrt(aA-x*x)+0.5)end;if x==y then self:point(ax+x,ay+y,O)self:point(ax+x,ay-y,O)self:point(ax-x,ay+y,O)self:point(ax-x,ay-y,O)end end}local aB={}aB={side=nil,protocol="YAGUI-"..a.ver.."_WSS",host_prefix="_Host:",default_timeout=0.5,open=function(self,aC)rednet.open(aC)self.side=aC end,close=function(self)rednet.close(self.side)self.side=nil end,server={root={},servername=nil,hostname=nil,host=function(self,aD)if not aD then aD=os.getComputerID()end;aD=tostring(aD)local aE=self.root.protocol..self.root.host_prefix..aD;if rednet.lookup(aE,aD)then return false,aD end;rednet.host(aE,aD)self.servername=aE;self.hostname=aD;return true,aD end,unhost=function(self)rednet.broadcast(b.DISCONNECTED,self.servername)rednet.unhost(self.servername,self.hostname)self.servername=nil;self.hostname=nil end,broadcast=function(self)rednet.broadcast(a8.frame,self.servername)end},client={root={},servername=nil,host_id=nil,connect=function(self,aD)aD=tostring(aD)local aE=self.root.protocol..self.root.host_prefix..aD;local aF=rednet.lookup(aE,aD)if not aF then return false,aD end;self.servername=aE;self.host_id=aF;return true,aD end,disconnect=function(self)self.servername=nil;self.host_id=nil end,listen=function(self,aG)if not aG then aG=self.root.default_timeout end;local aH={rednet.receive(self.servername,aG)}if aH[1]==self.host_id then local ac=aH[2]if not ac then return false end;if ac==b.DISCONNECTED then return ac end;a8.buffer.background=ac.background;a8.buffer.pixels=ac.pixels;return true end;return false end}}aB.server.root=aB;aB.client.root=aB;local aI={}aI={Clock={new=function(aJ)local aK={enabled=true,oneshot=false,clock=os.clock(),interval=aJ,callbacks={onClock=function()end}}setmetatable(aK,aI.Clock)return aK end,event=function(self,aL)if not self.enabled then self:reset_timer()return end;if os.clock()>=self.clock+self.interval then self:reset_timer()self.callbacks.onClock(self,aL)if self.oneshot then self:stop()end end end,start=function(self)self:reset_timer()self.enabled=true end,stop=function(self)self.enabled=false end,reset_timer=function(self)self.clock=os.clock()end},Label={new=function(x,y,ai,a3,a4)local aM={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,text=ai,pos=w.Vector2.new(x,y),colors={foreground=a3,background=a4},callbacks={onDraw=function()end}}setmetatable(aM,aI.Label)return aM end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local aN=h.split(self.text,"\n")local aO=0;for l,aP in pairs(aN)do if l==1 then aO=math.floor(#aP/2)a8:write(self.pos.x,self.pos.y,aP,self.colors.foreground,self.colors.background)else a8:write(self.pos.x+aO-math.floor(#aP/2),self.pos.y+l-1,aP,self.colors.foreground,self.colors.background)end end end,event=function(self,aL)if self.hidden then return false end;return false end},Button={new=function(x,y,U,V,ai,a3,aQ,aR)local aS={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,text=ai,pos=w.Vector2.new(x,y),size=w.Vector2.new(U,V),timed={enabled=false,clock=aI.Clock.new(0.5)},colors={foreground=a3,active_background=aQ,unactive_background=aR},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onTimeout=function()end}}aS.timed.clock.binded_button=aS;aS.timed.clock.oneshot=true;aS.timed.clock:stop()c.set_callback(aS.timed.clock,b.ONCLOCK,function(self,aL)self.binded_button.active=false;self.binded_button.callbacks.onPress(self.binded_button,aL)self.binded_button.callbacks.onTimeout(self.binded_button,aL)end)setmetatable(aS,aI.Button)return aS end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.active then a8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.active_background)else a8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.unactive_background)end;local aT=h.split(self.text,"\n")local aU=math.floor((self.size.y-#aT)/2)+self.pos.y;for ak=0,#aT-1 do local m=aT[ak+1]local aV=math.floor((self.size.x-#m)/2)+self.pos.x;a8:write(aV,aU+ak,m,self.colors.foreground)end end,event=function(self,aL)if self.hidden then return false end;if aL.name==b.TOUCH then if R.is_area_pressed(aL.x,aL.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then if self.timed.enabled then self.timed.clock:start()if not self.active then self.active=true;self.callbacks.onPress(self,aL)end else self:press(aL)end;return true else self.callbacks.onFailedPress(self,aL)end end;if self.timed.enabled then self.timed.clock:event(aL)end end,press=function(self,aL)self.active=not self.active;self.callbacks.onPress(self,aL)end},Progressbar={new=function(x,y,U,V,aW,I,J,a3,aX,aY)local aZ={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,active=false,pos=w.Vector2.new(x,y),size=w.Vector2.new(U,V),value={max=J,min=I,current=aW,draw_percentage=true},colors={foreground=a3,filled_background=aX,unfilled_background=aY},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end}}setmetatable(aZ,aI.Progressbar)return aZ end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)local a_=w.map(self.value.current,self.value.min,self.value.max,0,1,true)local b0=math.floor(self.size.x*a_)a8:rectangle(self.pos.x,self.pos.y,b0,self.size.y,self.colors.filled_background)a8:rectangle(self.pos.x+b0,self.pos.y,self.size.x-b0,self.size.y,self.colors.unfilled_background)if self.value.draw_percentage then local b1=tostring(a_*100).."%"local b2=math.floor((self.size.x-#b1)/2)+self.pos.x;local aU=math.floor((self.size.y-1)/2)+self.pos.y;a8:write(b2,aU,b1,self.colors.foreground)end end,event=function(self,aL)if self.hidden then return false end;if aL.name==b.TOUCH then if R.is_area_pressed(aL.x,aL.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.callbacks.onPress(self,aL)end end end,set=function(self,m)local b3=w.constrain(m,self.value.min,self.value.max)self.value.current=b3 end},Memo={new=function(x,y,U,V,a3,a4)local b4={draw_priority=b.LOW_PRIORITY,focussed=false,hidden=false,pos=w.Vector2.new(x,y),size=w.Vector2.new(U,V),editable=true,lines={},first_visible_line=1,first_visible_char=1,cursor={visible=false,text=" ",blink=aI.Clock.new(0.5),pos=w.Vector2.new(1,1)},limits=w.Vector2.new(0,0),whitelist={},blacklist={},colors={foreground=a3,background=a4,cursor=colors.white,cursor_text=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end,onKey=function()end,onChar=function()end}}b4.cursor.blink.binded_cursor=b4.cursor;c.set_callback(b4.cursor.blink,b.ONCLOCK,function(self,aL)self.binded_cursor.visible=not self.binded_cursor.visible end)setmetatable(b4,aI.Memo)return b4 end,draw=function(self)if self.hidden then return end;a8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)local b5=self.cursor.pos.x-self.first_visible_char;local b6=self.cursor.pos.y-self.first_visible_line;if b5>=self.size.x then self.first_visible_char=self.first_visible_char+b5-self.size.x+1;b5=self.cursor.pos.x-self.first_visible_char-1 elseif b5<1 then self.first_visible_char=self.first_visible_char+b5;b5=0 end;if b6>=self.size.y then self.first_visible_line=self.first_visible_line+b6-self.size.y+1;b6=self.cursor.pos.y-self.first_visible_line-1 elseif b6<1 then self.first_visible_line=self.first_visible_line+b6;b6=0 end;for y=1,self.size.y do local aP=self.lines[y+self.first_visible_line-1]or""local b7=aP:sub(self.first_visible_char,self.first_visible_char+self.size.x-1)a8:write(self.pos.x,self.pos.y+y-1,b7,self.colors.foreground)end;if self.cursor.visible then a8:write(b5+self.pos.x,b6+self.pos.y,self.cursor.text,self.colors.cursor_text,self.colors.cursor)end end,event=function(self,aL)if self.hidden then return false end;if not self.editable then return false end;if aL.name==b.TOUCH then if R.is_area_pressed(aL.x,aL.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then local x=aL.x-self.pos.x;local y=aL.y-self.pos.y;self:set_cursor(x+self.first_visible_char,y+self.first_visible_line)self:focus(true,aL)self.callbacks.onPress(self,aL)return true else self:focus(false,aL)self.callbacks.onFailedPress(self,aL)return false end elseif aL.name==b.DELETED then self:focus(false,aL)return false end;if self.focussed then self.cursor.blink:event(self.cursor.blink,aL)if aL.name==b.CHAR then if self.callbacks.onChar(self,aL)then return true end;self:write(aL.char)return true elseif aL.name==b.KEY then if self.callbacks.onKey(self,aL)then return true end;if aL.key==b.KEY_UP_ARROW then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y-1)elseif aL.key==b.KEY_DOWN_ARROW then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)elseif aL.key==b.KEY_RIGHT_ARROW then local aP=self.lines[self.cursor.pos.y]if self.lines[self.cursor.pos.y+1]and self.cursor.pos.x>=#aP+1 then self:set_cursor(1,self.cursor.pos.y+1)else self:set_cursor(self.cursor.pos.x+1,self.cursor.pos.y)end elseif aL.key==b.KEY_LEFT_ARROW then if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then local b8=self.lines[self.cursor.pos.y-1]self:set_cursor(#b8+1,self.cursor.pos.y-1)else self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif aL.key==b.KEY_BACKSPACE then local aP=self.lines[self.cursor.pos.y]if self.cursor.pos.x<=1 and self.cursor.pos.y>1 then table.remove(self.lines,self.cursor.pos.y)local b9=#self.lines[self.cursor.pos.y-1]+1;local ba=self.cursor.pos.y-1;self:set_cursor(b9,ba)self:write(aP)self:set_cursor(b9,ba)else self.lines[self.cursor.pos.y]=aP:sub(1,self.cursor.pos.x-2)..aP:sub(self.cursor.pos.x)self:set_cursor(self.cursor.pos.x-1,self.cursor.pos.y)end elseif aL.key==b.KEY_DELETE then local aP=self.lines[self.cursor.pos.y]local bb=aP:sub(self.cursor.pos.x)if#bb>0 then self.lines[self.cursor.pos.y]=aP:sub(1,self.cursor.pos.x-1)..aP:sub(self.cursor.pos.x+1)else local bc=self.lines[self.cursor.pos.y+1]if bc then local b9=self.cursor.pos.x;local ba=self.cursor.pos.y;table.remove(self.lines,self.cursor.pos.y+1)self:write(bc)self:set_cursor(b9,ba)end end elseif aL.key==b.KEY_ENTER then self:write("\n")elseif aL.key==b.KEY_TAB then self:write("  ")end;return true elseif aL.name==b.MOUSESCROLL then self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+aL.direction)end end end,focus=function(self,bd,aL)if bd then self.focussed=true;self.callbacks.onFocus(self,aL)else self.focussed=false;self.cursor.visible=false;self.callbacks.onFocus(self,aL)end end,set_cursor=function(self,b9,ba,be)if not self.lines[1]then self.lines[1]=""end;if self.limits.y>0 then ba=w.constrain(ba,1,self.limits.y)end;if be then for y=#self.lines+1,ba do if not self.lines[y]then self.lines[y]=""end end else ba=w.constrain(ba,1,#self.lines)end;b9=w.constrain(b9,1,#self.lines[ba]+1)self.cursor.pos=w.Vector2.new(b9,ba)end,write=function(self,...)local ai=h.join({...},"")local aN=h.split(ai,"\n")self:set_cursor(self.cursor.pos.x,self.cursor.pos.y,true)if#self.whitelist>0 then local bf="[^"..h.escape_magic_characters(h.join(self.whitelist,"")).."]"for l,aP in pairs(aN)do aN[l]=aP:gsub(bf,"")end elseif#self.blacklist>0 then local bf="["..h.escape_magic_characters(h.join(self.blacklist,"")).."]"for l,aP in pairs(aN)do aN[l]=aP:gsub(bf,"")end end;if self.limits.y>0 then for y=1,#self.lines+#aN-1-self.limits.y do table.remove(aN)end;if#aN==0 then return end end;if#aN>1 then for bg,aP in pairs(aN)do if bg==1 then local bh=self.lines[self.cursor.pos.y]local bi=bh:sub(1,self.cursor.pos.x-1)local bb=bh:sub(self.cursor.pos.x)local bj=aN[#aN]if self.limits.x>0 then aP=aP:sub(1,self.limits.x-#bi)bj=bj:sub(1,self.limits.x-#bb)end;self.lines[self.cursor.pos.y]=bi..aP;self:set_cursor(1,self.cursor.pos.y+1,true)table.insert(self.lines,self.cursor.pos.y,bj..bb)self:set_cursor(#bj+1,self.cursor.pos.y)elseif bg==#aN then break else if self.limits.x>0 then aP=aP:sub(1,self.limits.x)end;table.insert(self.lines,self.cursor.pos.y,aP)self:set_cursor(self.cursor.pos.x,self.cursor.pos.y+1)end end else local bh=self.lines[self.cursor.pos.y]local bi=bh:sub(1,self.cursor.pos.x-1)local bb=bh:sub(self.cursor.pos.x)if self.limits.x>0 then aN[1]=aN[1]:sub(1,self.limits.x-(#bi+#bb))end;self.lines[self.cursor.pos.y]=bi..aN[1]..bb;self:set_cursor(self.cursor.pos.x+#aN[1],self.cursor.pos.y)end end,print=function(self,...)local ai=h.join({...},"\n").."\n"self:write(ai)end,clear=function(self)self.lines={""}self:set_cursor(1,1)end},Window={new=function(x,y,U,V,a4,bk)local bl={draw_priority=b.HIGH_PRIORITY,focussed=false,hidden=false,pos=w.Vector2.new(x,y),size=w.Vector2.new(U,V),drag_options={enabled=true,from=w.Vector2.new(1,1)},shadow={enabled=bk,offset=w.Vector2.new(1,1)},elements={},colors={background=a4,shadow=colors.black},callbacks={onDraw=function()end,onPress=function()end,onFailedPress=function()end,onFocus=function()end}}setmetatable(bl,aI.Window)return bl end,draw=function(self)if self.hidden then return end;self.callbacks.onDraw(self)if self.shadow.enabled then a8:rectangle(self.pos.x+self.shadow.offset.x,self.pos.y+self.shadow.offset.y,self.size.x,self.size.y,self.colors.shadow)end;a8:rectangle(self.pos.x,self.pos.y,self.size.x,self.size.y,self.colors.background)self:draw_elements()end,event=function(self,aL)if self.hidden then return false end;local bm=self:event_elements(aL)if not bm then if aL.name==b.TOUCH then if R.is_area_pressed(aL.x,aL.y,self.pos.x,self.pos.y,self.size.x,self.size.y)then self.drag_options.from=w.Vector2.new(aL.x,aL.y)self.focussed=true;self.callbacks.onPress(self,aL)self.callbacks.onFocus(self,aL)return true else self.focussed=false;self.callbacks.onFailedPress(self,aL)self.callbacks.onFocus(self,aL)end elseif aL.name==b.MOUSEDRAG and self.focussed then self:drag(aL.x,aL.y)return true elseif aL.name==b.DELETED then self.focussed=false;self.callbacks.onFocus(self,aL)end else self.focussed=false;self.callbacks.onFocus(self,aL)end;return bm end,drag=function(self,x,y)if self.drag_options.enabled then local bn=w.Vector2.new(x-self.drag_options.from.x,y-self.drag_options.from.y)self.pos=self.pos+bn;for l,bo in pairs(self.elements)do if bo.pos then bo.pos=bo.pos+bn end end;self.drag_options.from=w.Vector2.new(x,y)end end,set_elements=function(self,bp,bq)self.elements={}for l,bo in pairs(bp)do if bq then bo.pos=self.pos+bo.pos-w.Vector2.ONE end;table.insert(self.elements,bo)end end,draw_elements=function(self)for l=#self.elements,1,-1 do local bo=self.elements[l]if bo.draw then bo:draw()end end end,event_elements=function(self,aL)local bm=false;for l,bo in pairs(self.elements)do local br=bo:event(aL)bm=bm or br;if br then aL={name=b.DELETED}end end;return bm end}}aI.Clock.__index=aI.Clock;aI.Label.__index=aI.Label;aI.Button.__index=aI.Button;aI.Progressbar.__index=aI.Progressbar;aI.Memo.__index=aI.Memo;aI.Window.__index=aI.Window;local bs={}bs={new=function(bt,bu)local bv={options={enabled=false,FPS_target=bt,EPS_target=bu},monitors={terminal=term},elements={high_priority={},low_priority={},loop={clock=aI.Clock.new(1/bt),stats_clock=aI.Clock.new(1),FPS_label=aI.Label.new(1,1,"1 FPS",colors.white),EPS_label=aI.Label.new(1,2,"1 EPS",colors.white)}},stats={pos=w.Vector2.new(1,1),elements=nil,enabled=true,enable=function(self,bw)self.enabled=bw;self.elements.stats_clock.enabled=bw;self.elements.FPS_label.hidden=not bw;self.elements.EPS_label.hidden=not bw end,update_pos=function(self)self.elements.FPS_label.pos=self.pos;self.elements.EPS_label.pos=self.pos+w.Vector2.DOWN end,FPS=0,EPS=0},callbacks={onStart=function()end,onStop=function()end,onDraw=function()end,onClock=function()end,onEvent=function()end}}bv.elements.loop.stats_clock.stats=bv.stats;bv.stats.elements=bv.elements.loop;c.set_callback(bv.elements.loop.stats_clock,b.ONCLOCK,function(self,aL)self.stats:update_pos()self.stats.elements.FPS_label.text=tostring(self.stats.FPS).." FPS"self.stats.elements.EPS_label.text=tostring(self.stats.EPS).." EPS"self.stats.FPS=0;self.stats.EPS=0 end)bv.stats:enable(false)setmetatable(bv,bs)return bv end,set_monitors=function(self,_)self.monitors=Z.get_monitors(_)end,set_elements=function(self,bp)self.elements.high_priority={}self.elements.low_priority={}for l,m in pairs(bp)do if m.draw_priority==b.HIGH_PRIORITY then table.insert(self.elements.high_priority,m)else table.insert(self.elements.low_priority,m)end end end,draw_elements=function(self)local function bx(i)for l=#i,1,-1 do local bo=i[l]if bo.draw then bo:draw()end end end;self.callbacks.onDraw(self)local by=a8.screens;a8.screens=self.monitors;bx(self.elements.low_priority)bx(self.elements.high_priority)for l,bo in pairs(self.elements.loop)do if bo.draw then bo:draw()end end;a8:draw()a8.screens=by;if self.stats.enabled then self.stats.FPS=self.stats.FPS+1 end end,event_elements=function(self,bz)local aL=R.format_event_table(bz)local function W(i)for l,bo in pairs(i)do if bo:event(aL)then aL={name=b.DELETED}end end end;if self.callbacks.onEvent(self,aL)then aL={name=b.DELETED}end;if aL.name==b.TOUCH then local bA=false;for bB,a2 in pairs(self.monitors)do if aL.from==bB then bA=true;break end end;if not bA then aL={name=b.DELETED}end end;W(self.elements.loop)local bC={}for l,bo in pairs(self.elements.high_priority)do local bD=bo:event(aL)if bD then aL={name=b.DELETED}if self.elements.high_priority~=bo then table.insert(bC,{element=bo,key=l})end end end;if#bC>0 then for l,m in pairs(bC)do table.insert(self.elements.high_priority,1,m.element)table.remove(self.elements.high_priority,m.key+#bC)end end;W(self.elements.low_priority)if self.stats.enabled then self.stats.EPS=self.stats.EPS+1 end end,start=function(self)self.enabled=true;c.set_callback(self.elements.loop.clock,b.ONCLOCK,function(bE,aL)self.callbacks.onClock(self,aL)self:draw_elements()bE.interval=1/self.options.FPS_target end)self.stats:update_pos()self.callbacks.onStart(self)while self.enabled do local bF=os.startTimer(1/self.options.EPS_target)local bz={os.pullEvent()}self:event_elements(bz)os.cancelTimer(bF)end;self.callbacks.onStop(self)end,stop=function(self)self.enabled=false end}bs.__index=bs;local bG={...}if bG[1]=="help"then local aN={{text="LIBFILE <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - info (prints info about the lib)",foreground=colors.yellow,background=nil},{text=" - ver (prints version of the lib)",foreground=colors.green,background=nil},{text=" - copyright (prints copyright of the lib)",foreground=colors.blue,background=nil},{text=" - setup (adds YAGUI_PATH to computer's settings)",foreground=colors.yellow,background=nil}}for l,aP in pairs(aN)do Z.better_print(term,aP.foreground,aP.background,aP.text)end elseif bG[1]=="info"then Z.better_print(term,colors.red,nil,"Library Version: ",a.ver)Z.better_print(term,colors.yellow,nil,"Library Author: ",a.author)Z.better_print(term,colors.green,nil,"Library Website: ",a.website)elseif bG[1]=="ver"then Z.better_print(term,colors.red,nil,"Library Version: ",a.ver)elseif bG[1]=="copyright"then local bH={colors.red,colors.yellow,colors.green}local bI=h.split(a.copyright,"\n\n")for l,bJ in pairs(bI)do Z.better_print(term,bH[l],nil,bJ)if l<#bI then read("")end end elseif bG[1]=="setup"then if shell then local bK="YAGUI_PATH"local bL="/"..shell.getRunningProgram()X:set(bK,bL)Z.better_print(term,colors.green,nil,"Lib path was set to ",X.get(bK))else Z.better_print(term,colors.red,nil,"SHELL API ISN'T AVAILABLE")end elseif bG[1]then Z.better_print(term,colors.red,nil,"UNKNOWN COMMAND: \"",bG[1],"\"")Z.better_print(term,colors.green,nil,"Use \"help\" to get a list of available commands!")end;local bM={info=a,generic_utils=c,string_utils=h,math_utils=w,table_utils=K,color_utils=N,event_utils=R,setting_utils=X,monitor_utils=Z,screen_buffer=a8,WSS=aB,wireless_screen_share=aB,gui_elements=aI,Loop=bs}for l,m in pairs(b)do bM[l]=m end;return bM