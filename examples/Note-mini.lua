local a=settings.get("YAGUI_PATH")if not(type(a)=="string")then printError("YAGUI is not installed, please install it by opening it with argument \"setup\".")return end;if not fs.exists(a)then printError("Couldn't find YAGUI in path: \""..a.."\", Please reinstall it by opening it with argument \"setup\".")return end;local b=dofile(a)local c="new"local d=".txt"local e=1;local f=20;local g=6;local h=true;local i=0.5;local j=string.char(149)local k=0.5;local l=colors.white;local m=nil;local n=colors.white;local o=colors.black;local p=colors.gray;local q=colors.lightGray;local r=colors.pink;local s=colors.green;local t=colors.orange;local u=colors.red;local v=colors.yellow;local w=colors.blue;local x=colors.orange;local y=colors.green;local z=colors.red;local A=true;local B=true;local C=true;local D={}for E,F in next,colors do if type(F)=="number"then D[F]={term.getPaletteColor(F)}end end;local G=c..d;local H=shell.resolve(G)local I={"1","2","3","4","5","6","7","8","9","0"}local J={...}b.screen_buffer.buffer.background.background=p;b.screen_buffer.buffer.background.foreground=p;local K={}local L={}local function M(N,O)for E,P in next,N do L[P]=O end end;M({"and","break","do","else","elseif","end","false","for","function","if","in","local","nil","not","or","repeat","return","then","true","until","while"},v)M({"bit","colors","colours","commands","coroutine","disk","fs","gps","help","http","io","keys","math","multishell","os","paintutils","parallel","peripheral","rednet","redstone","rs","settings","shell","string","table","term","textutils","turtle","pocket","vector","window","YAGUI"},w)M({"info","generic_utils","string_utils","math_utils","table_utils","color_utils","event_utils","setting_utils","monitor_utils","screen_buffer","input","gui_elements","WSS","wireless_screen_share","FT","file_transfer","Loop","self"},x)local Q=b.Loop(f,g)local R=b.Loop(f,g)local S=b.Loop(f,g)local T={["main"]=Q,["input"]=R,["overwrite"]=S}local U=b.WSS(e)local V=b.gui_elements.Label(0,0,"Lines: 0",n)local W=b.gui_elements.Label(0,0,"Cursor: (1; 1)",n)local X=b.gui_elements.Button(0,0,0,0,"C",n,s,u,t)local Y=b.gui_elements.Memo(0,0,0,0,n,o)local Z=b.gui_elements.Label(0,0,"/path/",n)local _=b.gui_elements.Clock(i)X.hold=true;X.shortcut={b.KEY_LEFTCTRL,b.KEY_LEFTSHIFT,b.KEY_C}Y.cursor.text=j;Y.cursor.blink.interval=k;Y.colors.cursor=m;Y.colors.cursor_text=l;Y.border=B;Y.colors.border_color=p;_.oneshot=true;local a0=b.gui_elements.Button(0,0,0,0,"File",n,q,p,r)local a1=b.gui_elements.Window(0,0,0,0,p,A)local a2=b.gui_elements.Button(0,0,0,0,"New/Open",n,q,p,r)local a3=b.gui_elements.Button(0,0,0,0,"Save",n,q,p,r)local a4=b.gui_elements.Button(0,0,0,0,"SaveAs",n,q,p,r)local a5=b.gui_elements.Button(0,0,0,0,"Delete",n,q,p,r)local a6=b.gui_elements.Button(0,0,0,0,"Goto",n,q,p,r)local a7=b.gui_elements.Button(0,0,0,0,"Run",n,q,p,r)local a8=b.gui_elements.Button(0,0,0,0,"SyntaxHL",n,q,p,r)local a9=b.gui_elements.Button(0,0,0,0,"Exit",n,s,u,t)a1.draw_priority=b.LOW_PRIORITY;a1.hidden=true;a1.dragging.enabled=false;a1.resizing.enabled=false;a1:set_elements({a2,a3,a4,a5,a6,a7,a8,a9})a2.hold=true;a3.hold=true;a4.hold=true;a5.hold=true;a6.hold=true;a7.hold=true;a9.hold=true;a0.shortcut={b.KEY_LEFTCTRL,b.KEY_TAB}a8.active=C;local aa=b.gui_elements.Label(0,0,"",n)local ab=b.gui_elements.Memo(0,0,0,0,n,q)local ac=b.gui_elements.Label(0,0,"You can press CONTROL to cancel.",n)ab.limits=b.math_utils.Vector2(0,1)ab.cursor.text=j;ab.cursor.blink.interval=k;ab.colors.cursor=m;ab.colors.cursor_text=l;ab.border=B;ab.colors.border_color=p;local ad=b.gui_elements.Window(0,0,0,0,q,A)local ae=b.gui_elements.Label(0,0,"Do you want\nto overwrite?",n)local af=b.gui_elements.Button(0,0,0,0,"Yes",n,p,q,r)local ag=b.gui_elements.Button(0,0,0,0,"No",n,p,q,r)ad:set_elements({ae,af,ag})af.hold=true;ag.hold=true;af.shortcut={b.KEY_Y}ag.shortcut={b.KEY_N}ae.text_alignment=b.ALIGN_CENTER;local function ah()local ai,aj=term.getSize()local ak={["all"]={lLines=function()return 9,1 end,lCursor=function()return ai-5,1,b.ALIGN_RIGHT end,bCompact=function()return ai,1,1,1 end,mEditor=function()return 2,2,ai-1,aj-2 end,lPath=function()return 1,aj end,bFile=function()return 1,1,4,1 end,wFileMenu=function()return 1,2,10,8 end,bNewOpen=function()return 1,1,10,1 end,bSave=function()return 1,2,10,1 end,bSaveAs=function()return 1,3,10,1 end,bDelete=function()return 1,4,10,1 end,bGoto=function()return 1,5,10,1 end,bRun=function()return 1,6,10,1 end,bSHL=function()return 1,7,10,1 end,bQuit=function()return 1,8,10,1 end,lInputTitle=function()return 3,math.floor(aj/2-1)end,mInput=function()return 2+(B and 0 or 1),math.floor(aj/2)+(B and-1 or 0),ai-2-(B and 0 or 2),3-(B and 0 or 2)end,lInputTip=function()return 3,math.floor(aj/2+2),"You can press CONTROL to cancel."end,wOverWrite=function()return math.floor(ai/2-7),math.floor(aj/2-3),15,6 end,lOW=function()return 8,2 end,bOWAccept=function()return 2,5,3,1 end,bOWReject=function()return 13,5,2,1 end,stats=function()return ai-1,aj-1 end},[b.COMPUTER]={},[b.TURTLE]={},[b.POCKET]={lCursor=function()return 1,aj-1,b.ALIGN_LEFT end,mEditor=function()return 2,2,ai-1,aj-3 end,lPath=function()return 1,aj end,lInputTip=function()return 3,math.floor(aj/2+2),"You can press\nCONTROL to cancel."end},["this_layout"]={}}local al,am=b.generic_utils.get_computer_type()ak.this_layout=ak.all;for E,an in next,ak[al]do ak.this_layout[E]=an end;K=ak.this_layout end;local function ao()V.pos.x,V.pos.y=K.lLines()W.pos.x,W.pos.y,W.text_alignment=K.lCursor()X.pos.x,X.pos.y,X.size.x,X.size.y=K.bCompact()Y.pos.x,Y.pos.y,Y.size.x,Y.size.y=K.mEditor()Z.pos.x,Z.pos.y=K.lPath()a0.pos.x,a0.pos.y,a0.size.x,a0.size.y=K.bFile()a1.pos.x,a1.pos.y,a1.size.x,a1.size.y=K.wFileMenu()a2.pos.x,a2.pos.y,a2.size.x,a2.size.y=K.bNewOpen()a3.pos.x,a3.pos.y,a3.size.x,a3.size.y=K.bSave()a4.pos.x,a4.pos.y,a4.size.x,a4.size.y=K.bSaveAs()a5.pos.x,a5.pos.y,a5.size.x,a5.size.y=K.bDelete()a6.pos.x,a6.pos.y,a6.size.x,a6.size.y=K.bGoto()a7.pos.x,a7.pos.y,a7.size.x,a7.size.y=K.bRun()a8.pos.x,a8.pos.y,a8.size.x,a8.size.y=K.bSHL()a9.pos.x,a9.pos.y,a9.size.x,a9.size.y=K.bQuit()aa.pos.x,aa.pos.y=K.lInputTitle()ab.pos.x,ab.pos.y,ab.size.x,ab.size.y=K.mInput()ac.pos.x,ac.pos.y,ac.text=K.lInputTip()ad.pos.x,ad.pos.y,ad.size.x,ad.size.y=K.wOverWrite()ad.resizing.min_size=ad.size:duplicate()ad.resizing.max_size=ad.size:duplicate()*2;ae.pos.x,ae.pos.y=K.lOW()af.pos.x,af.pos.y,af.size.x,af.size.y=K.bOWAccept()ag.pos.x,ag.pos.y,ag.size.x,ag.size.y=K.bOWReject()ae.offset=b.math_utils.Vector2.new(0,b.math_utils.round(ad.size.y/2)-ae.pos.y)for E,ap in next,T do ap.stats.pos=b.math_utils.Vector2(K.stats())ap.stats:update_pos()end end;local function aq()for E,ar in next,Q.monitors do b.monitor_utils.better_clear(ar)for as,at in next,D do ar.setPaletteColor(as,at[1],at[2],at[3])end end end;local function au()Y.rich_text={}if Y.focussed then Y.rich_text[Y.cursor.pos.y]={["background"]=p}end end;local av={}local function aw(N,ax)for ay=ax+1,#N do N[ay]=nil end end;local function az(N,aA,aB)local aC=#N;for ay=aC+1,aB+aC do N[ay]=aA end end;local function aD(ax,aE)local aF=b.color_utils.colors[n]local aG=b.color_utils.colors[y]local aH=b.color_utils.colors[z]ax=ax or Y.first_visible_line;aE=aE or Y.first_visible_line+Y.size.y-1;local aI="code"local aJ="none"local aK=false;local aL=""local aM=av[ax-1]if aM then aI=aM.state;aJ=aM.nested_state;aK=aM.quote_ignore;aL=aM.current_quote end;for aN=ax,aE do if not Y.rich_text[aN]then Y.rich_text[aN]={}end;local aO=Y.lines[aN]if not aO then break end;local aP={}local aQ=b.string_utils.split(aO,"[^%w_]")local aR=0;for E,P in next,aQ do local as=L[P]if as then az(aP,b.color_utils.colors[n],aR-#aP)az(aP,b.color_utils.colors[as],#P)end;aR=aR+#P+1 end;aP[#aP+1]=aF;for aS=1,#aO do if not aP[aS]then aP[aS]=aF end;local aA=aO:sub(aS,aS)if aI=="code"then if aA=="\""then aP[aS]=aH;if aS~=#aO then aI="string"aL="\""end elseif aA=="'"then aP[aS]=aH;if aS~=#aO then aI="string"aL="'"end elseif aO:sub(aS,aS+1)=="[["then aI="long-string"aP[aS]=aH elseif aO:sub(aS,aS+1)=="--"then if aO:sub(aS,aS+3)=="--[["then aI="closed-comment"aP[aS]=aG else aI="comment"aP[aS]=aG end elseif aS>#aP then aP[aS]=aF end elseif aI=="string"then aP[aS]=aH;if aA=="\\"then if aS==#aO then aJ="multi-line"else local aT=aO:sub(aS+1,aS+1)if aT==aL then aK=true end end elseif aJ=="none"and aS==#aO then aK=false;aL=""aI="code"elseif aA==aL then if aK then aK=false else aL=""aI="code"aJ="none"end else aJ="none"end elseif aI=="long-string"then aP[aS]=aH;if aO:sub(aS,aS+1)=="]]"then aP[aS+1]=aH;aI="code"end elseif aI=="comment"then aw(aP,aS-1)aI="code"break elseif aI=="closed-comment"then aP[aS]=aG;if aO:sub(aS,aS+1)=="]]"then aP[aS+1]=aG;aI="code"end end end;av[aN]={["state"]=aI,["nested_state"]=aJ,["quote_ignore"]=aK,["current_quote"]=aL}Y.rich_text[aN].foreground=table.concat(aP)end end;local function aU(aV)aV=shell.resolve(aV)if#aV:gsub(" ","")==0 then aV=G end;if b.string_utils.get_extension(aV)==""then aV=aV..d end;if fs.isDir(aV)then return end;Y:clear()H=aV;if fs.exists(aV)then local aW=fs.open(aV,"r")local aX=pcall(Y.write,Y,aW.readAll())if not aX then aq()U:close()error("It took too long to open the file")end;aW.close()end;Y:set_cursor(1,1)if C then aD(1)end end;local function aY(aV)aV=shell.resolve(aV)if#aV:gsub(" ","")==0 then aV=H end;if fs.isDir(aV)then return end;if fs.isReadOnly(aV)then return end;H=aV;local aW=fs.open(aV,"w")aW.write(table.concat(Y.lines,"\n"))aW.close()end;_:set_callback(b.ONCLOCK,function(self)aD(self.starting_line,#Y.lines)self.starting_line=nil end)a0:set_callback(b.ONPRESS,function(self)a1.hidden=not self.active end)a1:set_callback(b.ONFAILEDPRESS,function(self)if a0.active then self.hidden=true;a0.active=false end end)a2:set_callback(b.ONRELEASE,function(self)aa.text=" New File / Open File "ab.bound=self;R:start()end)a2.callbacks.onActionComplete=function(aV)if aV then aV=shell.resolve(aV)aU(aV)else aU(G)end end;a3:set_callback(b.ONRELEASE,function(self)aY(H)end)a4:set_callback(b.ONRELEASE,function(self)aa.text=" Save File As "ab.bound=self;R:start()end)a4.callbacks.onActionComplete=function(aV)if not aV then aV=H end;aV=shell.resolve(aV)if fs.exists(aV)then af.bound=a4;a4.path=aV;S:start()else aY(aV)end end;a4.callbacks.onOverWrite=function()aY(a4.path)a4.path=nil end;a5:set_callback(b.ONRELEASE,function(self)if fs.isReadOnly(H)then return end;fs.delete(H)end)a6:set_callback(b.ONRELEASE,function(self)aa.text=" Go to Line "ab.bound=self;ab.whitelist=I;R:start()end)a6.callbacks.onActionComplete=function(aO)Y:set_cursor(1,tonumber(aO)or Y.cursor.pos.y)end;a7:set_callback(b.ONRELEASE,function(self)aY(H)local aZ=shell.openTab(H)shell.switchTab(aZ)end)a8:set_callback(b.ONPRESS,function(self)C=self.active;if C then aD(1)else au()end end)a9:set_callback(b.ONRELEASE,function(self)Q:stop()end)X:set_callback(b.ONRELEASE,function(self)local a_={}for ay=1,#Y.lines do local aO=Y.lines[ay]if not aO then break end;local b0=aO:gsub(" ","")if#b0==0 then table.insert(a_,1,ay)end end;for E,b1 in next,a_ do table.remove(Y.lines,b1)end;Y:set_cursor(1,1)if C then aD(1)end end)Y:set_callback(b.ONFOCUS,function(self)if not self.focussed then local b2=self.rich_text[self.cursor.pos.y]if b2 and b2.foreground then b2.background=nil else self.rich_text[self.cursor.pos.y]=nil end end end)Y:set_callback(b.ONMOUSESCROLL,function(self)return true end)Y:set_callback(b.ONCURSORCHANGE,function(self,b3,b4)local b5=self.rich_text[self.cursor.pos.y]if b5 and b5["foreground"]then b5["background"]=nil else self.rich_text[self.cursor.pos.y]=nil end;if self.focussed then local b6=self.rich_text[b4]if b6 and b6["foreground"]then b6["background"]=p else self.rich_text[b4]={["background"]=p}end end end)Y:set_callback(b.ONWRITE,function(self,b7,b8)if C then if _.starting_line then _.starting_line=math.min(_.starting_line,math.max(1,self.cursor.pos.y-#b8+1))else _.starting_line=math.max(1,self.cursor.pos.y-#b8+1)end;_:start()end end)Q:set_callback(b.ONDRAW,function(self)V.text=string.format("Lines: %d",#Y.lines)W.text=table.concat({"Cursor: ",tostring(Y.cursor.pos)})Z.text=table.concat({"/",H})end)Q:set_callback(b.ONEVENT,function(self,b9)if b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_LEFTALT,b.KEY_S)then a4.callbacks.onPress(a4,b9)elseif b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_N)then a2.callbacks.onPress(a2,b9)elseif b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_S)then a3.callbacks.onTimeout(a3,b9)elseif b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_G)then a6.callbacks.onPress(a6,b9)elseif b.input:are_keys_pressed(true,b.KEY_LEFTALT,b.KEY_R)then a7.callbacks.onTimeout(a7,b9)elseif b.input:are_keys_pressed(true,b.KEY_LEFTSHIFT,b.KEY_B,b.KEY_S)then local ba=b.screen_buffer:frame_to_nft(1,1,term.getSize())local aW=fs.open("/Note-Screenshot.nftb","wb")for ay=1,#ba do local aA=ba:sub(ay,ay)aW.write(string.byte(aA))end;aW.close()elseif b.input:are_keys_pressed(true,b.KEY_LEFTSHIFT,b.KEY_S)then local aW=fs.open("/Note-Screenshot.nft","w")aW.write(b.screen_buffer:frame_to_nft(1,1,term.getSize()))aW.close()elseif not Y.focussed then if b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_LEFT)then Y.first_visible_char=math.max(1,Y.first_visible_char-1)elseif b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_RIGHT)then Y.first_visible_char=Y.first_visible_char+1 end;if b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_UP)then Y.first_visible_line=math.max(1,Y.first_visible_line-1)elseif b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_DOWN)then Y.first_visible_line=math.min(#Y.lines,Y.first_visible_line+1)end end;if b9.name==b.MOUSESCROLL then Y.first_visible_line=b.math_utils.constrain(Y.first_visible_line+b9.direction,1,#Y.lines)elseif b9.name==b.TERMRESIZE then ah()ao()end;if C and Y.first_visible_line+Y.size.y-1>#av then aD(#av)end end)ab:set_callback(b.ONKEY,function(self,b9)if b9.key==b.KEY_ENTER then self.bound.callbacks.onActionComplete(self.lines[1])R:stop()return true end end)R:set_callback(b.ONSTART,function(self)ab:focus(true)end)R:set_callback(b.ONEVENT,function(self,b9)if b9.name==b.KEY then if b9.key==b.KEY_LEFTCTRL or b9.key==b.KEY_RIGHTCTRL then R:stop()return true end elseif b9.name==b.TERMRESIZE then ah()ao()end end)R:set_callback(b.ONSTOP,function(self)ab.bound=nil;ab.whitelist={}ab:clear()ab:focus(false)end)ad:set_callback(b.ONRESIZE,function(self,bb,bc,bd,be)ae.pos=b.math_utils.Vector2(self.size.x/2,self.size.y/2)-ae.offset;af.pos.y=self.size.y-1;ag.pos.x=self.size.x-2;ag.pos.y=self.size.y-1 end)af:set_callback(b.ONRELEASE,function(self)self.bound.callbacks.onOverWrite()self.bound=nil;S:stop()end)ag:set_callback(b.ONRELEASE,function(self)S:stop()end)S:set_callback(b.ONEVENT,function(self,b9)if b9.name==b.TERMRESIZE then ah()ao()end end)ah()ao()if#J>0 then if J[1]:lower()=="help"then local b8={{text="Note <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - open <PATH> (opens file at PATH)",foreground=colors.yellow,background=nil},{text=" - multi <MONITORS> (sets MONITORS\n   as io for the app)",foreground=colors.green,background=nil},{text=" - wss <MODEM_SIDE> [BROADCAST_INTERVAL]\n   (hosts a WSS server using the modem\n   on MODEM_SIDE and updates connected users\n   every BROADCAST_INTERVAL seconds)",foreground=colors.blue,background=nil}}for E,aO in next,b8 do b.monitor_utils.better_print(term,aO.foreground,aO.background,aO.text)end;return end;local bf={open={},multi={},wss={}}local bg;for E,F in next,J do if bg then table.insert(bf[bg],F)end;local bh=F:lower()if bh~=bg and bf[bh]then bg=bh end end;if#bf.open>0 then H=bf.open[1]end;if#bf.multi>0 then table.insert(bf.multi,1,"terminal")for E,ap in next,T do ap:set_monitors(bf.multi)end end;if#bf.wss>0 then if bf.wss[1]then local bi=bf.wss[1]if peripheral.getType(bi)~="modem"then b.monitor_utils.better_print(term,colors.red,nil,"Modem: ",bi," wasn't found.")return end;U:use_side(bi)U:host()U.broadcast_clock.interval=tonumber(bf.wss[2])or U.broadcast_clock.interval end end end;aU(H)Q:set_elements({a0,a1,V,W,X,Y,Z,_,U})R:set_elements({aa,ab,ac,U})S:set_elements({ad,U})for E,ap in next,T do ap.stats.FPS_label.text_alignment=b.ALIGN_RIGHT;ap.stats.EPS_label.text_alignment=b.ALIGN_RIGHT;ap.stats:show(h)ap.options.raw_mode=true;ap.options.stop_on_terminate=false end;Q.options.stop_on_terminate=true;for E,ar in next,Q.monitors do ar.setPaletteColor(colors.pink,0.467,0.467,0.467)end;Q:start()aq()U:close()