local a=settings.get("YAGUI_PATH")if not(type(a)=="string")then printError("YAGUI is not installed, please install it by opening it with argument \"setup\".")return end;if not fs.exists(a)then printError("Couldn't find YAGUI in path: \""..a.."\", Please reinstall it by opening it with argument \"setup\".")return end;local b=dofile(a)local c="new"local d=".txt"local e=1;local f=20;local g=6;local h=true;local i=0.5;local j=string.char(149)local k=0.5;local l=colors.white;local m=nil;local n=colors.white;local o=colors.black;local p=colors.gray;local q=colors.lightGray;local r=colors.green;local s=colors.red;local t=colors.yellow;local u=colors.blue;local v=colors.orange;local w=colors.green;local x=colors.red;local y=true;local z=true;local A=c..d;local B=shell.resolve(A)local C={"1","2","3","4","5","6","7","8","9","0"}local D={...}b.screen_buffer.buffer.background=p;local E={}local F={}local function G(H,I)if not F[I]then F[I]={}end;for J,K in next,H do F[I][J]=K end end;G({["and"]=true,["break"]=true,["do"]=true,["else"]=true,["elseif"]=true,["end"]=true,["false"]=true,["for"]=true,["function"]=true,["if"]=true,["in"]=true,["local"]=true,["nil"]=true,["not"]=true,["or"]=true,["repeat"]=true,["return"]=true,["then"]=true,["true"]=true,["until"]=true,["while"]=true},t)G({["bit"]=true,["colors"]=true,["colours"]=true,["commands"]=true,["coroutine"]=true,["disk"]=true,["fs"]=true,["gps"]=true,["help"]=true,["http"]=true,["io"]=true,["keys"]=true,["math"]=true,["multishell"]=true,["os"]=true,["paintutils"]=true,["parallel"]=true,["peripheral"]=true,["rednet"]=true,["redstone"]=true,["rs"]=true,["settings"]=true,["shell"]=true,["string"]=true,["table"]=true,["term"]=true,["textutils"]=true,["turtle"]=true,["pocket"]=true,["vector"]=true,["window"]=true,["YAGUI"]=true},u)G({["info"]=true,["generic_utils"]=true,["string_utils"]=true,["math_utils"]=true,["table_utils"]=true,["color_utils"]=true,["event_utils"]=true,["setting_utils"]=true,["monitor_utils"]=true,["screen_buffer"]=true,["input"]=true,["gui_elements"]=true,["WSS"]=true,["wireless_screen_share"]=true,["FT"]=true,["file_transfer"]=true,["Loop"]=true,["self"]=true},v)local L=b.Loop(f,g)local M=b.Loop(f,g)local N=b.Loop(f,g)local O={["main"]=L,["input"]=M,["overwrite"]=N}local P=b.WSS(e)local Q=b.gui_elements.Label(0,0,"Lines: 0",n)local R=b.gui_elements.Label(0,0,"Cursor: (1; 1)",n)local S=b.gui_elements.Button(0,0,0,0,"C",n,r,s)local T=b.gui_elements.Memo(0,0,0,0,n,o)local U=b.gui_elements.Label(0,0,"/path/",n)local V=b.gui_elements.Clock(0.5)S.timed.enabled=true;S.timed.clock.interval=i;S.shortcut={b.KEY_LEFTCTRL,b.KEY_LEFTSHIFT,b.KEY_C}T.cursor.text=j;T.cursor.blink.interval=k;T.colors.cursor=m;T.colors.cursor_text=l;T.border=true;T.colors.border_color=p;V.oneshot=true;local W=b.gui_elements.Button(0,0,0,0,"File",n,q,p)local X=b.gui_elements.Window(0,0,0,0,p,y)local Y=b.gui_elements.Button(0,0,0,0,"New/Open",n,q,p)local Z=b.gui_elements.Button(0,0,0,0,"Save",n,q,p)local _=b.gui_elements.Button(0,0,0,0,"SaveAs",n,q,p)local a0=b.gui_elements.Button(0,0,0,0,"Delete",n,q,p)local a1=b.gui_elements.Button(0,0,0,0,"Goto",n,q,p)local a2=b.gui_elements.Button(0,0,0,0,"Run",n,q,p)local a3=b.gui_elements.Button(0,0,0,0,"SyntaxHL",n,q,p)local a4=b.gui_elements.Button(0,0,0,0,"Exit",n,r,s)X.draw_priority=b.LOW_PRIORITY;X.hidden=true;X.dragging.enabled=false;X.resizing.enabled=false;X:set_elements({Y,Z,_,a0,a1,a2,a3,a4})Y.timed.enabled=true;Y.timed.clock.interval=i/2;Z.timed.enabled=true;Z.timed.clock.interval=i;_.timed.enabled=true;_.timed.clock.interval=i/2;a0.timed.enabled=true;a0.timed.clock.interval=i;a1.timed.enabled=true;a1.timed.clock.interval=i/2;a2.timed.enabled=true;a2.timed.clock.interval=i;a4.timed.enabled=true;a4.timed.clock.interval=i;W.shortcut={b.KEY_LEFTCTRL,b.KEY_TAB}a3.active=z;local a5=b.gui_elements.Label(0,0,"",n)local a6=b.gui_elements.Memo(0,0,0,0,n,q)local a7=b.gui_elements.Label(0,0,"You can press CONTROL to cancel.",n)a6.limits=b.math_utils.Vector2(0,1)a6.cursor.text=j;a6.cursor.blink.interval=k;a6.colors.cursor=m;a6.colors.cursor_text=l;a6.border=true;a6.colors.border_color=p;local a8=b.gui_elements.Window(0,0,0,0,q,y)local a9=b.gui_elements.Label(0,0,"Do you want\nto overwrite?",n)local aa=b.gui_elements.Button(0,0,0,0,"Yes",n,p,q)local ab=b.gui_elements.Button(0,0,0,0,"No",n,p,q)a8:set_elements({a9,aa,ab})aa.timed.enabled=true;aa.timed.clock.interval=i;ab.timed.enabled=true;ab.timed.clock.interval=i;aa.shortcut={b.KEY_Y}ab.shortcut={b.KEY_N}a9.text_alignment=b.ALIGN_CENTER;local function ac()local ad,ae=term.getSize()local af={["all"]={lLines=function()return 9,1 end,lCursor=function()return ad-5,1,b.ALIGN_RIGHT end,bCompact=function()return ad,1,1,1 end,mEditor=function()return 1,2,ad,ae-2 end,lPath=function()return 1,ae end,bFile=function()return 1,1,4,1 end,wFileMenu=function()return 1,2,10,8 end,bNewOpen=function()return 1,1,10,1 end,bSave=function()return 1,2,10,1 end,bSaveAs=function()return 1,3,10,1 end,bDelete=function()return 1,4,10,1 end,bGoto=function()return 1,5,10,1 end,bRun=function()return 1,6,10,1 end,bSHL=function()return 1,7,10,1 end,bQuit=function()return 1,8,10,1 end,lInputTitle=function()return 3,math.floor(ae/2-1)end,mInput=function()return 1,math.floor(ae/2)-1,ad,3 end,lInputTip=function()return 3,math.floor(ae/2+2),"You can press CONTROL to cancel."end,wOverWrite=function()return math.floor(ad/2-7),math.floor(ae/2-3),15,6 end,lOW=function()return 8,2 end,bOWAccept=function()return 2,5,3,1 end,bOWReject=function()return 13,5,2,1 end,stats=function()return ad-1,ae-1 end},[b.COMPUTER]={},[b.TURTLE]={},[b.POCKET]={lCursor=function()return 1,ae-1,b.ALIGN_LEFT end,mEditor=function()return 1,2,ad,ae-3 end,lPath=function()return 1,ae end,lInputTip=function()return 3,math.floor(ae/2+2),"You can press\nCONTROL to cancel."end},["this_layout"]={}}local ag,ah=b.generic_utils.get_computer_type()af.this_layout=af.all;for ai,aj in next,af[ag]do af.this_layout[ai]=aj end;E=af.this_layout end;local function ak()Q.pos.x,Q.pos.y=E.lLines()R.pos.x,R.pos.y,R.text_alignment=E.lCursor()S.pos.x,S.pos.y,S.size.x,S.size.y=E.bCompact()T.pos.x,T.pos.y,T.size.x,T.size.y=E.mEditor()U.pos.x,U.pos.y=E.lPath()W.pos.x,W.pos.y,W.size.x,W.size.y=E.bFile()X.pos.x,X.pos.y,X.size.x,X.size.y=E.wFileMenu()Y.pos.x,Y.pos.y,Y.size.x,Y.size.y=E.bNewOpen()Z.pos.x,Z.pos.y,Z.size.x,Z.size.y=E.bSave()_.pos.x,_.pos.y,_.size.x,_.size.y=E.bSaveAs()a0.pos.x,a0.pos.y,a0.size.x,a0.size.y=E.bDelete()a1.pos.x,a1.pos.y,a1.size.x,a1.size.y=E.bGoto()a2.pos.x,a2.pos.y,a2.size.x,a2.size.y=E.bRun()a3.pos.x,a3.pos.y,a3.size.x,a3.size.y=E.bSHL()a4.pos.x,a4.pos.y,a4.size.x,a4.size.y=E.bQuit()a5.pos.x,a5.pos.y=E.lInputTitle()a6.pos.x,a6.pos.y,a6.size.x,a6.size.y=E.mInput()a7.pos.x,a7.pos.y,a7.text=E.lInputTip()a8.pos.x,a8.pos.y,a8.size.x,a8.size.y=E.wOverWrite()a8.resizing.min_size=a8.size:duplicate()a8.resizing.max_size=a8.size:duplicate()*2;a9.pos.x,a9.pos.y=E.lOW()aa.pos.x,aa.pos.y,aa.size.x,aa.size.y=E.bOWAccept()ab.pos.x,ab.pos.y,ab.size.x,ab.size.y=E.bOWReject()a9.offset=b.math_utils.Vector2.new(0,b.math_utils.round(a8.size.y/2)-a9.pos.y)for ai,al in next,O do al.stats.pos=b.math_utils.Vector2(E.stats())al.stats:update_pos()end end;local function am()for ai,an in next,L.monitors do b.monitor_utils.better_clear(an)end end;local function ao()T.rich_text={}if T.focussed then T.rich_text[T.cursor.pos.y]={["background"]=p}end end;local ap={}local function aq(ar,as)local at=b.color_utils.colors[n]local au=b.color_utils.colors[w]local av=b.color_utils.colors[x]local function aw(ax,ay,az)return ax:sub(0,ay-1)..az..ax:sub(ay+1)end;ar=ar or T.first_visible_line;as=as or T.first_visible_line+T.size.y-1;local aA="code"local aB="none"local aC=false;local aD=""local aE=ap[ar-1]if aE then aA=aE.state;aB=aE.nested_state;aC=aE.quote_ignore;aD=aE.current_quote end;for aF=ar,as do if not T.rich_text[aF]then T.rich_text[aF]={}end;local aG=T.lines[aF]if not aG then break end;local aH=""local aI=b.string_utils.split(aG,"[^%w_]")local ay=0;for ai,J in next,aI do for aJ,aK in next,F do if aK[J]then aH=aH..string.rep(b.color_utils.colors[n],ay-#aH)..string.rep(b.color_utils.colors[aJ],#J)end end;ay=ay+#J+1 end;aH=aH..b.color_utils.colors[n]for aL=1,#aG do local az=aG:sub(aL,aL)if aA=="code"then if az=="\""then aH=aw(aH,aL,av)if aL~=#aG then aA="string"aD="\""end elseif az=="'"then aH=aw(aH,aL,av)if aL~=#aG then aA="string"aD="'"end elseif aG:sub(aL,aL+1)=="[["then aA="long-string"aH=aw(aH,aL,av)elseif aG:sub(aL,aL+1)=="--"then if aG:sub(aL,aL+3)=="--[["then aA="closed-comment"aH=aw(aH,aL,au)else aA="comment"aH=aw(aH,aL,au)end elseif aL>#aH then aH=aw(aH,aL,at)end elseif aA=="string"then aH=aw(aH,aL,av)if az=="\\"then if aL==#aG then aB="multi-line"else local aM=aG:sub(aL+1,aL+1)if aM==aD then aC=true end end elseif aB=="none"and aL==#aG then aC=false;aD=""aA="code"elseif az==aD then if aC then aC=false else aD=""aA="code"aB="none"end else aB="none"end elseif aA=="long-string"then aH=aw(aH,aL,av)if aG:sub(aL,aL+1)=="]]"then aH=aw(aH,aL+1,av)aA="code"end elseif aA=="comment"then aH=aH:sub(0,aL-1)aA="code"break elseif aA=="closed-comment"then aH=aw(aH,aL,au)if aG:sub(aL,aL+1)=="]]"then aH=aw(aH,aL+1,au)aA="code"end end end;ap[aF]={["state"]=aA,["nested_state"]=aB,["quote_ignore"]=aC,["current_quote"]=aD}T.rich_text[aF].foreground=aH end end;local function aN(aO)aO=shell.resolve(aO)if#aO:gsub(" ","")==0 then aO=A end;if b.string_utils.get_extension(aO)==""then aO=aO..d end;if fs.isDir(aO)then return end;T:clear()B=aO;if fs.exists(aO)then local aP=fs.open(aO,"r")local aQ=pcall(T.write,T,aP.readAll())if not aQ then am()P:close()error("It took too long to open the file")end;aP.close()else local aP=fs.open(aO,"w")aP.write("")aP.close()end;T:set_cursor(1,1)if z then aq(1)end end;local function aR(aO)aO=shell.resolve(aO)if#aO:gsub(" ","")==0 then aO=B end;if fs.isDir(aO)then return end;if fs.isReadOnly(aO)then return end;B=aO;local aP=fs.open(aO,"w")aP.write(b.string_utils.join(T.lines,"\n"))aP.close()end;V:set_callback(b.ONCLOCK,function(self)aq(self.starting_line,#T.lines)self.starting_line=nil end)W:set_callback(b.ONPRESS,function(self)X.hidden=not self.active end)X:set_callback(b.ONFAILEDPRESS,function(self)if W.active then self.hidden=true;W.active=false end end)Y:set_callback(b.ONTIMEOUT,function(self)a5.text=" New File / Open File "a6.bound=self;M:start()end)Y.callbacks.onActionComplete=function(aO)if aO then aO=shell.resolve(aO)aN(aO)else aN(A)end end;Z:set_callback(b.ONTIMEOUT,function(self)aR(B)end)_:set_callback(b.ONTIMEOUT,function(self)a5.text=" Save File As "a6.bound=self;M:start()end)_.callbacks.onActionComplete=function(aO)if not aO then aO=B end;aO=shell.resolve(aO)if fs.exists(aO)then aa.bound=_;_.path=aO;N:start()else aR(aO)end end;_.callbacks.onOverWrite=function()aR(_.path)_.path=nil end;a0:set_callback(b.ONTIMEOUT,function(self)if fs.isReadOnly(B)then return end;fs.delete(B)end)a1:set_callback(b.ONTIMEOUT,function(self)a5.text=" Go to Line "a6.bound=self;a6.whitelist=C;M:start()end)a1.callbacks.onActionComplete=function(aG)T:set_cursor(1,tonumber(aG)or T.cursor.pos.y)end;a2:set_callback(b.ONTIMEOUT,function(self)aR(B)local aS=shell.openTab(B)shell.switchTab(aS)end)a3:set_callback(b.ONPRESS,function(self)z=self.active;if z then aq(1)else ao()end end)a4:set_callback(b.ONTIMEOUT,function(self)L:stop()end)S:set_callback(b.ONTIMEOUT,function(self)local aT={}for aU=1,#T.lines do local aG=T.lines[aU]if not aG then break end;local aV=aG:gsub(" ","")if#aV==0 then table.insert(aT,1,aU)end end;for ai,aW in next,aT do table.remove(T.lines,aW)end;T:set_cursor(1,1)if z then aq(1)end end)T:set_callback(b.ONFOCUS,function(self)if not self.focussed then local aX=self.rich_text[self.cursor.pos.y]if aX and aX.foreground then aX.background=nil else self.rich_text[self.cursor.pos.y]=nil end end end)T:set_callback(b.ONMOUSESCROLL,function(self)return true end)T:set_callback(b.ONCURSORCHANGE,function(self,aY,aZ)local a_=self.rich_text[self.cursor.pos.y]if a_ and a_["foreground"]then a_["background"]=nil else self.rich_text[self.cursor.pos.y]=nil end;if self.focussed then local b0=self.rich_text[aZ]if b0 and b0["foreground"]then b0["background"]=p else self.rich_text[aZ]={["background"]=p}end end end)T:set_callback(b.ONWRITE,function(self,b1,b2)if z then if V.starting_line then V.starting_line=math.min(V.starting_line,math.max(1,self.cursor.pos.y-#b2+1))else V.starting_line=math.max(1,self.cursor.pos.y-#b2+1)end;V:start()end end)L:set_callback(b.ONCLOCK,function(self)Q.text=string.format("Lines: %d",#T.lines)R.text="Cursor: "..tostring(T.cursor.pos)U.text="/"..B end)L:set_callback(b.ONEVENT,function(self,b3)if b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_LEFTALT,b.KEY_S)then _.callbacks.onPress(_,b3)elseif b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_N)then Y.callbacks.onPress(Y,b3)elseif b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_S)then Z.callbacks.onTimeout(Z,b3)elseif b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_G)then a1.callbacks.onPress(a1,b3)elseif b.input:are_keys_pressed(true,b.KEY_LEFTALT,b.KEY_R)then a2.callbacks.onTimeout(a2,b3)elseif not T.focussed then if b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_LEFT)then T.first_visible_char=math.max(1,T.first_visible_char-1)elseif b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_RIGHT)then T.first_visible_char=T.first_visible_char+1 end;if b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_UP)then T.first_visible_line=math.max(1,T.first_visible_line-1)elseif b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_DOWN)then T.first_visible_line=math.min(#T.lines,T.first_visible_line+1)end end;if b3.name==b.MOUSESCROLL then T.first_visible_line=b.math_utils.constrain(T.first_visible_line+b3.direction,1,#T.lines)elseif b3.name==b.TERMRESIZE then ac()ak()end;if z and T.first_visible_line+T.size.y-1>#ap then aq(#ap)end end)a6:set_callback(b.ONKEY,function(self,b3)if b3.key==b.KEY_ENTER then self.bound.callbacks.onActionComplete(self.lines[1])M:stop()return true end end)M:set_callback(b.ONSTART,function(self)a6:focus(true)end)M:set_callback(b.ONEVENT,function(self,b3)if b3.name==b.KEY then if b3.key==b.KEY_LEFTCTRL or b3.key==b.KEY_RIGHTCTRL then M:stop()return true end elseif b3.name==b.TERMRESIZE then ac()ak()end end)M:set_callback(b.ONSTOP,function(self)a6.bound=nil;a6.whitelist={}a6:clear()a6:focus(false)end)a8:set_callback(b.ONRESIZE,function(self,b4,b5,b6,b7)a9.pos=b.math_utils.Vector2(self.size.x/2,self.size.y/2)-a9.offset;aa.pos.y=self.size.y-1;ab.pos.x=self.size.x-2;ab.pos.y=self.size.y-1 end)aa:set_callback(b.ONTIMEOUT,function(self)self.bound.callbacks.onOverWrite()self.bound=nil;N:stop()end)ab:set_callback(b.ONTIMEOUT,function(self)N:stop()end)N:set_callback(b.ONEVENT,function(self,b3)if b3.name==b.TERMRESIZE then ac()ak()end end)ac()ak()if#D>0 then if D[1]:lower()=="help"then local b2={{text="Note <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - open <PATH> (opens file at PATH)",foreground=colors.yellow,background=nil},{text=" - multi <MONITORS> (sets MONITORS\n   as io for the app)",foreground=colors.green,background=nil},{text=" - wss <MODEM_SIDE> [BROADCAST_INTERVAL]\n   (hosts a WSS server using the modem\n   on MODEM_SIDE and updates connected users\n   every BROADCAST_INTERVAL seconds)",foreground=colors.blue,background=nil}}for ai,aG in next,b2 do b.monitor_utils.better_print(term,aG.foreground,aG.background,aG.text)end;return end;local b8={open={},multi={},wss={}}local b9;for ai,K in next,D do if b9 then table.insert(b8[b9],K)end;local ba=K:lower()if ba~=b9 and b8[ba]then b9=ba end end;if#b8.open>0 then B=b8.open[1]end;if#b8.multi>0 then table.insert(b8.multi,1,"terminal")for ai,al in next,O do al:set_monitors(b8.multi)end end;if#b8.wss>0 then if b8.wss[1]then local bb=b8.wss[1]if peripheral.getType(bb)~="modem"then b.monitor_utils.better_print(term,colors.red,nil,"Modem: ",bb," wasn't found.")return end;P:use_side(bb)P:host()P.broadcast_clock.interval=tonumber(b8.wss[2])or P.broadcast_clock.interval end end end;aN(B)L:set_elements({W,X,Q,R,S,T,U,V,P})M:set_elements({a5,a6,a7,P})N:set_elements({a8,P})for ai,al in next,O do al.stats.elements.FPS_label.text_alignment=b.ALIGN_RIGHT;al.stats.elements.EPS_label.text_alignment=b.ALIGN_RIGHT;al.stats:show(h)al.options.raw_mode=true;al.options.stop_on_terminate=false end;L.options.stop_on_terminate=true;L:start()am()P:close()