local a=settings.get("YAGUI_PATH")if not(type(a)=="string")then printError("YAGUI is not installed, please install it by opening it with argument \"setup\".")return end;if not fs.exists(a)then printError("Couldn't find YAGUI in path: \""..a.."\", Please reinstall it by opening it with argument \"setup\".")return end;local b=dofile(a)local c="new"local d=".txt"local e=1;local f=60;local g=6;local h=true;local i=0.5;local j=string.char(149)local k=0.5;local l=colors.white;local m=nil;local n=colors.white;local o=colors.black;local p=colors.gray;local q=colors.lightGray;local r=colors.green;local s=colors.red;local t=colors.yellow;local u=colors.blue;local v=colors.orange;local w=colors.green;local x=colors.red;local y=true;local z=true;local A=c..d;local B=shell.resolve(A)local C={"1","2","3","4","5","6","7","8","9","0"}local D={...}b.screen_buffer.buffer.background=p;local E={init=function(self)local F,G=b.generic_utils.get_computer_type()self.this_layout=self.all;for H,I in next,self[F]do self.this_layout[H]=I end end,["all"]={lLines=function()return 9,1 end,lCursor=function()return 22,1 end,bCompact=function()return 51,1,1,1 end,mEditor=function()return 5,2,47,17 end,lPath=function()return 1,19 end,bFile=function()return 1,1,4,1 end,wFileMenu=function()return 1,2,10,8 end,bNewOpen=function()return 1,1,10,1 end,bSave=function()return 1,2,10,1 end,bSaveAs=function()return 1,3,10,1 end,bDelete=function()return 1,4,10,1 end,bGoto=function()return 1,5,10,1 end,bRun=function()return 1,6,10,1 end,bSHL=function()return 1,7,10,1 end,bQuit=function()return 1,8,10,1 end,lInputTitle=function()return 2,9 end,mInput=function()return 2,10,49,1 end,lInputTip=function()return 3,12,"You can press CONTROL to cancel."end,wOverWrite=function()return 18,7,15,6 end,lOW=function()return 3,2 end,bOWAccept=function()return 2,5,3,1 end,bOWReject=function()return 13,5,2,1 end,stats=function()return 45,18 end},[b.COMPUTER]={},[b.TURTLE]={bCompact=function()return 39,1,1,1 end,mEditor=function()return 5,2,35,11 end,lPath=function()return 1,13 end,lInputTitle=function()return 2,5 end,mInput=function()return 2,6,37,1 end,lInputTip=function()return 3,8,"You can press CONTROL to cancel."end,wOverWrite=function()return 12,4,15,6 end,stats=function()return 33,12 end},[b.POCKET]={lCursor=function()return 1,19 end,bCompact=function()return 26,1,1,1 end,mEditor=function()return 3,2,24,17 end,lPath=function()return 1,20 end,mInput=function()return 2,10,24,1 end,lInputTip=function()return 8,12,"You can press\nCONTROL to cancel."end,wOverWrite=function()return 6,7,15,6 end,stats=function()return 21,19 end},["this_layout"]={}}E:init()local J={[t]={["and"]=true,["break"]=true,["do"]=true,["else"]=true,["elseif"]=true,["end"]=true,["false"]=true,["for"]=true,["function"]=true,["if"]=true,["in"]=true,["local"]=true,["nil"]=true,["not"]=true,["or"]=true,["repeat"]=true,["return"]=true,["then"]=true,["true"]=true,["until"]=true,["while"]=true},[u]={["bit"]=true,["colors"]=true,["colours"]=true,["commands"]=true,["coroutine"]=true,["disk"]=true,["fs"]=true,["gps"]=true,["help"]=true,["http"]=true,["io"]=true,["keys"]=true,["math"]=true,["multishell"]=true,["os"]=true,["paintutils"]=true,["parallel"]=true,["peripheral"]=true,["rednet"]=true,["redstone"]=true,["rs"]=true,["settings"]=true,["shell"]=true,["string"]=true,["table"]=true,["term"]=true,["textutils"]=true,["turtle"]=true,["pocket"]=true,["vector"]=true,["window"]=true,["YAGUI"]=true},[v]={["info"]=true,["generic_utils"]=true,["string_utils"]=true,["math_utils"]=true,["table_utils"]=true,["color_utils"]=true,["event_utils"]=true,["setting_utils"]=true,["monitor_utils"]=true,["screen_buffer"]=true,["input"]=true,["WSS"]=true,["wireless_screen_share"]=true,["gui_elements"]=true,["Loop"]=true,["self"]=true}}local K=b.Loop(f,g)local L=b.Loop(f,g)local M=b.Loop(f,g)local N={["main"]=K,["input"]=L,["overwrite"]=M}local O=b.WSS(e)local P=b.gui_elements.Label(9,1,"Lines: 0",n)local Q=b.gui_elements.Label(21,1,"Cursor: (1; 1)",n)local R=b.gui_elements.Button(51,1,1,1,"C",n,r,s)local S=b.gui_elements.Memo(5,2,47,17,n,o)local T=b.gui_elements.Label(1,19,"/path/",n)P.pos.x,P.pos.y=E.this_layout.lLines()Q.pos.x,Q.pos.y=E.this_layout.lCursor()R.pos.x,R.pos.y,R.size.x,R.size.y=E.this_layout.bCompact()S.pos.x,S.pos.y,S.size.x,S.size.y=E.this_layout.mEditor()T.pos.x,T.pos.y=E.this_layout.lPath()R.timed.enabled=true;R.timed.clock.interval=i;R.shortcut={b.KEY_LEFTCTRL,b.KEY_LEFTSHIFT,b.KEY_C}S.cursor.text=j;S.cursor.blink.interval=k;S.colors.cursor=m;S.colors.cursor_text=l;local U=b.gui_elements.Button(1,1,4,1,"File",n,q,p)local V=b.gui_elements.Window(1,2,10,8,p,y)local W=b.gui_elements.Button(1,2,10,1,"New/Open",n,q,p)local X=b.gui_elements.Button(1,3,10,1,"Save",n,q,p)local Y=b.gui_elements.Button(1,4,10,1,"SaveAs",n,q,p)local Z=b.gui_elements.Button(1,5,10,1,"Delete",n,q,p)local _=b.gui_elements.Button(1,6,10,1,"Goto",n,q,p)local a0=b.gui_elements.Button(1,7,10,1,"Run",n,q,p)local a1=b.gui_elements.Button(1,8,10,1,"SyntaxHL",n,q,p)local a2=b.gui_elements.Button(1,9,10,1,"Exit",n,r,s)U.pos.x,U.pos.y,U.size.x,U.size.y=E.this_layout.bFile()V.pos.x,V.pos.y,V.size.x,V.size.y=E.this_layout.wFileMenu()W.pos.x,W.pos.y,W.size.x,W.size.y=E.this_layout.bNewOpen()X.pos.x,X.pos.y,X.size.x,X.size.y=E.this_layout.bSave()Y.pos.x,Y.pos.y,Y.size.x,Y.size.y=E.this_layout.bSaveAs()Z.pos.x,Z.pos.y,Z.size.x,Z.size.y=E.this_layout.bDelete()_.pos.x,_.pos.y,_.size.x,_.size.y=E.this_layout.bGoto()a0.pos.x,a0.pos.y,a0.size.x,a0.size.y=E.this_layout.bRun()a1.pos.x,a1.pos.y,a1.size.x,a1.size.y=E.this_layout.bSHL()a2.pos.x,a2.pos.y,a2.size.x,a2.size.y=E.this_layout.bQuit()V.draw_priority=b.LOW_PRIORITY;V.hidden=true;V:set_elements({W,X,Y,Z,_,a0,a1,a2})X.timed.enabled=true;X.timed.clock.interval=i;Z.timed.enabled=true;Z.timed.clock.interval=i;a0.timed.enabled=true;a0.timed.clock.interval=i;a2.timed.enabled=true;a2.timed.clock.interval=i;U.shortcut={b.KEY_LEFTCTRL,b.KEY_TAB}a1.active=z;local a3=b.gui_elements.Label(2,9,"",n)local a4=b.gui_elements.Memo(2,10,49,1,n,q)local a5=b.gui_elements.Label(3,12,"You can press CONTROL to cancel.",n)a3.pos.x,a3.pos.y=E.this_layout.lInputTitle()a4.pos.x,a4.pos.y,a4.size.x,a4.size.y=E.this_layout.mInput()a5.pos.x,a5.pos.y,a5.text=E.this_layout.lInputTip()a4.limits=b.math_utils.Vector2(0,1)a4.cursor.text=j;a4.cursor.blink.interval=k;a4.colors.cursor=m;a4.colors.cursor_text=l;local a6=b.gui_elements.Window(18,7,15,6,q,y)local a7=b.gui_elements.Label(20,8,"Do you want\nto overwrite?",n)local a8=b.gui_elements.Button(19,11,3,1,"Yes",n,p,q)local a9=b.gui_elements.Button(30,11,2,1,"No",n,p,q)a6.pos.x,a6.pos.y,a6.size.x,a6.size.y=E.this_layout.wOverWrite()a7.pos.x,a7.pos.y=E.this_layout.lOW()a8.pos.x,a8.pos.y,a8.size.x,a8.size.y=E.this_layout.bOWAccept()a9.pos.x,a9.pos.y,a9.size.x,a9.size.y=E.this_layout.bOWReject()a6:set_elements({a7,a8,a9})a8.timed.enabled=true;a8.timed.clock.interval=i;a9.timed.enabled=true;a9.timed.clock.interval=i;a8.shortcut={b.KEY_Y}a9.shortcut={b.KEY_N}a7.offset=b.math_utils.Vector2.new(b.math_utils.round_numbers(a6.size.x/2,a6.size.y/2))-a7.pos;local function aa()for H,ab in next,K.monitors do b.monitor_utils.better_clear(ab)end end;local function ac()S.rich_text={}if S.focussed then S.rich_text[S.cursor.pos.y]={["background"]=p}end end;local ad={}local function ae(af,ag)local ah=b.color_utils.colors[n]local ai=b.color_utils.colors[w]local aj=b.color_utils.colors[x]local function ak(al,am,an)return al:sub(0,am-1)..an..al:sub(am+1)end;af=af or S.first_visible_line;ag=ag or S.first_visible_line+S.size.y-1;local ao="code"local ap="none"local aq=false;local ar=""local as=ad[af-1]if as then ao=as.state;ap=as.nested_state;aq=as.quote_ignore;ar=as.current_quote end;for at=af,ag do if not S.rich_text[at]then S.rich_text[at]={}end;local au=S.lines[at]if not au then break end;local av=""local aw=b.string_utils.split(au,"[^%w_]")local am=0;for H,ax in next,aw do for ay,az in next,J do if az[ax]then av=av..string.rep(b.color_utils.colors[n],am-#av)..string.rep(b.color_utils.colors[ay],#ax)end end;am=am+#ax+1 end;av=av..b.color_utils.colors[n]for aA=1,#au do local an=au:sub(aA,aA)if ao=="code"then if an=="\""then av=ak(av,aA,aj)if aA~=#au then ao="string"ar="\""end elseif an=="'"then av=ak(av,aA,aj)if aA~=#au then ao="string"ar="'"end elseif au:sub(aA,aA+1)=="[["then ao="long-string"av=ak(av,aA,aj)elseif au:sub(aA,aA+1)=="--"then if au:sub(aA,aA+3)=="--[["then ao="closed-comment"av=ak(av,aA,ai)else ao="comment"av=ak(av,aA,ai)end elseif aA>#av then av=ak(av,aA,ah)end elseif ao=="string"then av=ak(av,aA,aj)if an=="\\"then if aA==#au then ap="multi-line"else local aB=au:sub(aA+1,aA+1)if aB==ar then aq=true end end elseif ap=="none"and aA==#au then aq=false;ar=""ao="code"elseif an==ar then if aq then aq=false else ar=""ao="code"ap="none"end else ap="none"end elseif ao=="long-string"then av=ak(av,aA,aj)if au:sub(aA,aA+1)=="]]"then av=ak(av,aA+1,aj)ao="code"end elseif ao=="comment"then av=av:sub(0,aA-1)ao="code"break elseif ao=="closed-comment"then av=ak(av,aA,ai)if au:sub(aA,aA+1)=="]]"then av=ak(av,aA+1,ai)ao="code"end end end;ad[at]={["state"]=ao,["nested_state"]=ap,["quote_ignore"]=aq,["current_quote"]=ar}S.rich_text[at].foreground=av end end;local function aC(aD)aD=shell.resolve(aD)if#aD:gsub(" ","")==0 then aD=A end;if b.string_utils.get_extension(aD)==""then aD=aD..d end;if fs.isDir(aD)then return end;S:clear()B=aD;if fs.exists(aD)then local aE=fs.open(aD,"r")while true do local au=aE.readLine()if au then table.insert(S.lines,au)else break end end;aE.close()else local aE=fs.open(aD,"w")aE.write("")aE.close()end;S:set_cursor(1,1)if z then ae(1)end end;local function aF(aD)aD=shell.resolve(aD)if#aD:gsub(" ","")==0 then aD=B end;if fs.isDir(aD)then return end;if fs.isReadOnly(aD)then return end;B=aD;local aE=fs.open(aD,"w")aE.write(b.string_utils.join(S.lines,"\n"))aE.close()end;b.generic_utils.set_callback(U,b.ONPRESS,function(self)V.hidden=not self.active end)b.generic_utils.set_callback(V,b.ONFAILEDPRESS,function(self)if U.active then self.hidden=true;U.active=false end end)b.generic_utils.set_callback(W,b.ONPRESS,function(self)self.active=false;a3.text="New File / Open File"a4.bound=self;L:start()end)W.callbacks.onActionComplete=function(aD)if aD then aD=shell.resolve(aD)aC(aD)else aC(A)end end;b.generic_utils.set_callback(X,b.ONTIMEOUT,function(self)aF(B)end)b.generic_utils.set_callback(Y,b.ONPRESS,function(self)self.active=false;a3.text="Save File As"a4.bound=self;L:start()end)Y.callbacks.onActionComplete=function(aD)if not aD then aD=B end;aD=shell.resolve(aD)if fs.exists(aD)then a8.bound=Y;Y.path=aD;M:start()else aF(aD)end end;Y.callbacks.onOverWrite=function()aF(Y.path)Y.path=nil end;b.generic_utils.set_callback(Z,b.ONTIMEOUT,function(self)if fs.isReadOnly(B)then return end;fs.delete(B)end)b.generic_utils.set_callback(_,b.ONPRESS,function(self)self.active=false;a3.text="Line"a4.bound=self;a4.whitelist=C;L:start()end)_.callbacks.onActionComplete=function(au)S:set_cursor(1,tonumber(au)or S.cursor.pos.y)end;b.generic_utils.set_callback(a0,b.ONTIMEOUT,function(self)aF(B)local aG=shell.openTab(B)shell.switchTab(aG)end)b.generic_utils.set_callback(a1,b.ONPRESS,function(self)z=self.active;if z then ae(1)else ac()end end)b.generic_utils.set_callback(a2,b.ONTIMEOUT,function(self)K:stop()end)b.generic_utils.set_callback(R,b.ONTIMEOUT,function(self)local aH={}for aI=1,#S.lines do local au=S.lines[aI]if not au then break end;local aJ=au:gsub(" ","")if#aJ==0 then table.insert(aH,1,aI)end end;for H,aK in next,aH do table.remove(S.lines,aK)end;S:set_cursor(1,1)if z then ae(1)end end)b.generic_utils.set_callback(S,b.ONFOCUS,function(self)if not self.focussed then local aL=self.rich_text[self.cursor.pos.y]if aL and aL.foreground then aL.background=nil else self.rich_text[self.cursor.pos.y]=nil end end end)b.generic_utils.set_callback(S,b.ONMOUSESCROLL,function(self)return true end)b.generic_utils.set_callback(S,b.ONCURSORCHANGE,function(self,aM,aN)local aO=self.rich_text[self.cursor.pos.y]if aO and aO["foreground"]then aO["background"]=nil else self.rich_text[self.cursor.pos.y]=nil end;if self.focussed then local aP=self.rich_text[aN]if aP and aP["foreground"]then aP["background"]=p else self.rich_text[aN]={["background"]=p}end end end)b.generic_utils.set_callback(S,b.ONWRITE,function(self)if z then ae(math.max(1,self.cursor.pos.y-2),#self.lines)end end)b.generic_utils.set_callback(K,b.ONCLOCK,function(self)P.text=string.format("Lines: %d",#S.lines)Q.text="Cursor: "..tostring(S.cursor.pos)T.text="/"..B end)b.generic_utils.set_callback(K,b.ONEVENT,function(self,aQ)if b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_LEFTALT,b.KEY_S)then Y.callbacks.onPress(Y,aQ)elseif b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_N)then W.callbacks.onPress(W,aQ)elseif b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_S)then X.callbacks.onTimeout(X,aQ)elseif b.input:are_keys_pressed(true,b.KEY_LEFTCTRL,b.KEY_G)then _.callbacks.onPress(_,aQ)elseif b.input:are_keys_pressed(true,b.KEY_LEFTALT,b.KEY_R)then a0.callbacks.onTimeout(a0,aQ)elseif not S.focussed then if b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_LEFT)then S.first_visible_char=math.max(1,S.first_visible_char-1)elseif b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_RIGHT)then S.first_visible_char=S.first_visible_char+1 end;if b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_UP)then S.first_visible_line=math.max(1,S.first_visible_line-1)elseif b.input:are_keys_pressed(false,b.KEY_LEFTCTRL,b.KEY_DOWN)then S.first_visible_line=math.min(#S.lines,S.first_visible_line+1)end end;if aQ.name==b.MOUSESCROLL then S.first_visible_line=b.math_utils.constrain(S.first_visible_line+aQ.direction,1,#S.lines)end;if z and S.first_visible_line+S.size.y-1>#ad then ae(#ad)end end)b.generic_utils.set_callback(a4,b.ONKEY,function(self,aQ)if aQ.key==b.KEY_ENTER then self.bound.callbacks.onActionComplete(self.lines[1])L:stop()return true end end)b.generic_utils.set_callback(L,b.ONSTART,function(self)a4:focus(true)end)b.generic_utils.set_callback(L,b.ONEVENT,function(self,aQ)if aQ.name==b.KEY then if aQ.key==b.KEY_LEFTCTRL or aQ.key==b.KEY_RIGHTCTRL then L:stop()return true end end end)b.generic_utils.set_callback(L,b.ONSTOP,function(self)a4.bound=nil;a4.whitelist={}a4:clear()a4:focus(false)end)b.generic_utils.set_callback(a6,b.ONRESIZE,function(self,aR,aS,aT,aU)a7.pos=b.math_utils.Vector2.new(b.math_utils.round_numbers(self.size.x/2,self.size.y/2))-a7.offset;a8.pos.y=self.size.y-1;a9.pos.x=self.size.x-2;a9.pos.y=self.size.y-1 end)b.generic_utils.set_callback(a8,b.ONTIMEOUT,function(self)self.bound.callbacks.onOverWrite()self.bound=nil;M:stop()end)b.generic_utils.set_callback(a9,b.ONTIMEOUT,function(self)M:stop()end)if#D>0 then if D[1]:lower()=="help"then local aV={{text="Note <COMMAND>",foreground=colors.green,background=nil},{text=" - help (shows this list of commands)",foreground=colors.blue,background=nil},{text=" - open <PATH> (opens file at PATH)",foreground=colors.yellow,background=nil},{text=" - multi <MONITORS> (sets MONITORS\n   as io for the app)",foreground=colors.green,background=nil},{text=" - wss <MODEM_SIDE> [BROADCAST_INTERVAL]\n   (hosts a WSS server using the modem\n   on MODEM_SIDE and updates connected users\n   every BROADCAST_INTERVAL seconds)",foreground=colors.blue,background=nil}}for H,au in next,aV do b.monitor_utils.better_print(term,au.foreground,au.background,au.text)end;return end;local aW={open={},multi={},wss={}}local aX;for H,aY in next,D do if aX then table.insert(aW[aX],aY)end;local aZ=aY:lower()if aZ~=aX and aW[aZ]then aX=aZ end end;if#aW.open>0 then B=aW.open[1]end;if#aW.multi>0 then table.insert(aW.multi,1,"terminal")for H,a_ in next,N do a_:set_monitors(aW.multi)end end;if#aW.wss>0 then if aW.wss[1]then local b0=aW.wss[1]if peripheral.getType(b0)~="modem"then b.monitor_utils.better_print(term,colors.red,nil,"Modem: ",b0," wasn't found.")return end;O:use_side(b0)O:host()O.broadcast_clock.interval=tonumber(aW.wss[2])or O.broadcast_clock.interval end end end;aC(B)K:set_elements({U,V,P,Q,R,S,T,O})L:set_elements({a3,a4,a5,O})M:set_elements({a6,O})for H,a_ in next,N do a_.stats.pos=b.math_utils.Vector2(E.this_layout.stats())a_.stats:enable(h)a_.options.raw_mode=true;a_.options.stop_on_terminate=false end;K.options.stop_on_terminate=true;K:start()aa()O:close()